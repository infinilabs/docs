<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>INFINI Console</title><link>/console/main/</link><description>Recent content on INFINI Console</description><generator>Hugo -- gohugo.io</generator><atom:link href="/console/main/index.xml" rel="self" type="application/rss+xml"/><item><title>Dev Tools</title><link>/console/main/docs/reference/dev-tools/dev-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/dev-tools/dev-tools/</guid><description>Dev Tools # Introduction # Use Dev Tools to quickly write and execute Elasticsearch queries and other elasticsearch APIs. When installation verification is enabled, all requests will go through API level permission verification
Open Dev Tools # Use the Ctrl+Shift+O shortcut to open or click the icon in the upper right corner of the console.
Execute request shortcuts # Command+Enter or Ctrl+Enter
Multi-cluster multi-tab page support # The Dev Tools supports the use of tab pages to open multiple clusters at the same time.</description></item><item><title>Index</title><link>/console/main/docs/reference/data/indices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/data/indices/</guid><description>Index management # Index list # The index list includes addition, deletion, modification, and lookup operations on indexes.
New index # Input the new index name and index settings to complete the addition.
Index details # You can view the index health status, number of shards, number of documents, storage size and other details, as well as view and modify Mappings and Edit settings.</description></item><item><title>Messages</title><link>/console/main/docs/reference/alerting/message/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/alerting/message/</guid><description>Messages # Introduction # By default, the message center displays the alerting events that are currently occurring in the system, which is convenient for administrators to quickly preview the execution status of the system.
Message list # The message list aggregates all triggered alerting events. If each alerting rule repeatedly triggers multiple alerting messages, only one will be aggregated and displayed here. Click the details to see more information.</description></item><item><title>Platform Overview</title><link>/console/main/docs/reference/platform/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/platform/overview/</guid><description>Platform Overview # Introduction # You can view the main indicators at these levels(cluster, node, indice and host) to understand the operation status.
Clusters # By switching between list and card views, users can explore cluster status information from multiple perspectives.
1. List mode # 2. Card mode # Clicking on a single row provides a quick preview of key cluster metrics and access to more detailed cluster information.</description></item><item><title>Runtime</title><link>/console/main/docs/reference/resource/runtime/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/resource/runtime/</guid><description>Runtime Management # Introduction # Runtime Management allows for quick and convenient administration of multiple runtime instances (such as gateway, console, agent, etc.).
Instance List # You can view the list of created instances.
Create Instance # Step 1: Enter the instance address, and optionally enable TLS and authentication (if authentication is enabled, a username and password are required).
Step 2: Confirm the information, and optionally modify the instance name, tags, and description.</description></item><item><title>Alias</title><link>/console/main/docs/reference/data/alias/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/data/alias/</guid><description>Alias Management # Alias list # The alias list includes addition, deletion, modification, and search operations for aliases.
New alias # Alias: Input an alias name Index: Select the target index corresponding to the alias, and use (*) to bind multiple indexes. Is Write Index: specify whether the selected index is writable. If the alias only binds one index, the index is writable by default; if multiple indexes are bound by (*), it is most necessary to specify one of the indexes as writable .</description></item><item><title>Cluster</title><link>/console/main/docs/reference/resource/cluster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/resource/cluster/</guid><description>Cluster Management # Introduction # Cluster management can quickly and easily help us manage multiple Elasticsearch clusters across versions.
Cluster list # The registered Elasticsearch cluster can be queried in the cluster list
Cluster registration # The first step is to fill in the cluster address, and enable TLS and authentication as needed (you need to input a user name and password after enabling authentication).
The second step is to confirm the information</description></item><item><title>Cluster Monitoring</title><link>/console/main/docs/reference/platform/monitoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/platform/monitoring/</guid><description>Cluster Monitoring # Introduction # When the monitoring of the registered cluster is enabled, the INFINI Console will periodically collect data from the target cluster according to the corresponding configuration. Including some metrics at the cluster, node, and index level. These metrics can then be observed in cluster monitoring to understand the running status of the target cluster.
List of Elasticsearch API permissions required for monitoring :
_cluster/health _cluster/stats _cat/shards _nodes/&amp;lt;node_id&amp;gt;/stats _cat/indices _stats _cluster/state _nodes _alias _cluster/settings Enable Cluster Monitoring # When registering the cluster or modifying the cluster configuration, you can see the following interface</description></item><item><title>Common Commands</title><link>/console/main/docs/reference/dev-tools/command/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/dev-tools/command/</guid><description>Common Commands # Introduction # Common commands are used to save frequently used Elasticsearch requests in Dev toolss, so that if you need to use them later, Just use the LOAD command in the Dev tools to load, and it can be used quickly.
Save frequently used commands # Open the Dev tools (Ctrl+shift+o) in the upper right corner of the console, and select the Elasticsearch request to be saved in the Dev tools (Supports selecting multiple requests at one time and saving them as common commands), after selecting, click Save As Command in the toolbar to submit.</description></item><item><title>Discover</title><link>/console/main/docs/reference/data-insight/discover/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/data-insight/discover/</guid><description>Discover # Introduction # In Discover, you can search and query the data under the index or view according to conditions such as time and fields.
Search toolbar # Index (View) # Search # Time Range # Field Filter # Save Search # Document Details # Click the &amp;quot; &amp;gt; &amp;quot; button on the left side of a document row to expand and view detailed information.</description></item><item><title>Rules</title><link>/console/main/docs/reference/alerting/rule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/alerting/rule/</guid><description>Rules # Introduction # The alerting rules include the configuration of four parts: data source, metrics definition, trigger condition, and message notification
Rule list # In the rule list, you can query the rules that have been added
New rule # Click the New button in the rule list to enter the new rule page
Configure data source # Select a cluster (required) Select index, support input index pattern (required) Input elasticsearch query DSL query filter conditions (optional) Select time field (required) Select the statistical period (for time field aggregation, the default is one minute) Configure alerting metrics and trigger conditions # Input the rule name Add the grouped fields and group size as needed, you can add more than one for terms aggregation Select the metrics aggregation field and statistics type, you can configure more than one, when configuring more than one, you must configure a formula to calculate the final metrics Configure alerting trigger conditions Select Metrics value Select Bucket diff - Select based on Doc diff or Content diff Doc diff: The difference in the number of matching documents between two adjacent time buckets</description></item><item><title>Agent Metric Collect Mode Configuration</title><link>/console/main/docs/reference/resource/cluster-agent/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/resource/cluster-agent/</guid><description>Agent Metric Collect Mode Configuration # Introduction # By default, when a new cluster is registered with the Console, the monitoring feature is enabled, which automatically collects metric data for the cluster. If the monitored cluster has a large number of nodes (e.g., 10 or more), or if the volume of metric data from the cluster is substantial, performance can be optimized by switching to the Agent collection mode.</description></item><item><title>Channels</title><link>/console/main/docs/reference/alerting/channel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/alerting/channel/</guid><description>Channels # Introduction # The channel is used to configure the channel for sending notification messages when an alerting rule is triggered. Currently, webhook is supported.
Channe list # In the channel list, you can query the channels that have been added
New channel # Click the New button on the channels list page to enter the new alerting channel page
Input channel name (required) Select a channel type (supports various types such as Email, Slack, Discord,DingTalk, Feishu, WeChat, and custom webhooks) Input the webhook address Select the method of HTTP request, the default is POST Add HTTP request headers as needed Configure the webhook request body Click the save button to submit Update channel configuration # Select the channel to be updated in the channels list and click the Edit button to enter the update channel configuration page</description></item><item><title>Cluster Activities</title><link>/console/main/docs/reference/platform/activities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/platform/activities/</guid><description>Cluster Activities # After registering a cluster, the activities of the cluster can be observed.</description></item><item><title>Data View</title><link>/console/main/docs/reference/data/view/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/data/view/</guid><description>Data View # View list # Creating and managing data views can help you better get data from Elasticsearch.
Create data view # Step 1 Define the data view # Input a view name Matching rules: Match the corresponding index, you can also use (*) to match multiple indexes. Step 2 Configuration # Select time field as time filter for view index</description></item><item><title>Template variables</title><link>/console/main/docs/reference/alerting/variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/alerting/variables/</guid><description>Template variables # Introduction # When custom alerting triggers event content, in addition to the fixed copy written by yourself, the event title and event content also support template syntax. The rendering of the text can be achieved using fields in the event.
Variables # The syntax for rendering fields is {{ .fieldname }}, and the variable fields that can be used for template content rendering are as follows:</description></item><item><title>Audit Logs</title><link>/console/main/docs/reference/system/audit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/system/audit/</guid><description>Audit Logs # Introduction # Audit logs are primarily designed to meet compliance requirements, enhance security, support incident investigations, and assist in risk management. They record system operation activities to help detect anomalies, trace the root cause of issues, and identify potential risks. This ensures the secure and stable operation of enterprise information systems while also meeting regulatory requirements.
Log List # The audit log list displays information such as operation time, operator, operation type, and the type of resource being operated on.</description></item><item><title>Installation</title><link>/console/main/docs/getting-started/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/getting-started/install/</guid><description>Installing the Console # INFINI Console supports mainstream operating systems and platforms, the package is small, without any additional external dependencies, it should be very fast to install :)
Preparation before Installation # Prepare an Elasticsearch cluster that can store data. The required version is 5.3 or above, which is used for INFINI Console to store related data.
Installation Demo # Downloading # Automatic install</description></item><item><title>Overview</title><link>/console/main/docs/reference/agent/manage/manage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/agent/manage/manage/</guid><description>Agent Overview # Overview # INFINI Agent is a submodule of INFINI Console, charge of data scraping and Elasticsearch instance manage. it&amp;rsquo;s manage by INFINI Console. INFINI Agent supports mainstream operating systems and platforms. The program package is small, with no extra external dependency. So, the agent can be installed very rapidly.
Highlights of Agent:
Collect cluster health/cluster stats/node stats/index stats from Elasticsearch Collect local JSON and text logs from Elasticsearch.</description></item><item><title>Installing Agent</title><link>/console/main/docs/reference/agent/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/agent/install/</guid><description>Installing The Agent # Before You Begin # Install and keep INFINI Console running.
Install by Console generated script # curl -sSL http://localhost:9000/agent/install.sh?token=cjctdrms4us1c6fu04ag |sudo bash -s -- -u https://release.infinilabs.com/agent/stable -v 0.6.0-262 -t /opt/agent The -u and -v parameters indicate that the specified version of the Agent is downloaded from the specified URL, and the -t parameter indicates the installation path. In a networked environment, the &amp;ndash; and subsequent parameters can be ignored, and by default, the latest version of the Agent will be downloaded from the official website for installation.</description></item><item><title>How to easily create an Elasticsearch "guest" user</title><link>/console/main/docs/tutorials/create_readonly_account/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/tutorials/create_readonly_account/</guid><description>How to easily create an Elasticsearch &amp;ldquo;guest&amp;rdquo; user # Introduction # In some cases, we want to share some functions or data with customers, but do not want the data to be modified. At this point we need to create a &amp;ldquo;guest&amp;rdquo; user. This article briefly describes how to create a &amp;ldquo;guest&amp;rdquo; user using the INFINI Console.
Prepare # Download and install the latest version of INFINI Console Enable INFINI Console Security Features Creating a Role # Click System &amp;gt; Security Settings on the left menu of INFINI Console, and select the Role Tab page to enter the role management page.</description></item><item><title>How to assign different Elasticsearch cluster access permissions to different INFINI Console accounts</title><link>/console/main/docs/tutorials/role_with_different_rights/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/tutorials/role_with_different_rights/</guid><description>How to assign different Elasticsearch cluster access permissions to different INFINI Console accounts # Introduction # This article will introduce the use of INFINI Console to assign two different Elasticsearch cluster management permissions to two different accounts
Prepare # Download and install the latest version of INFINI Console Enable INFINI Console Security Features Register at least two Elasticsearch clusters to the INFINI Console Creating a Role # Click System &amp;gt; Security Settings on the left menu of INFINI Console, and select the Role Tab page to enter the role management page.</description></item><item><title>How to assign Elasticsearch index-level permissions to INFINI Console accounts</title><link>/console/main/docs/tutorials/role_with_index_limit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/tutorials/role_with_index_limit/</guid><description>How to assign Elasticsearch index-level permissions to INFINI Console accounts # Introduction # This article will introduce the use of INFINI Console to limit an account to only have the management permissions of certain indexes in the Elasticsearch cluster
Prepare # Download and install the latest version of INFINI Console Enable INFINI Console Security Features Register at least two Elasticsearch clusters to the INFINI Console Creating a Role # Click System &amp;gt; Security Settings on the left menu of INFINI Console, and select the Role Tab page to enter the role management page.</description></item><item><title>Container Deployment</title><link>/console/main/docs/reference/agent/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/agent/docker/</guid><description>Container Deployment # INFINI Agent supports container deployment.
Download Image # The images of INFINI Agent are published at the official repository of Docker. The URL is as follows: https://hub.docker.com/r/infinilabs/agent
Run the following command:
docker pull infinilabs/agent:1.29.8 Verifying the Image # After downloading the image locally, you will notice that the container image of INFINI Agent is very small, with a size less than 25 MB. So, the downloading is very fast.</description></item><item><title>Docker</title><link>/console/main/docs/getting-started/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/getting-started/docker/</guid><description>Container Deployment # INFINI Console supports container deployment.
Downloading an Image # The images of INFINI Console are published at the official repository of Docker. The URL is as follows:
https://hub.docker.com/r/infinilabs/console
Use the following command to obtain the latest container image:
mkdir -p ~/infinilabs &amp;amp;&amp;amp; cd ~/infinilabs docker pull infinilabs/console:1.29.8 Verifying the Image # After downloading the image locally, you will notice that the container image of INFINI Console is very small, with a size less than 30 MB.</description></item><item><title>Role</title><link>/console/main/docs/reference/system/security/role/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/system/security/role/</guid><description>Role Management # Introduction # Role Management includes CURD operations for role. And INFINI Console has a builtin role named Administrator, it has all privileges , includes Platform and Data. The data role can help us control privileges of elasticsearch, includes elasticsearch api privileges which can be configured in the file config/permission.json of your setup path.
Create Platform Role # Input role name, role name should be unique.</description></item><item><title>User</title><link>/console/main/docs/reference/system/security/user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/reference/system/security/user/</guid><description>User Management # Introduction # User Management includes CURD operations and reset password for user.
Create User # User name is required, and it should be unique. Nick name, phone, email, is optional. Select one or more role. Tags is optional, it helps you group users. Search User # Input keywords and click the search button to query users.
Update User # Modify as needed, and then click the Save button to submit.</description></item><item><title>Deploying Console and Easysearch with Docker Compose</title><link>/console/main/docs/getting-started/dcoker-easysearch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/getting-started/dcoker-easysearch/</guid><description>Deploying Console and Easysearch with Docker Compose # This guide describes how to deploy INFINI Console and INFINI Easysearch as containers and enable Agent metric collection mode within the containers.
Prerequisites # Ensure that Docker is installed and running correctly. Ensure that Docker Compose is installed. Create Docker Compose File # Create a file named docker-compose.yml:
mkdir -p ~/infinilabs &amp;amp;&amp;amp; cd ~/infinilabs cat &amp;lt;&amp;lt; &amp;#34;EOF&amp;#34; &amp;gt; docker-compose.</description></item><item><title>Deploying Console and Easysearch in a Kubernetes Cluster</title><link>/console/main/docs/getting-started/k8s-easysearch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/getting-started/k8s-easysearch/</guid><description>Deploying Console and Easysearch in a Kubernetes Cluster # This guide describes how to deploy INFINI Console and INFINI Easysearch as containers and enable Agent metric collection mode within the containers.
Prerequisites # Ensure that a Kubernetes cluster is installed and running correctly. Ensure that kubectl is configured and can access the Kubernetes cluster. Ensure that Helm is installed and configured. Helm Configuration Adjustments # When deploying Console and Easysearch using Helm, the default configuration needs to be adjusted to enable Agent metric collection mode.</description></item><item><title>Kubernetes</title><link>/console/main/docs/getting-started/helm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/getting-started/helm/</guid><description>Kubernetes Deployment # INFINI Console supports deployment on Kubernetes using Helm charts.
The Chart Repository # Chart repository: https://helm.infinilabs.com.
Use the follow command add the repository:
helm repo add infinilabs https://helm.infinilabs.com Prerequisites # K8S StorageClass The default StorageClass of the Chart package is local-path, you can install it through here.
If you want use other StorageClass(installed), you can create a YAML file (eg. vaules.yaml) file that it contains the follow contents:</description></item><item><title>How to Monitor Elasticsearch Cluster Health</title><link>/console/main/docs/tutorials/cluster_health_change/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/tutorials/cluster_health_change/</guid><description>How to Monitor Elasticsearch Cluster Health # Introduction # In many cases, the cluster health status of the Elasticsearch cluster will turn red for some reason. At this time, at least one primary shard in the Elasticsearch cluster is unallocated or lost. So it is necessary to monitor the health status of the Elasticsearch cluster. This article will introduce how to use the INFINI Console alerting feature to monitor the health of an Elasticsearch cluster.</description></item><item><title>How to monitor Elasticsearch cluster node disk usage</title><link>/console/main/docs/tutorials/cluster_node_disk_usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/tutorials/cluster_node_disk_usage/</guid><description>How to monitor Elasticsearch cluster node disk usage # Introduction # When the system disk usage is too high, data cannot be written into the Elasticsearch cluster, which is likely to result in data loss. Therefore, monitor the Elasticsearch cluster. Node disk usage is necessary. This article will show you how to monitor your Elasticsearch cluster using INFINI Console alerts Node disk usage.
Prepare # Download and install the latest version of INFINI Console Register Elasticsearch cluster using INFINI Console Create alerting rule # Open INFINI Console in the browser, click on the left menu &amp;ldquo;Alerting&amp;rdquo; &amp;gt; Rules to enter the alerting management page, and then click New button to enter the Create Alerting Rule page.</description></item><item><title>How to monitor slow query requests in Elasticsearch</title><link>/console/main/docs/tutorials/cluster_slow_request/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/tutorials/cluster_slow_request/</guid><description>How to monitor slow query requests in Elasticsearch # Introduction # Many times, the Elasticsearch cluster will experience peak data writing or query traffic. At this time, the Elasticsearch cluster will be under a lot of pressure. Through the monitoring and alertinging of the delay of the Elasticsearch index query. This allows us to locate which indexes are the most stressed on the Elasticsearch cluster. This article will introduce how to use the INFINI Console alerting function to monitor the slow query request index in Elasticsearch.</description></item><item><title>How to monitor the CPU usage of Elasticsearch cluster nodes</title><link>/console/main/docs/tutorials/cluster_node_cpu_usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/tutorials/cluster_node_cpu_usage/</guid><description>How to monitor the CPU usage of Elasticsearch cluster nodes # Introduction # This article will introduce how to use the INFINI Console to monitor the disk usage of Elasticsearch cluster nodes and alert them.
Prepare # Download and install the latest version of INFINI Console Register Elasticsearch cluster using INFINI Console Create alerting rule # Open INFINI Console in the browser, click Alerting &amp;gt; Rules on the left menu to enter the alerting management page, and then click the New button to enter the alerting rule creation page.</description></item><item><title>How to monitor JVM usage of Elasticsearch cluster nodes</title><link>/console/main/docs/tutorials/cluster_node_jvm_usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/tutorials/cluster_node_jvm_usage/</guid><description>How to monitor JVM usage of Elasticsearch cluster nodes # Introduction # This article will introduce how to use the INFINI Console to monitor the JVM usage of Elasticsearch cluster nodes and generate alerts.
Prepare # Download and install the latest version of INFINI Console Register Elasticsearch cluster using INFINI Console Create alerting rule # Open INFINI Console in the browser, click on the left menu &amp;ldquo;Alerting&amp;rdquo; &amp;gt; Rules to enter the alerting management page, and then click New button to enter the Create Alerting Rule page.</description></item><item><title>Getting Started with the TopN Metrics Feature in INFINI Console</title><link>/console/main/docs/tutorials/getting_started_with_the_TopN_metrics_feature/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/console/main/docs/tutorials/getting_started_with_the_TopN_metrics_feature/</guid><description>Getting Started with the TopN Metrics Feature in INFINI Console # Background # In distributed search engine systems (such as Easysearch, Elasticsearch, and OpenSearch), performance monitoring is crucial. To ensure efficient system operation and reasonable resource allocation, it is important to observe the usage of key resources—especially memory and CPU usage of indices, nodes, and shards—over a period of time.
By performing TopN queries on these key metrics, we can identify the nodes, indices, or shards that consume the most resources, helping us quickly locate potential performance bottlenecks or overloaded components.</description></item></channel></rss>