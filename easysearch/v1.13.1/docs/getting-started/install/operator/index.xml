<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Operator on INFINI Easysearch</title><link>/easysearch/v1.13.1/docs/getting-started/install/operator/</link><description>Recent content in Operator on INFINI Easysearch</description><generator>Hugo -- gohugo.io</generator><atom:link href="/easysearch/v1.13.1/docs/getting-started/install/operator/index.xml" rel="self" type="application/rss+xml"/><item><title>部署 Operator</title><link>/easysearch/v1.13.1/docs/getting-started/install/operator/deploy_operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.13.1/docs/getting-started/install/operator/deploy_operator/</guid><description>部署 Easysearch Operator # Easysearch Operator 只能在 k8s 环境下部署安装，请准备好一套 k8s 环境
部署前准备 # k8s 环境
要求Kubernetes 1.9以上版本，自 1.9 版本以后，StatefulSet成为了在Kubernetes中管理有状态应用的标准方式。 StorageClass
StorageClass 允许集群管理员定义多种存储方案，如快速的 SSD、标准的硬盘，或者其他的存储系统。无需手动预先创建存储资源，用户只需要在 PersistentVolumeClaim (PVC) 中指定需要的 StorageClass，存储资源就可以根据需求动态地创建。 ServiceAccount
创建一个 ServiceAccount 用于 Easysearch Operator 获取和操作 k8s 资源 apiVersion: v1 kind: ServiceAccount metadata: labels: app.kubernetes.io/name: serviceaccount app.kubernetes.io/instance: controller-manager-sa app.kubernetes.io/component: rbac app.kubernetes.io/created-by: k8s-operator app.kubernetes.io/part-of: k8s-operator app.kubernetes.io/managed-by: kustomize name: controller-manager # ServiceAccount 的名字是 controller-manager namespace: default ClusterRole
创建 ClusterRole，用于定义访问 k8s 集群的角色权限 展开查看完整代码 .</description></item><item><title>部署 Easysearch</title><link>/easysearch/v1.13.1/docs/getting-started/install/operator/deploy_easysearch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.13.1/docs/getting-started/install/operator/deploy_easysearch/</guid><description>部署Easysearch Operator # 这里我们准备部署一个 3 节点的Easysearch 集群，准备 three-nodes-easysearch-cluster.yaml 文件，文件内容如下所示，并对关键字段都进行了注释。
apiVersion: infinilabs.infinilabs.com/v1 kind: SearchCluster # 自定义的资源类型 metadata: name: threenodes # Easysearch 集群的名称 namespace: default # Easysearch 集群所在的命名空间 spec: # 规格 security: # 安全相关 config: adminSecret: # admin证书配置 name: easysearch-admin-certs adminCredentialsSecret: # 账户密码配置 name: threenodes-admin-password tls: # tls 协议配置，包括节点间的transport，以及访问集群的http http: # 访问集群http配置 generate: false # 是否需要集群自动生成证书 secret: # 自定义证书配置 name: easysearch-certs transport: # 集群间访问配置 generate: false perNode: false # 是否给每一个节点配置证书 secret: # 自定义证书配置 name: easysearch-certs nodesDn: [&amp;#34;CN=Easysearch_Node&amp;#34;] adminDn: [&amp;#34;CN=Easysearch_Admin&amp;#34;] general: # 通用配置 snapshotRepositories: # s3 快照配置 - name: s3_repository # 配置的s3快照的名称 type: s3 # 快照类型 settings: # 快照配置 bucket: es-operator-bucket # s3中的桶，需提前建好 access_key: minioadmin # 访问s3密钥 secret_key: minioadmin endpoint: http://192.</description></item><item><title>资源扩容</title><link>/easysearch/v1.13.1/docs/getting-started/install/operator/resource_manager/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.13.1/docs/getting-started/install/operator/resource_manager/</guid><description>资源扩容 # 查看当前 cpu、mem 和磁盘资源情况
kubectl get sts/threenodes-masters -o yaml resources: requests: cpu: &amp;#34;1&amp;#34; memory: 3Gi limits: cpu: &amp;#34;1&amp;#34; memory: 5Gi resources: requests: storage: 30Gi volumeMode: Filesystem 磁盘（磁盘扩容依赖于实际的 StorageClass，需要 StorageClass 本身支持扩容）
修改 Operator yaml 文件，执行 apply 操作
resources: requests: cpu: &amp;#34;1&amp;#34; memory: 4Gi limits: cpu: &amp;#34;2&amp;#34; memory: 6Gi resources: requests: storage: 50Gi 滚动更新中： 从 threenodes-masters-0 开始更新
threenodes-masters-0 更新完毕后，依次更新 threenodes-masters-1、threenodes-masters-2
最终全部更新完毕
查看更新后的资源情况：
可以发现，结果与预期的一致</description></item><item><title>节点扩容</title><link>/easysearch/v1.13.1/docs/getting-started/install/operator/node_scale/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.13.1/docs/getting-started/install/operator/node_scale/</guid><description>节点扩容 # 与上述 cpu mem disk 扩容一样，只需要修改 Operator yaml 文件中的 replicas 字段值即可。 这里修改为 5 个节点，并 apply，将会并发创建新的节点：threenodes-masters-3, threenodes-masters-4
最终完成节点扩容。</description></item><item><title>密码修改</title><link>/easysearch/v1.13.1/docs/getting-started/install/operator/update_password/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.13.1/docs/getting-started/install/operator/update_password/</guid><description>密码修改 # Operator 将 Easysearch 的密码保存在 k8s 的 Secret 中，查看已有的 Secret
现在准备修改密码，编辑 admin-credentials-secret.yaml 文件，并 apply
apiVersion: v1 kind: Secret metadata: name: threenodes-admin-password type: Opaque data: # admin username: YWRtaW4= # admin123 password: YWRtaW4xMjM= operator 感知到 threenodes-admin-password 有变化后，会检查账号密码是否有更新（通过检查账号密码生成的 hash 值是否与 job 的 annotations: &amp;ldquo;securityconfig/checksum&amp;rdquo; 值相同来判断），如果有更新则重新执行 job（集群名称-securityconfig-update）,这里的名称是 threenodes-securityconfig-update
继续查看这个 job 的 spec
可以知道，这个 job 本质上也是 Easysearch，但是它执行 shell 命令来修改集群的密码：
until curl -k -XPUT --cert admin-credentials/tls.crt --key admin-credentials/tls.key \ -H &amp;#39;Content-Type: application/json&amp;#39; &amp;#39;https://threenodes.default.svc.cluster.local:9200/_security/user/admin \ -d &amp;#39; { &amp;#34;password&amp;#34;: &amp;#34;admin&amp;#34;, &amp;#34;external_roles&amp;#34;: [&amp;#34;admin&amp;#34;] }&amp;#39;;echo &amp;#39;Waiting to connect to the cluster&amp;#39;; sleep 60; 修改密码后，再次查看 secret： 可知密码已经修改为目标密码。</description></item><item><title>版本升级</title><link>/easysearch/v1.13.1/docs/getting-started/install/operator/upgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.13.1/docs/getting-started/install/operator/upgrade/</guid><description>版本升级 # 查看已有的版本：Easysearch:1.7.0-223
现在准备升级到 Easysearch:1.7.1-225，修改 Operator yaml 中的 version 字段，并 apply
# version: &amp;#34;1.7.0-223&amp;#34; version: &amp;#34;1.7.1-225&amp;#34; httpPort: 9200 vendor: Easysearch serviceAccount: controller-manager serviceName: threenodes 升级会比较久，因为为了保证升级过程中的服务可用性，节点升级是滚动升级的形式进行。 threenodes-masters-0 开始滚动更新，然后是 threenodes-masters-1，依次滚动更新， 直至所有节点更新完毕，大概总耗时 10 分钟
查看 Easysearch 新版本可知为 1.7.1-225
至此，版本升级完毕。</description></item><item><title>证书管理</title><link>/easysearch/v1.13.1/docs/getting-started/install/operator/cert_manager/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.13.1/docs/getting-started/install/operator/cert_manager/</guid><description>证书管理 # 使用了 cert-manager 进行自动化管理证书，对于过期证书会自动重新颁发。
在这里我们根据 cert-manager 官方的配置方式配置了3套 Certificate 证书：ca-certificate、easysearch-certs 和 easysearch-admin-certs，分别用于节点间证书、http 访问证书和admin 管理员证书，具体参考下属 yaml 文件，重点需要主要证书的有效期(duration 字段)、更新时间(renewBefore 字段)和 commonName(infinilabs) 字段。
展开查看完整代码 ... apiVersion: cert-manager.io/v1 kind: Issuer metadata: name: selfsigned-issuer namespace: default spec: selfSigned: {} --- apiVersion: cert-manager.io/v1 kind: Certificate metadata: name: ca-certificate namespace: default spec: secretName: ca-cert duration: 9000h # ~1year renewBefore: 360h # 15d commonName: infinilabs isCA: true privateKey: size: 2048 usages: - digital signature - key encipherment issuerRef: name: selfsigned-issuer --- apiVersion: cert-manager.</description></item><item><title>s3 备份</title><link>/easysearch/v1.13.1/docs/getting-started/install/operator/s3_snapshot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.13.1/docs/getting-started/install/operator/s3_snapshot/</guid><description>s3 定期备份 # 与更新集群密码类似，也是根据 Operator yaml 的配置来启动一个 job, 然后请求集群 API 来配置相应的 s3 备份策略 具体参考文档： s3 定期备份</description></item><item><title>历史版本</title><link>/easysearch/v1.13.1/docs/getting-started/install/operator/history_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.13.1/docs/getting-started/install/operator/history_version/</guid><description/></item><item><title>FAQ</title><link>/easysearch/v1.13.1/docs/getting-started/install/operator/FAQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.13.1/docs/getting-started/install/operator/FAQ/</guid><description>Easysearch 版本降级会报错 # cannot downgrade a node from version [1.7.0] to version [1.6.1]
[2024-01-28T09:42:34,314][ERROR][o.e.b.EasysearchUncaughtExceptionHandler] [onenode-masters-0] uncaught exception in thread [main] org.easysearch.bootstrap.StartupException: java.lang.IllegalStateException: cannot downgrade a node from version [1.7.0] to version [1.6.1] at org.easysearch.bootstrap.easysearch.init(Easysearch.java:173) ~[easysearch-1.6.1.jar:1.6.1] at org.easysearch.bootstrap.easysearch.execute(Easysearch.java:160) ~[easysearch-1.6.1.jar:1.6.1] at org.easysearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:71) ~[easysearch-1.6.1.jar:1.6.1] at org.easysearch.cli.Command.mainWithoutErrorHandling(Command.java:112) ~[easysearch-cli-1.6.1.jar:1.6.1] at org.easysearch.cli.Command.main(Command.java:75) ~[easysearch-cli-1.6.1.jar:1.6.1] at org.easysearch.bootstrap.easysearch.main(Easysearch.java:125) ~[easysearch-1.6.1.jar:1.6.1] at org.easysearch.bootstrap.easysearch.main(Easysearch.java:67) ~[easysearch-1.6.1.jar:1.6.1] Caused by: java.lang.IllegalStateException: cannot downgrade a node from version [1.7.0] to version [1.</description></item></channel></rss>