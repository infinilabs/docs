<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>聚合操作 on INFINI Easysearch</title><link>/easysearch/main/docs/references/aggregation/</link><description>Recent content in 聚合操作 on INFINI Easysearch</description><generator>Hugo -- gohugo.io</generator><atom:link href="/easysearch/main/docs/references/aggregation/index.xml" rel="self" type="application/rss+xml"/><item><title>指标聚合</title><link>/easysearch/main/docs/references/aggregation/metric-agg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/main/docs/references/aggregation/metric-agg/</guid><description>指标聚合 # 指标聚合让您可以执行简单的计算，例如查找字段的最小值、最大值和平均值。
指标聚合的类型 # 指标聚合有两种类型：单值指标聚合和多值指标聚合。
单值指标聚合 # 单值 指标聚合返回单个指标。 例如，sum 、 min 、 max 、 avg 、 cardinality 和 value_count 。
多值指标聚合 # 多值 指标聚合返回多个指标。 例如， stats 、 extended_stats 、 matrix_stats 、 percentile 、 percentile_ranks 、 geo_bound 、 top_hits 和 scripted_metric。
sum, min, max, avg # sum 、 min 、 max 和 avg metric 是单值 指标聚合，分别返回字段的总和、最小值、最大值和平均值。
以下示例计算 taxful_total_price 字段的总和：
GET kibana_sample_data_ecommerce/_search { &amp;#34;size&amp;#34;: 0, &amp;#34;aggs&amp;#34;: { &amp;#34;sum_taxful_total_price&amp;#34;: { &amp;#34;sum&amp;#34;: { &amp;#34;field&amp;#34;: &amp;#34;taxful_total_price&amp;#34; } } } } 返回示例 # .</description></item><item><title>分桶聚合</title><link>/easysearch/main/docs/references/aggregation/bucket-agg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/main/docs/references/aggregation/bucket-agg/</guid><description>分桶聚合 # Bucket aggregations 将文件集归类为桶。桶聚合的类型决定了一个给定的文档是否落入一个桶中
你可以使用桶聚合来实现分面导航（通常作为侧边栏放在搜索结果页面），以帮助你的用户缩小搜索结果范围。
terms # terms 聚合为字段的每个唯一 term 动态地创建一个桶。
下面的例子使用 terms 聚合来查找网络日志数据中每个响应码的文档数量:
GET kibana_sample_data_logs/_search { &amp;#34;size&amp;#34;: 0, &amp;#34;aggs&amp;#34;: { &amp;#34;response_codes&amp;#34;: { &amp;#34;terms&amp;#34;: { &amp;#34;field&amp;#34;: &amp;#34;response.keyword&amp;#34;, &amp;#34;size&amp;#34;: 10 } } } } Sample Response # ... &amp;#34;aggregations&amp;#34; : { &amp;#34;response_codes&amp;#34; : { &amp;#34;doc_count_error_upper_bound&amp;#34; : 0, &amp;#34;sum_other_doc_count&amp;#34; : 0, &amp;#34;buckets&amp;#34; : [ { &amp;#34;key&amp;#34; : &amp;#34;200&amp;#34;, &amp;#34;doc_count&amp;#34; : 12832 }, { &amp;#34;key&amp;#34; : &amp;#34;404&amp;#34;, &amp;#34;doc_count&amp;#34; : 801 }, { &amp;#34;key&amp;#34; : &amp;#34;503&amp;#34;, &amp;#34;doc_count&amp;#34; : 441 } ] } } .</description></item><item><title>管道聚合</title><link>/easysearch/main/docs/references/aggregation/pipeline-agg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/main/docs/references/aggregation/pipeline-agg/</guid><description>管道聚合 # 使用管道聚合，可以通过将一个聚合的结果作为输入管道传输到另一个聚合来链接聚合，以获得更细微的输出。
可以使用管道聚合来计算复杂的统计和数学度量值，如导数、移动平均值、累积总和等。
管道聚合语法 # 管道聚合使用 buckets_path 属性访问其他聚合的结果。 buckets_path 属性具有特定的语法：
buckets_path = &amp;lt;AGG_NAME&amp;gt;[&amp;lt;AGG_SEPARATOR&amp;gt;,&amp;lt;AGG_NAME&amp;gt;]*[&amp;lt;METRIC_SEPARATOR&amp;gt;, &amp;lt;METRIC&amp;gt;]; 分别是:
AGG_NAME 是聚合的名称。 AGG_SEPARATOR 分隔聚合，表示为 &amp;gt; 。 METRIC_SEPARATOR 将聚合与 metrics 分开，表示为 . 。 METRIC 指标名称，如果是多值指标聚合。 例如，my_sum.sum 选择名为 my_sum 的聚合的 sum 指标。popular_tags&amp;gt;my_sum.sum 将 my_sum.sum 嵌套到 popular_tags 聚合中。
您还可以指定以下附加参数：
gap_policy: 真实世界数据可以包含间隙或空值。您可以使用 gap_policy 属性指定处理此类丢失数据的策略。您可以将 gap_policy 属性设置为 skip ，以跳过丢失的数据并从下一个可用值继续，或将 insert_zeros 设置为零，以将丢失的值替换为零并继续运行。 format: 输出值的格式类型。例如，yyyy-MM-dd 表示日期值。 样例 # 要对 sum_total_memory 聚合返回的所有存储桶求和，请执行以下操作：
GET kibana_sample_data_logs/_search { &amp;#34;size&amp;#34;: 0, &amp;#34;aggs&amp;#34;: { &amp;#34;number_of_bytes&amp;#34;: { &amp;#34;histogram&amp;#34;: { &amp;#34;field&amp;#34;: &amp;#34;bytes&amp;#34;, &amp;#34;interval&amp;#34;: 10000 }, &amp;#34;aggs&amp;#34;: { &amp;#34;sum_total_memory&amp;#34;: { &amp;#34;sum&amp;#34;: { &amp;#34;field&amp;#34;: &amp;#34;phpmemory&amp;#34; } } } }, &amp;#34;sum_copies&amp;#34;: { &amp;#34;sum_bucket&amp;#34;: { &amp;#34;buckets_path&amp;#34;: &amp;#34;number_of_bytes&amp;gt;sum_total_memory&amp;#34; } } } } 返回示例 # .</description></item></channel></rss>