<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>配置说明 on INFINI Easysearch</title><link>/easysearch/main/docs/references/security/configuration/</link><description>Recent content in 配置说明 on INFINI Easysearch</description><generator>Hugo -- gohugo.io</generator><atom:link href="/easysearch/main/docs/references/security/configuration/index.xml" rel="self" type="application/rss+xml"/><item><title>本地配置</title><link>/easysearch/main/docs/references/security/configuration/yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/main/docs/references/security/configuration/yaml/</guid><description>本地配置 # 通过安全模块的本地 YAML 配置文件可以方便的管理默认的内置用户或 隐藏的保留资源，例如 admin 管理员用户。不过通过 INFINI Console 或者 REST API 来创建其他用户、角色、映射、操作组和租户可能更容易。
本地配置的路径位于 Easysearch 部署目录的的 config/security 下, 下面是这些文件的默认配置。
user.yml # 此文件是内置用户配置文件，用于定义系统的初始用户账户及其相关配置（如密码哈希、角色分配等）。
admin 用户是 Easysearch 系统中的默认超级管理员用户。
配置文件里面的密码不能是明文，必须使用 Hash 之后的密码，通过命令 ./bin/hash_password.sh -p &amp;lt;new-password&amp;gt; 可以生成一个密码哈希。
--- # This is the internal user database create by initialize # The hash value is a bcrypt hash and can be generated with hash_password.sh _meta: type: &amp;#34;user&amp;#34; config_version: 2 # Define your internal users here ## Default users admin: hash: &amp;#34;$2y$12$P2zO4rEJvtTqTYgQ/Ifk0eTALefRcxuiQgNUOBse/IP.</description></item><item><title>后端配置</title><link>/easysearch/main/docs/references/security/configuration/backend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/main/docs/references/security/configuration/backend/</guid><description>后端配置 # 配置安全模块的第一步是确定如何验证用户身份。尽管 Easysearch 本身可以充当一个内部用户数据库，但许多人更喜欢集成企业现有的身份认证体系，例如 LDAP 服务器，或两者组合。设置身份验证和授权服务端的主要配置文件位于 config/security/config.yml。它定义了安全模块如何检索用户凭据、如何验证这些凭据以及如何从后端系统获取其他角色（可选）。
config.yml 主要包含三大部分：
security: dynamic: http: ... authc: ... authz: ... HTTP # 配置 http 具有以下格式：
anonymous_auth_enabled: &amp;lt;true|false&amp;gt; 可以选择是否开启匿名访问，如果禁用匿名身份验证，则至少在 authc里面提供一个认证后端，否则安全模块将不予初始化，默认为 false。
认证 # 认证配置 authc 具有以下格式：
&amp;lt;name&amp;gt;: http_enabled: &amp;lt;true|false&amp;gt; transport_enabled: &amp;lt;true|false&amp;gt; order: &amp;lt;integer&amp;gt; http_authenticator: ... authentication_backend: ... 配置 authc 里面的每一项被称为 身份验证域。它指定来在何处获取用户凭据以及应针对哪个后端对它们进行身份验证。
您可以使用多个身份验证域。每个身份验证域都有一个名称（例如，basic_auth_internal）、enabled 开关和排序参数 order。该顺序使将身份验证域链接在一起成为可能。安全模块按您提供的顺序依次使用它们。如果用户成功通过一个域进行了身份验证，安全模块将跳过剩余的验证域。
http_authenticator 指定要在 HTTP 层上使用的身份验证方法。
以下是在 HTTP 层上定义身份验证器的语法：
http_authenticator: type: &amp;lt;type&amp;gt; challenge: &amp;lt;true|false&amp;gt; config: ... 参数 type 支持以下几种类型:</description></item><item><title>证书配置</title><link>/easysearch/main/docs/references/security/configuration/tls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/main/docs/references/security/configuration/tls/</guid><description>配置 TLS 证书 # Easysearch 可以通过启用 TLS 传输加密来保护您数据的网络传输安全。 TLS 的相关设置要在配置文件 easysearch.yml 里面进行。主要包括两个部分的配置：传输层和 HTTP 层。传输层的 TLS 是必需的，HTTP 层的 TLS 的配置是可选的。
默认的配置如下：
security.ssl.transport.cert_file: instance.crt security.ssl.transport.key_file: instance.key security.ssl.transport.ca_file: ca.crt security.ssl.http.enabled: true security.ssl.http.cert_file: instance.crt security.ssl.http.key_file: instance.key security.ssl.http.ca_file: ca.crt 一键生成证书 # 启用 TLS 需要设置证书才能工作，通过执行命令 ./bin/initialize.sh 可以一键生成 TLS 证书，如下：
➜ ./bin/initialize.sh Generating RSA private key, 2048 bit long modulus .......................+++ ...............................+++ e is 65537 (0x10001) Generating RSA private key, 2048 bit long modulus .......................................................................................................................................................................................+++ .</description></item><item><title>系统索引</title><link>/easysearch/main/docs/references/security/configuration/system-indices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/main/docs/references/security/configuration/system-indices/</guid><description>系统索引 # Easysearch 默认的身份信息存放在一个受保护的系统索引里面，名称为：.security， 将索引设置为系统索引可以对该索引的数据进行额外的保护，因为即使您的用户帐户对所有索引具有读取权限，也无法直接访问此系统索引中的数据。
您可以在 easysearch.yml 中添加其它您希望需要受到保护的索引。
security.system_indices.enabled: true security.system_indices.indices: [&amp;#34;.infini-*&amp;#34;] 如果要访问系统索引，必须使用管理员证书的方式来进行： 配置管理证书:
curl -k --cert ./admin.crt --key ./admin.key -XGET &amp;#39;https://localhost:9200/.security/_search&amp;#39; 另一种方法是从每个节点上的 security.system_indices.index 列表中删除该索引，然后重新启动 Easysearch 即可正常操作该索引。</description></item></channel></rss>