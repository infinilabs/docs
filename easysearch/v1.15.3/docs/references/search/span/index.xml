<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Span 查询 on INFINI Easysearch</title><link>/easysearch/v1.15.3/docs/references/search/span/</link><description>Recent content in Span 查询 on INFINI Easysearch</description><generator>Hugo -- gohugo.io</generator><atom:link href="/easysearch/v1.15.3/docs/references/search/span/index.xml" rel="self" type="application/rss+xml"/><item><title>Span 前序匹配</title><link>/easysearch/v1.15.3/docs/references/search/span/span-first/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.15.3/docs/references/search/span/span-first/</guid><description>Span 前序匹配 # span_first 查询匹配从字段开头开始并在指定位置结束的跨度。当您想要查找出现在文档开头附近的词项或短语时，此查询很有用。
例如，您可以使用 span_first 查询来执行以下搜索：
查找在字段的最初几个词中出现的特定词项的文档。 确保某些短语出现在文本的开头或附近 仅在模式出现在指定距离内时匹配 参考样例 # 以下查询搜索词干“dress”出现在描述的前 4 个位置：
GET /clothing/_search { &amp;quot;query&amp;quot;: { &amp;quot;span_first&amp;quot;: { &amp;quot;match&amp;quot;: { &amp;quot;span_term&amp;quot;: { &amp;quot;description.stemmed&amp;quot;: &amp;quot;dress&amp;quot; } }, &amp;quot;end&amp;quot;: 4 } } } 该查询匹配文档 1 和 2：
文档 1 和 2 在第三位置包含单词 dress （“长袖连衣裙…”和“漂亮的连衣裙”）。索引单词的起始位置为 0，因此单词“dress”位于位置 2。 单词 dress 的位置必须小于 4 ，如 end 参数指定。 { &amp;quot;took&amp;quot;: 13, &amp;quot;timed_out&amp;quot;: false, &amp;quot;_shards&amp;quot;: { &amp;quot;total&amp;quot;: 1, &amp;quot;successful&amp;quot;: 1, &amp;quot;skipped&amp;quot;: 0, &amp;quot;failed&amp;quot;: 0 }, &amp;quot;hits&amp;quot;: { &amp;quot;total&amp;quot;: { &amp;quot;value&amp;quot;: 2, &amp;quot;relation&amp;quot;: &amp;quot;eq&amp;quot; }, &amp;quot;max_score&amp;quot;: 0.</description></item><item><title>Span 包含于查询</title><link>/easysearch/v1.15.3/docs/references/search/span/span-within/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.15.3/docs/references/search/span/span-within/</guid><description>Span 包含于查询 # span_within 查询匹配被另一个 span 查询所包围的跨度。它是 span_containing 的相反操作： span_containing 返回包含较小跨度的较大跨度，而 span_within 返回被较大跨度包围的较小跨度。
例如，您可以使用 span_within 查询来：
查找出现在较长短语中的较短短语。 匹配在特定上下文中出现的词项。 识别被较大模式包围的小模式。 参考样例 # 以下查询在包含“shirt”和“long”的跨度中搜索单词“dress”：
GET /clothing/_search { &amp;quot;query&amp;quot;: { &amp;quot;span_within&amp;quot;: { &amp;quot;little&amp;quot;: { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;dress&amp;quot; } }, &amp;quot;big&amp;quot;: { &amp;quot;span_near&amp;quot;: { &amp;quot;clauses&amp;quot;: [ { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;shirt&amp;quot; } }, { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;long&amp;quot; } } ], &amp;quot;slop&amp;quot;: 2, &amp;quot;in_order&amp;quot;: false } } } } } 该查询匹配文档 1 的原因是：</description></item><item><title>Span 包含查询</title><link>/easysearch/v1.15.3/docs/references/search/span/span-containing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.15.3/docs/references/search/span/span-containing/</guid><description>Span 包含查询 # span_containing 查询会在较大的文本模式（如短语或一组单词）的边界内查找包含较小文本模式的匹配项。可以将其视为仅在特定更大的上下文中出现时才查找单词或短语。
例如，您可以使用 span_containing 查询来执行以下搜索：
查找单词“quick”，但仅当它出现在同时提到狐狸和行为的句子中时。 确保某些词项出现在其他词项的上下文中——而不仅仅是在文档的任何地方。 搜索在更长的有意义的短语中出现的特定单词。 参考样例 # 以下查询搜索在包含“silk”和“dress”词语的较大词组（不一定按该顺序）中，与“red”一词出现且彼此之间不超过 5 个词的情况：
GET /clothing/_search { &amp;quot;query&amp;quot;: { &amp;quot;span_containing&amp;quot;: { &amp;quot;little&amp;quot;: { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;red&amp;quot; } }, &amp;quot;big&amp;quot;: { &amp;quot;span_near&amp;quot;: { &amp;quot;clauses&amp;quot;: [ { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;silk&amp;quot; } }, { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;dress&amp;quot; } } ], &amp;quot;slop&amp;quot;: 5, &amp;quot;in_order&amp;quot;: false } } } } } 该查询匹配文档 1 的原因是：
它找到一个词组，其中“silk”和“dress”出现且彼此之间不超过 5 个词（“…dress in red silk…”）。词语“silk”和“dress”彼此之间相隔 2 个词（它们之间有 2 个词）。 在这个更大的跨度内，它找到了“red”这个词。 { &amp;quot;took&amp;quot;: 4, &amp;quot;timed_out&amp;quot;: false, &amp;quot;_shards&amp;quot;: { &amp;quot;total&amp;quot;: 1, &amp;quot;successful&amp;quot;: 1, &amp;quot;skipped&amp;quot;: 0, &amp;quot;failed&amp;quot;: 0 }, &amp;quot;hits&amp;quot;: { &amp;quot;total&amp;quot;: { &amp;quot;value&amp;quot;: 1, &amp;quot;relation&amp;quot;: &amp;quot;eq&amp;quot; }, &amp;quot;max_score&amp;quot;: 1.</description></item><item><title>Span 多词项查询</title><link>/easysearch/v1.15.3/docs/references/search/span/span-multi-term/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.15.3/docs/references/search/span/span-multi-term/</guid><description>Span 多词项查询 # span_multi 查询允许您将多词查询（如 wildcard 、 fuzzy 、 prefix 、 range 或 regexp ）包装为 span 查询。这使您能够在其他 span 查询中使用这些更灵活的匹配查询。
例如，您可以使用 span_multi 查询来：
查找具有相同前缀的词语，并与其他词语靠近。 匹配跨度内单词的模糊变体。 在跨度查询中使用正则表达式。 span_multi 查询可能匹配多个词。为了避免过度内存使用，您可以：
为多词查询设置 rewrite 参数。 使用 topterms* 重写方法。 如果你仅使用 span_multi 进行 prefix 查询，请考虑为文本字段启用 index_prefixes 选项。这将自动将字段上的任何 prefix 查询重写为匹配索引前缀的单词查询。 参考样例 # span_multi 查询使用以下语法来包装 prefix 查询：
&amp;quot;span_multi&amp;quot;: { &amp;quot;match&amp;quot;: { &amp;quot;prefix&amp;quot;: { &amp;quot;description&amp;quot;: { &amp;quot;value&amp;quot;: &amp;quot;flutter&amp;quot; } } } } 以下查询搜索以“dress”开头的单词，在彼此最多 5 个单词的距离内靠近任何形式的“sleeve”：</description></item><item><title>Span 或查询</title><link>/easysearch/v1.15.3/docs/references/search/span/span-or/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.15.3/docs/references/search/span/span-or/</guid><description>Span 或查询 # span_or 查询组合多个 span 查询，并匹配它们 span 的并集。如果其中至少一个包含的 span 查询匹配，则发生匹配。
例如，您可以使用 span_or 查询来：
查找匹配多个模式中的任意一个的 span。 将不同的 span 模式作为备选项组合。 在一个查询中匹配多个 span 变体。 参考样例 # 以下查询搜索“formal collar”或“button collar”在彼此 2 个词距离内出现：
GET /clothing/_search { &amp;quot;query&amp;quot;: { &amp;quot;span_or&amp;quot;: { &amp;quot;clauses&amp;quot;: [ { &amp;quot;span_near&amp;quot;: { &amp;quot;clauses&amp;quot;: [ { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;formal&amp;quot; } }, { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;collar&amp;quot; } } ], &amp;quot;slop&amp;quot;: 0, &amp;quot;in_order&amp;quot;: true } }, { &amp;quot;span_near&amp;quot;: { &amp;quot;clauses&amp;quot;: [ { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;button&amp;quot; } }, { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;collar&amp;quot; } } ], &amp;quot;slop&amp;quot;: 2, &amp;quot;in_order&amp;quot;: true } } ] } } } 该查询在指定的 slop 距离内匹配文档 1（“…formal collar…”）和文档 3（“…button-down collar…”）。</description></item><item><title>Span 排除查询</title><link>/easysearch/v1.15.3/docs/references/search/span/span-not/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.15.3/docs/references/search/span/span-not/</guid><description>Span 排除查询 # span_not 查询会排除与另一个 span 查询重叠的跨度。您还可以指定在排除的跨度之前或之后不允许匹配的距离范围。
例如，您可以使用 span_not 查询来：
查找除在特定短语中出现时的词项外。 除非它们靠近特定词项，否则匹配跨度。 排除在特定距离内出现的其他模式匹配。 参考样例 # 以下查询搜索单词“dress”，但当它出现在短语“dress shirt”中时不搜索：
GET /clothing/_search { &amp;quot;query&amp;quot;: { &amp;quot;span_not&amp;quot;: { &amp;quot;include&amp;quot;: { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;dress&amp;quot; } }, &amp;quot;exclude&amp;quot;: { &amp;quot;span_near&amp;quot;: { &amp;quot;clauses&amp;quot;: [ { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;dress&amp;quot; } }, { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;shirt&amp;quot; } } ], &amp;quot;slop&amp;quot;: 0, &amp;quot;in_order&amp;quot;: true } } } } } 该查询匹配文档 2，因为它包含单词“dress”（“Beautiful long dress…”）。文档 1 未匹配，因为它包含短语“dress shirt”，该短语被排除。文档 3 和 4 未匹配，因为它们包含单词“dress”的变体（“dressed”和“dresses”），并且查询是在原始字段中进行的。</description></item><item><title>Span 词项查询</title><link>/easysearch/v1.15.3/docs/references/search/span/span-term/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.15.3/docs/references/search/span/span-term/</guid><description>Span 词项查询 # span_term 查询是最基本的 span 查询，它匹配包含单个词的 span。它是更复杂的 span 查询的构建模块。
例如，您可以使用 span_term 查询来：
查找可用于其他 span 查询的精确词匹配。 匹配特定单词同时保持位置信息。 创建可与其他 span 查询组合的基本 span。 参考样例 # 以下查询搜索确切的词“formal”：
GET /clothing/_search { &amp;quot;query&amp;quot;: { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;formal&amp;quot; } } } 或者，您可以在 value 参数中指定搜索词：
GET /clothing/_search { &amp;quot;query&amp;quot;: { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: { &amp;quot;value&amp;quot;: &amp;quot;formal&amp;quot; } } } } 您也可以指定 boost 值来提升文档得分：
GET /clothing/_search { &amp;quot;query&amp;quot;: { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: { &amp;quot;value&amp;quot;: &amp;quot;formal&amp;quot;, &amp;quot;boost&amp;quot;: 2 } } } } 该查询匹配文档 1 和文档 2，因为它们包含确切的词项“formal”。位置信息被保留以用于其他 span 查询。</description></item><item><title>Span 跨字段查询</title><link>/easysearch/v1.15.3/docs/references/search/span/span-field-masking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.15.3/docs/references/search/span/span-field-masking/</guid><description>Span 跨字段查询 # field_masking_span 查询允许 span 查询通过“掩饰”查询的真实字段来匹配不同字段。这在处理多字段（相同内容使用不同分词器索引）或需要跨不同字段运行 span 查询（如 span_near 或 span_or ，这通常是不允许的）时特别有用。
例如，您可以使用 field_masking_span 查询来：
匹配原始字段及其词干版本中的词项。 在一个 span 操作中组合不同字段的 span 查询。 使用不同分词器索引的相同内容进行操作。 在使用字段遮罩时，相关性分数是根据遮罩字段的特性（范数）计算的，而不是实际搜索的字段。这意味着如果遮罩字段与被搜索字段具有不同的属性（如长度或提升值），您可能会收到意外的评分结果。
参考样例 # 以下查询在词干化字段中搜索单词“long”，并查找“sleeve”一词的变体附近：
GET /clothing/_search { &amp;quot;query&amp;quot;: { &amp;quot;span_near&amp;quot;: { &amp;quot;clauses&amp;quot;: [ { &amp;quot;span_term&amp;quot;: { &amp;quot;description&amp;quot;: &amp;quot;long&amp;quot; } }, { &amp;quot;field_masking_span&amp;quot;: { &amp;quot;query&amp;quot;: { &amp;quot;span_term&amp;quot;: { &amp;quot;description.stemmed&amp;quot;: &amp;quot;sleev&amp;quot; } }, &amp;quot;field&amp;quot;: &amp;quot;description&amp;quot; } } ], &amp;quot;slop&amp;quot;: 1, &amp;quot;in_order&amp;quot;: true } } } 查询匹配文档 1 和文档 4：</description></item><item><title>Span 邻近查询</title><link>/easysearch/v1.15.3/docs/references/search/span/span-near/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/easysearch/v1.15.3/docs/references/search/span/span-near/</guid><description>Span 邻近查询 # span_near 查询匹配彼此靠近的跨度。您可以指定跨度之间的距离，并指定它们是否需要按特定顺序出现。
例如，您可以使用 span_near 查询来：
查找彼此之间距离在特定范围内的词项。 匹配词语按特定顺序出现的短语。 查找文本中彼此靠近的相关概念。 参考样例 # 以下查询搜索任何形式的“sleeve”和“long”相邻出现，顺序不限：
GET /clothing/_search { &amp;quot;query&amp;quot;: { &amp;quot;span_near&amp;quot;: { &amp;quot;clauses&amp;quot;: [ { &amp;quot;span_term&amp;quot;: { &amp;quot;description.stemmed&amp;quot;: &amp;quot;sleev&amp;quot; } }, { &amp;quot;span_term&amp;quot;: { &amp;quot;description.stemmed&amp;quot;: &amp;quot;long&amp;quot; } } ], &amp;quot;slop&amp;quot;: 1, &amp;quot;in_order&amp;quot;: false } } } 该查询匹配文档 1（“Long-sleeved…”）和文档 2（“…long fluttered sleeves…”）。在文档 1 中，词语是相邻的，而在文档 2 中，它们在指定的 slop 距离 1 内（它们之间有一个词）。
{ &amp;quot;took&amp;quot;: 3, &amp;quot;timed_out&amp;quot;: false, &amp;quot;_shards&amp;quot;: { &amp;quot;total&amp;quot;: 1, &amp;quot;successful&amp;quot;: 1, &amp;quot;skipped&amp;quot;: 0, &amp;quot;failed&amp;quot;: 0 }, &amp;quot;hits&amp;quot;: { &amp;quot;total&amp;quot;: { &amp;quot;value&amp;quot;: 2, &amp;quot;relation&amp;quot;: &amp;quot;eq&amp;quot; }, &amp;quot;max_score&amp;quot;: 0.</description></item></channel></rss>