<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Coco Server</title><link>/coco-server/main/</link><description>Recent content on Coco Server</description><generator>Hugo -- gohugo.io</generator><atom:link href="/coco-server/main/index.xml" rel="self" type="application/rss+xml"/><item><title>Google Drive</title><link>/coco-server/main/docs/references/connectors/google_drive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/connectors/google_drive/</guid><description>Google Drive Connector # Register Google Drive Connector # curl -XPUT &amp;#34;http://localhost:9000/connector/google_drive?replace=true&amp;#34; -d &amp;#39;{ &amp;#34;name&amp;#34;: &amp;#34;Google Drive Connector&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Fetch the files metadata from Google Drive.&amp;#34;, &amp;#34;icon&amp;#34;: &amp;#34;/assets/connector/google_drive/icon.png&amp;#34;, &amp;#34;category&amp;#34;: &amp;#34;cloud_storage&amp;#34;, &amp;#34;tags&amp;#34;: [ &amp;#34;google&amp;#34;, &amp;#34;storage&amp;#34; ], &amp;#34;url&amp;#34;: &amp;#34;http://coco.rs/connectors/google_drive&amp;#34;, &amp;#34;assets&amp;#34;: { &amp;#34;icons&amp;#34;: { &amp;#34;default&amp;#34;: &amp;#34;/assets/connector/google_drive/icon.png&amp;#34;, &amp;#34;audio&amp;#34;: &amp;#34;/assets/connector/google_drive/audio.png&amp;#34;, &amp;#34;form&amp;#34;: &amp;#34;/assets/connector/google_drive/form.png&amp;#34;, &amp;#34;document&amp;#34;: &amp;#34;/assets/connector/google_drive/document.png&amp;#34;, &amp;#34;drawing&amp;#34;: &amp;#34;/assets/connector/google_drive/drawing.png&amp;#34;, &amp;#34;folder&amp;#34;: &amp;#34;/assets/connector/google_drive/folder.png&amp;#34;, &amp;#34;fusiontable&amp;#34;: &amp;#34;/assets/connector/google_drive/fusiontable.png&amp;#34;, &amp;#34;jam&amp;#34;: &amp;#34;/assets/connector/google_drive/jam.png&amp;#34;, &amp;#34;map&amp;#34;: &amp;#34;/assets/connector/google_drive/map.png&amp;#34;, &amp;#34;ms_excel&amp;#34;: &amp;#34;/assets/connector/google_drive/ms_excel.png&amp;#34;, &amp;#34;ms_powerpoint&amp;#34;: &amp;#34;/assets/connector/google_drive/ms_powerpoint.png&amp;#34;, &amp;#34;ms_word&amp;#34;: &amp;#34;/assets/connector/google_drive/ms_word.png&amp;#34;, &amp;#34;pdf&amp;#34;: &amp;#34;/assets/connector/google_drive/pdf.png&amp;#34;, &amp;#34;photo&amp;#34;: &amp;#34;/assets/connector/google_drive/photo.</description></item><item><title>Installation</title><link>/coco-server/main/docs/getting-started/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/getting-started/install/</guid><description>Getting Started # Prerequisite # Docker Ollama Easysearch Quickstart Script # Download the Server # Get the appropriate executables for your platform.
Run the Quick Setup # Simply execute the installation script:
./Install.sh Manual Installation # Follow these steps for a manual setup:
Ollama # Install Ollama
curl -fsSL https://ollama.com/install.sh | sh Start Ollama server
OLLAMA_HOST=0.0.0.0:11434 ollama serve Pull the following models</description></item><item><title>Hugo Site</title><link>/coco-server/main/docs/references/connectors/hugo_site/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/connectors/hugo_site/</guid><description>Hugo Site Connector # Register Hugo Site Connector # curl -XPUT &amp;#34;http://localhost:9000/connector/hugo_site?replace=true&amp;#34; -d &amp;#39;{ &amp;#34;name&amp;#34;: &amp;#34;Hugo Site Connector&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Fetch the index.json file from a specified Hugo site.&amp;#34;, &amp;#34;icon&amp;#34;: &amp;#34;/assets/connector/hugo_site/icon.png&amp;#34;, &amp;#34;category&amp;#34;: &amp;#34;website&amp;#34;, &amp;#34;tags&amp;#34;: [ &amp;#34;static_site&amp;#34;, &amp;#34;hugo&amp;#34;, &amp;#34;web&amp;#34; ], &amp;#34;url&amp;#34;: &amp;#34;http://coco.rs/connectors/hugo_site&amp;#34;, &amp;#34;assets&amp;#34;: { &amp;#34;icons&amp;#34;: { &amp;#34;default&amp;#34;: &amp;#34;/assets/connector/hugo_site/web.png&amp;#34;, &amp;#34;blog&amp;#34;: &amp;#34;/assets/connector/hugo_site/blog.png&amp;#34;, &amp;#34;web&amp;#34;: &amp;#34;/assets/connector/hugo_site/web.png&amp;#34;, &amp;#34;web_page&amp;#34;: &amp;#34;/assets/connector/hugo_site/web_page.png&amp;#34;, &amp;#34;news&amp;#34;: &amp;#34;/assets/connector/hugo_site/news.png&amp;#34; } } }&amp;#39; Use hugo_site as a unique identifier, as it is a builtin connector.</description></item><item><title>Notion</title><link>/coco-server/main/docs/references/connectors/notion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/connectors/notion/</guid><description>Notion Connector # Register Notion Connector # curl -XPUT &amp;#34;http://localhost:9000/connector/notion?replace=true&amp;#34; -d &amp;#39;{ &amp;#34;name&amp;#34;: &amp;#34;Notion Docs Connector&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Fetch the docs metadata for notion.&amp;#34;, &amp;#34;icon&amp;#34;: &amp;#34;/assets/connector/notion/icon.png&amp;#34;, &amp;#34;category&amp;#34;: &amp;#34;website&amp;#34;, &amp;#34;tags&amp;#34;: [ &amp;#34;docs&amp;#34;, &amp;#34;notion&amp;#34;, &amp;#34;web&amp;#34; ], &amp;#34;url&amp;#34;: &amp;#34;http://coco.rs/connectors/notion&amp;#34;, &amp;#34;assets&amp;#34;: { &amp;#34;icons&amp;#34;: { &amp;#34;default&amp;#34;: &amp;#34;/assets/connector/notion/icon.png&amp;#34;, &amp;#34;web_page&amp;#34;: &amp;#34;/assets/connector/notion/icon.png&amp;#34;, &amp;#34;database&amp;#34;: &amp;#34;/assets/connector/notion/database.png&amp;#34;, &amp;#34;page&amp;#34;: &amp;#34;/assets/connector/notion/page.png&amp;#34; } } }&amp;#39; Use notion as a unique identifier, as it is a builtin connector.
Update coco-server&amp;rsquo;s config # Below is an example configuration for enabling the Notion Connector in coco-server:</description></item><item><title>Yuque</title><link>/coco-server/main/docs/references/connectors/yuque/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/connectors/yuque/</guid><description>Yuque Connector # Register Yuque Connector # curl -XPUT &amp;#34;http://localhost:9000/connector/yuque?replace=true&amp;#34; -d &amp;#39;{ &amp;#34;name&amp;#34;: &amp;#34;Yuque Docs Connector&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Fetch the docs metadata for yuque.&amp;#34;, &amp;#34;icon&amp;#34;: &amp;#34;/assets/connector/yuque/icon.png&amp;#34;, &amp;#34;category&amp;#34;: &amp;#34;website&amp;#34;, &amp;#34;tags&amp;#34;: [ &amp;#34;static_site&amp;#34;, &amp;#34;hugo&amp;#34;, &amp;#34;web&amp;#34; ], &amp;#34;url&amp;#34;: &amp;#34;http://coco.rs/connectors/hugo_site&amp;#34;, &amp;#34;assets&amp;#34;: { &amp;#34;icons&amp;#34;: { &amp;#34;default&amp;#34;: &amp;#34;/assets/connector/yuque/icon.png&amp;#34;, &amp;#34;book&amp;#34;: &amp;#34;/assets/connector/yuque/book.png&amp;#34;, &amp;#34;board&amp;#34;: &amp;#34;/assets/connector/yuque/board.png&amp;#34;, &amp;#34;sheet&amp;#34;: &amp;#34;/assets/connector/yuque/sheet.png&amp;#34;, &amp;#34;table&amp;#34;: &amp;#34;/assets/connector/yuque/table.png&amp;#34;, &amp;#34;doc&amp;#34;: &amp;#34;/assets/connector/yuque/doc.png&amp;#34; } } }&amp;#39; Use yuque as a unique identifier, as it is a builtin connector.
Update coco-server&amp;rsquo;s config # Below is an example configuration for enabling the Yuque Connector in coco-server:</description></item><item><title>Assistant</title><link>/coco-server/main/docs/references/assistant/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/assistant/</guid><description>Assistant API # Assistant API Reference # Create a Chat Session # //request curl -H &amp;#39;Content-Type: application/json&amp;#39; -XPOST http://localhost:9000/chat/_new //response { &amp;#34;_id&amp;#34;: &amp;#34;csk30fjq50k7l4akku9g&amp;#34;, &amp;#34;_source&amp;#34;: { &amp;#34;id&amp;#34;: &amp;#34;csk30fjq50k7l4akku9g&amp;#34;, &amp;#34;created&amp;#34;: &amp;#34;2024-11-04T10:23:58.980669+08:00&amp;#34;, &amp;#34;updated&amp;#34;: &amp;#34;2024-11-04T10:23:58.980678+08:00&amp;#34;, &amp;#34;status&amp;#34;: &amp;#34;active&amp;#34; }, &amp;#34;result&amp;#34;: &amp;#34;created&amp;#34; } Retrieve Chat History (sessions) # //request curl -XGET http://localhost:9000/chat/_history //response {&amp;#34;took&amp;#34;:997,&amp;#34;timed_out&amp;#34;:false,&amp;#34;_shards&amp;#34;:{&amp;#34;total&amp;#34;:1,&amp;#34;successful&amp;#34;:1,&amp;#34;skipped&amp;#34;:0,&amp;#34;failed&amp;#34;:0},&amp;#34;hits&amp;#34;:{&amp;#34;total&amp;#34;:{&amp;#34;value&amp;#34;:1,&amp;#34;relation&amp;#34;:&amp;#34;eq&amp;#34;},&amp;#34;max_score&amp;#34;:1.0,&amp;#34;hits&amp;#34;:[{&amp;#34;_index&amp;#34;:&amp;#34;.infini_session&amp;#34;,&amp;#34;_type&amp;#34;:&amp;#34;_doc&amp;#34;,&amp;#34;_id&amp;#34;:&amp;#34;csk30fjq50k7l4akku9g&amp;#34;,&amp;#34;_score&amp;#34;:1.0,&amp;#34;_source&amp;#34;:{&amp;#34;id&amp;#34;:&amp;#34;csk30fjq50k7l4akku9g&amp;#34;,&amp;#34;created&amp;#34;:&amp;#34;2024-11-04T10:23:58.980669+08:00&amp;#34;,&amp;#34;updated&amp;#34;:&amp;#34;2024-11-04T10:23:58.980678+08:00&amp;#34;,&amp;#34;status&amp;#34;:&amp;#34;active&amp;#34;}}]}} Open a Existing Chat Session # //request curl -H &amp;#39;Content-Type: application/json&amp;#39; -XPOST http://localhost:9000/chat/csk30fjq50k7l4akku9g/_open //response { &amp;#34;_id&amp;#34;: &amp;#34;csk30fjq50k7l4akku9g&amp;#34;, &amp;#34;_source&amp;#34;: { &amp;#34;id&amp;#34;: &amp;#34;csk30fjq50k7l4akku9g&amp;#34;, &amp;#34;created&amp;#34;: &amp;#34;2024-11-04T10:23:58.</description></item><item><title>Document</title><link>/coco-server/main/docs/references/document/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/document/</guid><description>Document API # Document API Reference # Documents # Below is the field description for the document.
Field Type Description source object The source of the document. category string Primary category of the document, e.g., report. subcategory string Secondary category of the document, e.g., 2024. categories array[string] List of categories the document belongs to, e.</description></item><item><title>Profile</title><link>/coco-server/main/docs/references/profile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/profile/</guid><description>Profile API # Profile API Reference # Profile # The Profile endpoint retrieves information about a user profile. Below is the field description for the profile object.
Field Type Description id string Unique identifier for the user profile. username string User&amp;rsquo;s display name or username. email string User&amp;rsquo;s email address. avatar string (URL) URL to the user&amp;rsquo;s avatar image.</description></item><item><title>Search</title><link>/coco-server/main/docs/references/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/search/</guid><description>Search API # Search API Reference # Get Query Suggestions # //request curl -XGET http://localhost:9000/query/_suggest\?query\=buss //response { &amp;#34;query&amp;#34;: &amp;#34;buss&amp;#34;, &amp;#34;suggestions&amp;#34;: [ { &amp;#34;suggestion&amp;#34;: &amp;#34;Q3 Business Report&amp;#34;, &amp;#34;score&amp;#34;: 0.99, &amp;#34;source&amp;#34;: { &amp;#34;type&amp;#34;:&amp;#34;connector&amp;#34;, &amp;#34;name&amp;#34;:&amp;#34;google_drive&amp;#34;, &amp;#34;id&amp;#34;:&amp;#34;e806831dacc3&amp;#34;, } } ] } Get Search Results # //request curl -XGET http://localhost:9000/query/_search\?query\=Business //response {&amp;#34;took&amp;#34;:15,&amp;#34;timed_out&amp;#34;:false,&amp;#34;_shards&amp;#34;:{&amp;#34;total&amp;#34;:1,&amp;#34;successful&amp;#34;:1,&amp;#34;skipped&amp;#34;:0,&amp;#34;failed&amp;#34;:0},&amp;#34;hits&amp;#34;:{&amp;#34;total&amp;#34;:{&amp;#34;value&amp;#34;:1,&amp;#34;relation&amp;#34;:&amp;#34;eq&amp;#34;},&amp;#34;max_score&amp;#34;:3.0187376,&amp;#34;hits&amp;#34;:[{&amp;#34;_index&amp;#34;:&amp;#34;coco_document&amp;#34;,&amp;#34;_type&amp;#34;:&amp;#34;_doc&amp;#34;,&amp;#34;_id&amp;#34;:&amp;#34;csstf6rq50k5sqipjaa0&amp;#34;,&amp;#34;_score&amp;#34;:3.0187376,&amp;#34;_source&amp;#34;:{&amp;#34;id&amp;#34;:&amp;#34;csstf6rq50k5sqipjaa0&amp;#34;, ...OMITTED...}}}]}}</description></item><item><title>Connector</title><link>/coco-server/main/docs/references/api/connector/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/api/connector/</guid><description>Connector # Work with Connector # Register a Connector # //request curl -H &amp;#39;Content-Type: application/json&amp;#39; -XPOST http://localhost:9000/connector/ -d&amp;#39;{ &amp;#34;name&amp;#34;: &amp;#34;Hugo Site Connector&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Fetch the index.json file from a specified Hugo site.&amp;#34;, &amp;#34;icon&amp;#34;: &amp;#34;http://coco.infini.cloud/assets/hugo.png&amp;#34;, &amp;#34;category&amp;#34;: &amp;#34;website&amp;#34;, &amp;#34;tags&amp;#34;: [ &amp;#34;static_site&amp;#34;, &amp;#34;hugo&amp;#34;, &amp;#34;web&amp;#34; ], &amp;#34;url&amp;#34;: &amp;#34;http://coco.rs/connectors/hugo_site&amp;#34;, &amp;#34;assets&amp;#34;: { &amp;#34;icons&amp;#34;: { &amp;#34;default&amp;#34;: &amp;#34;http://coco.infini.cloud/assets/web.png&amp;#34;, &amp;#34;blog&amp;#34;: &amp;#34;http://coco.infini.cloud/assets/hugo/blog.png&amp;#34;, &amp;#34;web&amp;#34;: &amp;#34;http://coco.infini.cloud/assets/hugo/web_page.png&amp;#34;, &amp;#34;news&amp;#34;: &amp;#34;http://coco.infini.cloud/assets/hugo/news.png&amp;#34; } } }&amp;#39; //response { &amp;#34;_id&amp;#34;: &amp;#34;cu0caqt3q95r66at41o0&amp;#34;, &amp;#34;result&amp;#34;: &amp;#34;created&amp;#34; } Update a Connector # curl -XPUT http://localhost:9000/connector/cu0caqt3q95r66at41o0?</description></item><item><title>Connector</title><link>/coco-server/main/docs/references/connector/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/connector/</guid><description>Connector # Work with Connector # Register a Connector # //request curl -H &amp;#39;Content-Type: application/json&amp;#39; -XPOST http://localhost:9000/connector/ -d&amp;#39;{ &amp;#34;name&amp;#34;: &amp;#34;Hugo Site Connector&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Fetch the index.json file from a specified Hugo site.&amp;#34;, &amp;#34;icon&amp;#34;: &amp;#34;http://coco.infini.cloud/assets/hugo.png&amp;#34;, &amp;#34;category&amp;#34;: &amp;#34;website&amp;#34;, &amp;#34;tags&amp;#34;: [ &amp;#34;static_site&amp;#34;, &amp;#34;hugo&amp;#34;, &amp;#34;web&amp;#34; ], &amp;#34;url&amp;#34;: &amp;#34;http://coco.rs/connectors/hugo_site&amp;#34;, &amp;#34;assets&amp;#34;: { &amp;#34;icons&amp;#34;: { &amp;#34;default&amp;#34;: &amp;#34;http://coco.infini.cloud/assets/web.png&amp;#34;, &amp;#34;blog&amp;#34;: &amp;#34;http://coco.infini.cloud/assets/hugo/blog.png&amp;#34;, &amp;#34;web&amp;#34;: &amp;#34;http://coco.infini.cloud/assets/hugo/web_page.png&amp;#34;, &amp;#34;news&amp;#34;: &amp;#34;http://coco.infini.cloud/assets/hugo/news.png&amp;#34; } } }&amp;#39; //response { &amp;#34;_id&amp;#34;: &amp;#34;cu0caqt3q95r66at41o0&amp;#34;, &amp;#34;result&amp;#34;: &amp;#34;created&amp;#34; } Update a Connector # curl -XPUT http://localhost:9000/connector/cu0caqt3q95r66at41o0?</description></item><item><title>Datasource</title><link>/coco-server/main/docs/references/api/datasource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/api/datasource/</guid><description>Datasource # Work with Datasource # Datasource defines where the data comes from, usually we can use a specify connector to fetch data from a specify datasource.
Create a Datasource # We can use the connector to connect a specify datasource.
//request curl -H &amp;#39;Content-Type: application/json&amp;#39; -XPOST http://localhost:9000/datasource/ -d&amp;#39; { &amp;#34;name&amp;#34;:&amp;#34;My Hugo Site&amp;#34;, &amp;#34;type&amp;#34;:&amp;#34;connector&amp;#34;, &amp;#34;connector&amp;#34;:{ &amp;#34;id&amp;#34;:&amp;#34;cu0caqt3q95r66at41o0&amp;#34;, &amp;#34;config&amp;#34;:{ &amp;#34;urls&amp;#34;: [ &amp;#34;https://pizza.rs/index.json&amp;#34; ] } } }&amp;#39; //response { &amp;#34;_id&amp;#34;: &amp;#34;cu1rf03q50k43nn2pi6g&amp;#34;, &amp;#34;result&amp;#34;: &amp;#34;created&amp;#34; } View a Datasource # curl -XGET http://localhost:9000/datasource/cu1rf03q50k43nn2pi6g Delete the Datasource # //request curl -H &amp;#39;Content-Type: application/json&amp;#39; -XDELETE http://localhost:9000/datasource/cu1rf03q50k43nn2pi6g -d&amp;#39; { &amp;#34;_id&amp;#34;: &amp;#34;cu1rf03q50k43nn2pi6g&amp;#34;, &amp;#34;result&amp;#34;: &amp;#34;deleted&amp;#34; }&amp;#39; Update a Datasource # curl -XPUT http://localhost:9000/datasource/cu1rf03q50k43nn2pi6g?</description></item><item><title>Datasource</title><link>/coco-server/main/docs/references/datasource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/datasource/</guid><description>Datasource # Work with Datasource # Datasource defines where the data comes from, usually we can use a specify connector to fetch data from a specify datasource.
Create a Datasource # We can use the connector to connect a specify datasource.
//request curl -H &amp;#39;Content-Type: application/json&amp;#39; -XPOST http://localhost:9000/datasource/ -d&amp;#39; { &amp;#34;name&amp;#34;:&amp;#34;My Hugo Site&amp;#34;, &amp;#34;type&amp;#34;:&amp;#34;connector&amp;#34;, &amp;#34;connector&amp;#34;:{ &amp;#34;id&amp;#34;:&amp;#34;hugo_site&amp;#34;, &amp;#34;config&amp;#34;:{ &amp;#34;urls&amp;#34;: [ &amp;#34;https://pizza.rs/index.json&amp;#34; ] } } }&amp;#39; //response { &amp;#34;_id&amp;#34;: &amp;#34;cu1rf03q50k43nn2pi6g&amp;#34;, &amp;#34;result&amp;#34;: &amp;#34;created&amp;#34; } config specifies the necessary configurations for this connector.</description></item></channel></rss>