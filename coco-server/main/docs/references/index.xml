<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>References on Coco Server</title><link>/coco-server/main/docs/references/</link><description>Recent content in References on Coco Server</description><generator>Hugo -- gohugo.io</generator><atom:link href="/coco-server/main/docs/references/index.xml" rel="self" type="application/rss+xml"/><item><title>Assistant</title><link>/coco-server/main/docs/references/assistant/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/assistant/</guid><description>Assistant API # Assistant API Reference # Create a Chat Session # //request curl -H &amp;#39;Content-Type: application/json&amp;#39; -XPOST http://localhost:9000/chat/_new //response { &amp;#34;_id&amp;#34;: &amp;#34;csk30fjq50k7l4akku9g&amp;#34;, &amp;#34;_source&amp;#34;: { &amp;#34;id&amp;#34;: &amp;#34;csk30fjq50k7l4akku9g&amp;#34;, &amp;#34;created&amp;#34;: &amp;#34;2024-11-04T10:23:58.980669+08:00&amp;#34;, &amp;#34;updated&amp;#34;: &amp;#34;2024-11-04T10:23:58.980678+08:00&amp;#34;, &amp;#34;status&amp;#34;: &amp;#34;active&amp;#34; }, &amp;#34;result&amp;#34;: &amp;#34;created&amp;#34; } Retrieve Chat History (sessions) # //request curl -XGET http://localhost:9000/chat/_history //response {&amp;#34;took&amp;#34;:997,&amp;#34;timed_out&amp;#34;:false,&amp;#34;_shards&amp;#34;:{&amp;#34;total&amp;#34;:1,&amp;#34;successful&amp;#34;:1,&amp;#34;skipped&amp;#34;:0,&amp;#34;failed&amp;#34;:0},&amp;#34;hits&amp;#34;:{&amp;#34;total&amp;#34;:{&amp;#34;value&amp;#34;:1,&amp;#34;relation&amp;#34;:&amp;#34;eq&amp;#34;},&amp;#34;max_score&amp;#34;:1.0,&amp;#34;hits&amp;#34;:[{&amp;#34;_index&amp;#34;:&amp;#34;.infini_session&amp;#34;,&amp;#34;_type&amp;#34;:&amp;#34;_doc&amp;#34;,&amp;#34;_id&amp;#34;:&amp;#34;csk30fjq50k7l4akku9g&amp;#34;,&amp;#34;_score&amp;#34;:1.0,&amp;#34;_source&amp;#34;:{&amp;#34;id&amp;#34;:&amp;#34;csk30fjq50k7l4akku9g&amp;#34;,&amp;#34;created&amp;#34;:&amp;#34;2024-11-04T10:23:58.980669+08:00&amp;#34;,&amp;#34;updated&amp;#34;:&amp;#34;2024-11-04T10:23:58.980678+08:00&amp;#34;,&amp;#34;status&amp;#34;:&amp;#34;active&amp;#34;}}]}} Open a Existing Chat Session # //request curl -H &amp;#39;Content-Type: application/json&amp;#39; -XPOST http://localhost:9000/chat/csk30fjq50k7l4akku9g/_open //response { &amp;#34;_id&amp;#34;: &amp;#34;csk30fjq50k7l4akku9g&amp;#34;, &amp;#34;_source&amp;#34;: { &amp;#34;id&amp;#34;: &amp;#34;csk30fjq50k7l4akku9g&amp;#34;, &amp;#34;created&amp;#34;: &amp;#34;2024-11-04T10:23:58.</description></item><item><title>Document</title><link>/coco-server/main/docs/references/document/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/document/</guid><description>Document API # Document API Reference # Documents # Below is the field description for the document.
Field Type Description source object The source of the document. category string Primary category of the document, e.g., report. subcategory string Secondary category of the document, e.g., 2024. categories array[string] List of categories the document belongs to, e.</description></item><item><title>Profile</title><link>/coco-server/main/docs/references/profile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/profile/</guid><description>Profile API # Profile API Reference # Profile # The Profile endpoint retrieves information about a user profile. Below is the field description for the profile object.
Field Type Description id string Unique identifier for the user profile. username string User&amp;rsquo;s display name or username. email string User&amp;rsquo;s email address. avatar string (URL) URL to the user&amp;rsquo;s avatar image.</description></item><item><title>Search</title><link>/coco-server/main/docs/references/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/search/</guid><description>Search API # Search API Reference # Get Query Suggestions # //request curl -XGET http://localhost:9000/query/_suggest\?query\=buss //response { &amp;#34;query&amp;#34;: &amp;#34;buss&amp;#34;, &amp;#34;suggestions&amp;#34;: [ { &amp;#34;suggestion&amp;#34;: &amp;#34;Q3 Business Report&amp;#34;, &amp;#34;score&amp;#34;: 0.99, &amp;#34;source&amp;#34;: { &amp;#34;type&amp;#34;:&amp;#34;connector&amp;#34;, &amp;#34;name&amp;#34;:&amp;#34;google_drive&amp;#34;, &amp;#34;id&amp;#34;:&amp;#34;e806831dacc3&amp;#34;, } } ] } Get Search Results # //request curl -XGET http://localhost:9000/query/_search\?query\=Business //response {&amp;#34;took&amp;#34;:15,&amp;#34;timed_out&amp;#34;:false,&amp;#34;_shards&amp;#34;:{&amp;#34;total&amp;#34;:1,&amp;#34;successful&amp;#34;:1,&amp;#34;skipped&amp;#34;:0,&amp;#34;failed&amp;#34;:0},&amp;#34;hits&amp;#34;:{&amp;#34;total&amp;#34;:{&amp;#34;value&amp;#34;:1,&amp;#34;relation&amp;#34;:&amp;#34;eq&amp;#34;},&amp;#34;max_score&amp;#34;:3.0187376,&amp;#34;hits&amp;#34;:[{&amp;#34;_index&amp;#34;:&amp;#34;coco_document&amp;#34;,&amp;#34;_type&amp;#34;:&amp;#34;_doc&amp;#34;,&amp;#34;_id&amp;#34;:&amp;#34;csstf6rq50k5sqipjaa0&amp;#34;,&amp;#34;_score&amp;#34;:3.0187376,&amp;#34;_source&amp;#34;:{&amp;#34;id&amp;#34;:&amp;#34;csstf6rq50k5sqipjaa0&amp;#34;, ...OMITTED...}}}]}}</description></item><item><title>Datasource</title><link>/coco-server/main/docs/references/datasource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/datasource/</guid><description>Datasource # Work with Datasource # Datasource defines where the data comes from, usually we can use a specify connector to fetch data from a specify datasource.
Create a Datasource # We can use the connector to connect specify datasource.
//request curl -H &amp;#39;Content-Type: application/json&amp;#39; -XPOST http://localhost:9000/datasource/ -d&amp;#39; { &amp;#34;name&amp;#34;:&amp;#34;My Hugo Site&amp;#34;, &amp;#34;type&amp;#34;:&amp;#34;connector&amp;#34;, &amp;#34;connector&amp;#34;:{ &amp;#34;id&amp;#34;:&amp;#34;hugo_site&amp;#34;, &amp;#34;config&amp;#34;:{ &amp;#34;urls&amp;#34;: [ &amp;#34;https://pizza.rs/index.json&amp;#34; ] } } }&amp;#39; //response { &amp;#34;_id&amp;#34;: &amp;#34;cu1rf03q50k43nn2pi6g&amp;#34;, &amp;#34;result&amp;#34;: &amp;#34;created&amp;#34; } config specifies the necessary configurations for this connector.</description></item></channel></rss>