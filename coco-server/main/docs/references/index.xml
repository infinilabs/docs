<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>References on Coco Server</title><link>/coco-server/main/docs/references/</link><description>Recent content in References on Coco Server</description><generator>Hugo -- gohugo.io</generator><atom:link href="/coco-server/main/docs/references/index.xml" rel="self" type="application/rss+xml"/><item><title>Assistant</title><link>/coco-server/main/docs/references/assistant/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/assistant/</guid><description>Assistant # Assistant API Reference # Create an AI assistant # //request curl -XPOST http://localhost:9000/assistant/ -d&amp;#39;{ &amp;#34;name&amp;#34; : &amp;#34;deault&amp;#34;, &amp;#34;description&amp;#34; : &amp;#34;default AI chat assistant&amp;#34;, &amp;#34;icon&amp;#34; : &amp;#34;font_Google-video&amp;#34;, &amp;#34;type&amp;#34; : &amp;#34;deep_think&amp;#34;, &amp;#34;config&amp;#34; : { &amp;#34;intent_analysis_model&amp;#34; : { &amp;#34;name&amp;#34; : &amp;#34;tongyi-intent-detect-v3&amp;#34;, &amp;#34;provider_id&amp;#34; : &amp;#34;cvuai3dath2dlgqqpc2g&amp;#34;, &amp;#34;settings&amp;#34;: { &amp;#34;temperature&amp;#34; : 0.8, &amp;#34;top_p&amp;#34; : 0.5, &amp;#34;presence_penalty&amp;#34; : 0, &amp;#34;frequency_penalty&amp;#34; : 0, &amp;#34;max_tokens&amp;#34; : 1024 } }, &amp;#34;picking_doc_model&amp;#34; : { &amp;#34;name&amp;#34; : &amp;#34;deepseek-r1-distill-qwen-32b&amp;#34;, &amp;#34;provider_id&amp;#34; : &amp;#34;cvuai3dath2dlgqqpc2g&amp;#34;, &amp;#34;settings&amp;#34;: { &amp;#34;temperature&amp;#34; : 0.</description></item><item><title>Document</title><link>/coco-server/main/docs/references/document/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/document/</guid><description>Document API # Document API Reference # Documents # Below is the field description for the document.
Field Type Description source object The source of the document. category string Primary category of the document, e.g., report. subcategory string Secondary category of the document, e.g., 2024. categories array[string] List of categories the document belongs to, e.</description></item><item><title>Search</title><link>/coco-server/main/docs/references/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/search/</guid><description>Search API # Search API Reference # Get Query Suggestions # //request curl -XGET http://localhost:9000/query/_suggest\?query\=buss //response { &amp;#34;query&amp;#34;: &amp;#34;buss&amp;#34;, &amp;#34;suggestions&amp;#34;: [ { &amp;#34;suggestion&amp;#34;: &amp;#34;Q3 Business Report&amp;#34;, &amp;#34;score&amp;#34;: 0.99, &amp;#34;source&amp;#34;: { &amp;#34;type&amp;#34;:&amp;#34;connector&amp;#34;, &amp;#34;name&amp;#34;:&amp;#34;google_drive&amp;#34;, &amp;#34;id&amp;#34;:&amp;#34;e806831dacc3&amp;#34;, } } ] } Get Search Results # //request curl -XGET http://localhost:9000/query/_search\?query\=Business //response {&amp;#34;took&amp;#34;:15,&amp;#34;timed_out&amp;#34;:false,&amp;#34;_shards&amp;#34;:{&amp;#34;total&amp;#34;:1,&amp;#34;successful&amp;#34;:1,&amp;#34;skipped&amp;#34;:0,&amp;#34;failed&amp;#34;:0},&amp;#34;hits&amp;#34;:{&amp;#34;total&amp;#34;:{&amp;#34;value&amp;#34;:1,&amp;#34;relation&amp;#34;:&amp;#34;eq&amp;#34;},&amp;#34;max_score&amp;#34;:3.0187376,&amp;#34;hits&amp;#34;:[{&amp;#34;_index&amp;#34;:&amp;#34;coco_document&amp;#34;,&amp;#34;_type&amp;#34;:&amp;#34;_doc&amp;#34;,&amp;#34;_id&amp;#34;:&amp;#34;csstf6rq50k5sqipjaa0&amp;#34;,&amp;#34;_score&amp;#34;:3.0187376,&amp;#34;_source&amp;#34;:{&amp;#34;id&amp;#34;:&amp;#34;csstf6rq50k5sqipjaa0&amp;#34;, ...OMITTED...}}}]}} Parameters # Parameter Type Default Description query string &amp;quot;&amp;quot; The search query string.</description></item><item><title>Datasource</title><link>/coco-server/main/docs/references/datasource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/datasource/</guid><description>Datasource # Work with Datasource # Datasource defines where the data comes from, usually we can use a specify connector to fetch data from a specify datasource.
Create a Datasource # We can use the connector to connect specify datasource.
//request curl -H &amp;#39;Content-Type: application/json&amp;#39; -XPOST http://localhost:9000/datasource/ -d&amp;#39; { &amp;#34;name&amp;#34;:&amp;#34;My Hugo Site&amp;#34;, &amp;#34;type&amp;#34;:&amp;#34;connector&amp;#34;, &amp;#34;connector&amp;#34;:{ &amp;#34;id&amp;#34;:&amp;#34;hugo_site&amp;#34;, &amp;#34;config&amp;#34;:{ &amp;#34;urls&amp;#34;: [ &amp;#34;https://pizza.rs/index.json&amp;#34; ] } } }&amp;#39; //response { &amp;#34;_id&amp;#34;: &amp;#34;cu1rf03q50k43nn2pi6g&amp;#34;, &amp;#34;result&amp;#34;: &amp;#34;created&amp;#34; } config specifies the necessary configurations for this connector.</description></item><item><title>Integration</title><link>/coco-server/main/docs/references/integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/integration/</guid><description>Integration # Work with Integration # The integration generates a piece of code based on certain configuration parameters, which can be embedded into other websites. This code allows you to quickly use Coco AI&amp;rsquo;s search and chat capabilities.
Integration API # Below is the field description for the integration.
Field Type Description name string The integration&amp;rsquo;s name. type string The integration type.</description></item><item><title>MCP Server</title><link>/coco-server/main/docs/references/mcp_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/mcp_server/</guid><description>MCP Server # Work with MCP Server # TThe MCP Server provides commonly used MCP configurations for large model calls.
MCP Server API # Below is the field description for the MCP Server.
Field Type Description name string The MCP Server&amp;rsquo;s name. type string The type to access the API of the MCP Server, possible values: stdio, streamable http.</description></item><item><title>Model Provider</title><link>/coco-server/main/docs/references/model_provider/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/model_provider/</guid><description>Model Provider # Work with Model Provider # The Model Provider enables seamless integration of various AI models into your application. It supports multiple model types, including Deepseek, OpenAI, and more. This guide provides a comprehensive overview of how to effectively utilize the Model Provider.
Model Provider API # Below is the field description for the model provider.
Field Type Description name string The model provider&amp;rsquo;s name.</description></item><item><title>Attachment</title><link>/coco-server/main/docs/references/attachment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/main/docs/references/attachment/</guid><description>Attachment # Attachment API are used to upload your local files to Coco server.
Upload attachment in chat session # curl -X POST http://localhost:9000/chat/[session_id]/_upload -F &amp;quot;files=LOCAL_FILE&amp;quot;
Example
curl -X POST http://localhost:9000/chat/cu737jrq50kcaicgn7pg/_upload \ -H &amp;quot;X-API-TOKEN: cv9pnurq50k1hii28630jy429g4b49viecrlj9529onpa6n0lti7yohioitvyotd0677rop5uszc0cnll03j&amp;quot; \ -F &amp;quot;files=@/Users/medcl/Downloads/tmp/neurips19-diskann.pdf&amp;quot; \ -F &amp;quot;files=@/Users/medcl/Downloads/tmp/Adaptive_searching_in_succinctly_encoded.pdf&amp;quot; The session_id need to be replaced with actual session id.
Response
{ &amp;quot;acknowledged&amp;quot;: true, &amp;quot;attachments&amp;quot;: [ &amp;quot;cv9q94bq50k2r0s6nob0&amp;quot;, &amp;quot;cv9q94bq50k2r0s6nobg&amp;quot; ] } Download attachment # curl -X GET http://localhost:9000/attachment/cv9q94bq50k2r0s6nobg \ -H &amp;quot;X-API-TOKEN: cv9pnurq50k1hii28630jy429g4b49viecrlj9529onpa6n0lti7yohioitvyotd0677rop5uszc0cnll03j&amp;quot; Check attachment exists # curl -I http://localhost:9000/attachment/cv9q94bq50k2r0s6nobg \ -H &amp;quot;X-API-TOKEN: cv9pnurq50k1hii28630jy429g4b49viecrlj9529onpa6n0lti7yohioitvyotd0677rop5uszc0cnll03j&amp;quot; Response</description></item></channel></rss>