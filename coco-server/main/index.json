[{"category":null,"content":"System Settings #  System Settings API #  curl -XPOST http://localhost:9000/settings -d' { \u0026quot;server\u0026quot;:{ \u0026quot;name\u0026quot;: \u0026quot;My Coco Server\u0026quot;, \u0026quot;endpoint\u0026quot;:\u0026quot;http://xxxx/\u0026quot;, \u0026quot;provider\u0026quot;: { \u0026quot;banner\u0026quot;: \u0026quot;http://localhost:9000/banner2.jpg\u0026quot;, \u0026quot;description\u0026quot;: \u0026quot;Coco AI Server - Search, Connect, Collaborate, AI-powered enterprise search, all in one space.\u0026quot;, \u0026quot;eula\u0026quot;: \u0026quot;http://infinilabs.com/eula.txt\u0026quot;, \u0026quot;icon\u0026quot;: \u0026quot;http://localhost:9000/icon.png\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;INFINI Labs\u0026quot;, \u0026quot;privacy_policy\u0026quot;: \u0026quot;http://infinilabs.com/privacy_policy.txt\u0026quot;, \u0026quot;website\u0026quot;: \u0026quot;http://infinilabs.com\u0026quot; }, }, \u0026quot;llm\u0026quot;:{ \u0026quot;type\u0026quot;:\u0026quot;ollama\u0026quot;, //or openai \u0026quot;endpoint\u0026quot;:\u0026quot;http://xxx\u0026quot;, \u0026quot;default_model\u0026quot;:\u0026quot;deepseek_r1\u0026quot;, \u0026quot;parameters\u0026quot;:{ \u0026quot;top_p\u0026quot;:111, \u0026quot;max_tokens\u0026quot;:32000, \u0026quot;presence_penalty\u0026quot;:0.9, \u0026quot;frequency_penalty\u0026quot;:0.9, \u0026quot;enhanced_inference\u0026quot;:true, } } }' System Settings UI Management #\n Server #  Log in to the Coco-Server admin dashboard, click Home in the left menu to view server infomation, as shown below:\nClick the edit button next to the name (address), enter a new one, and then click the save button to save the name (address).\nApp Settings #  Log in to the Coco-Server admin dashboard, click Settings in the left menu, and then click tab App Settings to view app settings, as shown below:\nYou can set whether to enable the chat start page and configure the relevant parameters here.\n","subcategory":null,"summary":"","tags":null,"title":"System Settings","url":"/coco-server/main/docs/references/system/settings/"},{"category":null,"content":"System Initialization #  Initialization API #  curl -XPOST http://localhost:9000/setup/_initialize -d' { \u0026quot;name\u0026quot;:\u0026quot;Coco\u0026quot;, \u0026quot;email\u0026quot;:\u0026quot;hello@coco.rs\u0026quot;, \u0026quot;password\u0026quot;:\u0026quot;mypassword\u0026quot;, \u0026quot;llm\u0026quot;:{ \u0026quot;type\u0026quot;:\u0026quot;ollama\u0026quot;, \u0026quot;endpoint\u0026quot;:\u0026quot;http://xxx\u0026quot;, \u0026quot;default_model\u0026quot;:\u0026quot;deepseek_r1\u0026quot; } }' Initialization UI Management #  When entering the coco server, it will check whether it has been initialized. If not, it will enter the initialization page.\nCreate a user account #  Set up a new user account to manage access and permissions.\nConnect to a Large Model #  After integrating a large model, you will unlock the AI chat feature, providing intelligent search and an efficient work assistant.\nYou can also click Set Up Later to skip and configure it later after entering the system.\n","subcategory":null,"summary":"","tags":null,"title":"System Initialization","url":"/coco-server/main/docs/references/system/install/"},{"category":null,"content":"Attachment #  Attachment API are used to upload your local files to Coco server.\nUpload attachment in chat session #  curl -X POST http://localhost:9000/chat/[session_id]/_upload -F \u0026quot;files=LOCAL_FILE\u0026quot;\nExample\ncurl -X POST http://localhost:9000/chat/cu737jrq50kcaicgn7pg/_upload \\ -H \u0026quot;X-API-TOKEN: cv9pnurq50k1hii28630jy429g4b49viecrlj9529onpa6n0lti7yohioitvyotd0677rop5uszc0cnll03j\u0026quot; \\ -F \u0026quot;files=@/Users/medcl/Downloads/tmp/neurips19-diskann.pdf\u0026quot; \\ -F \u0026quot;files=@/Users/medcl/Downloads/tmp/Adaptive_searching_in_succinctly_encoded.pdf\u0026quot;  The session_id need to be replaced with actual session id.\n Response\n{ \u0026quot;acknowledged\u0026quot;: true, \u0026quot;attachments\u0026quot;: [ \u0026quot;cv9q94bq50k2r0s6nob0\u0026quot;, \u0026quot;cv9q94bq50k2r0s6nobg\u0026quot; ] } Download attachment #  curl -X GET http://localhost:9000/attachment/cv9q94bq50k2r0s6nobg \\ -H \u0026quot;X-API-TOKEN: cv9pnurq50k1hii28630jy429g4b49viecrlj9529onpa6n0lti7yohioitvyotd0677rop5uszc0cnll03j\u0026quot; Check attachment exists #   curl -I http://localhost:9000/attachment/cv9q94bq50k2r0s6nobg \\ -H \u0026quot;X-API-TOKEN: cv9pnurq50k1hii28630jy429g4b49viecrlj9529onpa6n0lti7yohioitvyotd0677rop5uszc0cnll03j\u0026quot; Response\nHTTP/1.1 200 OK Content-Length: 2221342 Created: \u0026amp;{119327000 63877520584 4392528800} Filename: neurips19-diskann.pdf Vary: Accept-Encoding Date: Fri, 14 Mar 2025 03:49:49 GMT Delete attachment #  curl XDELETE http://localhost:9000/attachment/cv9q94bq50k2r0s6nobg \\ -H \u0026quot;X-API-TOKEN: cv9pnurq50k1hii28630jy429g4b49viecrlj9529onpa6n0lti7yohioitvyotd0677rop5uszc0cnll03j\u0026quot; Response\n{ \u0026quot;_id\u0026quot;: \u0026quot;cv9q94bq50k2r0s6nobg\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;deleted\u0026quot; } Search attachments #  curl -X GET http://localhost:9000/attachment/_search\\?session\\=cu737jrq50kcaicgn7pg \\ -H \u0026quot;X-API-TOKEN: cv9pnurq50k1hii28630jy429g4b49viecrlj9529onpa6n0lti7yohioitvyotd0677rop5uszc0cnll03j\u0026quot; Response\n{\u0026quot;took\u0026quot;:2,\u0026quot;timed_out\u0026quot;:false,\u0026quot;_shards\u0026quot;:{\u0026quot;total\u0026quot;:1,\u0026quot;successful\u0026quot;:1,\u0026quot;skipped\u0026quot;:0,\u0026quot;failed\u0026quot;:0},\u0026quot;hits\u0026quot;:{\u0026quot;total\u0026quot;:{\u0026quot;value\u0026quot;:2,\u0026quot;relation\u0026quot;:\u0026quot;eq\u0026quot;},\u0026quot;max_score\u0026quot;:0.87546873,\u0026quot;hits\u0026quot;:[{\u0026quot;_index\u0026quot;:\u0026quot;coco_attachment\u0026quot;,\u0026quot;_type\u0026quot;:\u0026quot;_doc\u0026quot;,\u0026quot;_id\u0026quot;:\u0026quot;cv9r1krq50k4qhqcqhu0\u0026quot;,\u0026quot;_score\u0026quot;:0.87546873,\u0026quot;_source\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;cv9r1krq50k4qhqcqhu0\u0026quot;,\u0026quot;created\u0026quot;:\u0026quot;2025-03-14T12:30:11.827843+08:00\u0026quot;,\u0026quot;updated\u0026quot;:\u0026quot;2025-03-14T12:30:11.827851+08:00\u0026quot;,\u0026quot;session\u0026quot;:\u0026quot;cu737jrq50kcaicgn7pg\u0026quot;,\u0026quot;name\u0026quot;:\u0026quot;neurips19-diskann.pdf\u0026quot;,\u0026quot;icon\u0026quot;:\u0026quot;pdf\u0026quot;,\u0026quot;url\u0026quot;:\u0026quot;/attachment/cv9r1krq50k4qhqcqhu0\u0026quot;,\u0026quot;size\u0026quot;:2221342}},{\u0026quot;_index\u0026quot;:\u0026quot;coco_attachment\u0026quot;,\u0026quot;_type\u0026quot;:\u0026quot;_doc\u0026quot;,\u0026quot;_id\u0026quot;:\u0026quot;cv9r1l3q50k4qhqcqhug\u0026quot;,\u0026quot;_score\u0026quot;:0.87546873,\u0026quot;_source\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;cv9r1l3q50k4qhqcqhug\u0026quot;,\u0026quot;created\u0026quot;:\u0026quot;2025-03-14T12:30:12.857468+08:00\u0026quot;,\u0026quot;updated\u0026quot;:\u0026quot;2025-03-14T12:30:12.857483+08:00\u0026quot;,\u0026quot;session\u0026quot;:\u0026quot;cu737jrq50kcaicgn7pg\u0026quot;,\u0026quot;name\u0026quot;:\u0026quot;Adaptive_searching_in_succinctly_encoded.pdf\u0026quot;,\u0026quot;icon\u0026quot;:\u0026quot;pdf\u0026quot;,\u0026quot;url\u0026quot;:\u0026quot;/attachment/cv9r1l3q50k4qhqcqhug\u0026quot;,\u0026quot;size\u0026quot;:125382}}]}} ","subcategory":null,"summary":"","tags":null,"title":"Attachment","url":"/coco-server/main/docs/references/attachment/"},{"category":null,"content":"Model Provider #  Work with Model Provider #  The Model Provider enables seamless integration of various AI models into your application. It supports multiple model types, including Deepseek, OpenAI, and more. This guide provides a comprehensive overview of how to effectively utilize the Model Provider.\nModel Provider API #  Below is the field description for the model provider.\n   Field Type Description     name string The model provider\u0026rsquo;s name.   api_key string The secret key or token required to access the API of the model provider.   api_type string The type to access the API of the model provider, possible values: openai, ollama.   base_url string The API endpoint used to interact with the model provider. e.g., https://api.deepseek.com/v1.   icon string The icon representing the model provider in the UI.   models array[object] A list of models available for the model provider, e.g., [{\u0026ldquo;name\u0026rdquo; : \u0026ldquo;deepseek-r1\u0026rdquo;,\u0026ldquo;settings\u0026rdquo; : {\u0026ldquo;temperature\u0026rdquo; : 0.8,\u0026ldquo;top_p\u0026rdquo; : 0.5,\u0026ldquo;presence_penalty\u0026rdquo; : 0,\u0026ldquo;frequency_penalty\u0026rdquo; : 0,\u0026ldquo;max_tokens\u0026rdquo; : 1024 } }].   enabled boolean Enables or disables model provider.   builtin boolean Indicates whether the model provider is built-in.   description string A brief description of the model provider.    Create a model provider #  //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST http://localhost:9000/model_provider/ -d \u0026#39;{ \u0026#34;name\u0026#34; : \u0026#34;Coco AI\u0026#34;, \u0026#34;api_key\u0026#34; : \u0026#34;******\u0026#34;, \u0026#34;api_type\u0026#34; : \u0026#34;openai\u0026#34;, \u0026#34;icon\u0026#34; : \u0026#34;/assets/icons/coco.png\u0026#34;, \u0026#34;models\u0026#34; : [ { \u0026#34;name\u0026#34; : \u0026#34;tongyi-intent-detect-v3\u0026#34;, \u0026#34;settings\u0026#34; : { \u0026#34;temperature\u0026#34; : 0.8, \u0026#34;top_p\u0026#34; : 0.5, \u0026#34;presence_penalty\u0026#34; : 0, \u0026#34;frequency_penalty\u0026#34; : 0, \u0026#34;max_tokens\u0026#34; : 1024 } }, { \u0026#34;name\u0026#34; : \u0026#34;deepseek-r1\u0026#34;, \u0026#34;settings\u0026#34; : { \u0026#34;temperature\u0026#34; : 0.8, \u0026#34;top_p\u0026#34; : 0.5, \u0026#34;presence_penalty\u0026#34; : 0, \u0026#34;frequency_penalty\u0026#34; : 0, \u0026#34;max_tokens\u0026#34; : 1024 } }, { \u0026#34;name\u0026#34; : \u0026#34;deepseek-r1-distill-qwen-32b\u0026#34;, \u0026#34;settings\u0026#34; : { \u0026#34;temperature\u0026#34; : 0.8, \u0026#34;top_p\u0026#34; : 0.5, \u0026#34;presence_penalty\u0026#34; : 0, \u0026#34;frequency_penalty\u0026#34; : 0, \u0026#34;max_tokens\u0026#34; : 1024 } } ], \u0026#34;base_url\u0026#34; : \u0026#34;https://dashscope.aliyuncs.com/compatible-mode/v1\u0026#34;, \u0026#34;enabled\u0026#34; : true, \u0026#34;description\u0026#34; : \u0026#34;Coco AI default model provider\u0026#34; }\u0026#39; //response { \u0026quot;_id\u0026quot;: \u0026quot;cvj0hjlath21mqh6jbh0\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;created\u0026quot; } View a Model Provider #\n curl -XGET http://localhost:9000/model_provider/cvj0hjlath21mqh6jbh0 Delete the Model Provider #  //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XDELETE http://localhost:9000/model_provider/cvj0hjlath21mqh6jbh0 //response { \u0026quot;_id\u0026quot;: \u0026quot;cvj0hjlath21mqh6jbh0\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;deleted\u0026quot; }' Update a Model Provider #\n curl -XPUT http://localhost:9000/model_provider/cvj0hjlath21mqh6jbh0 -d \u0026#39;{ \u0026#34;name\u0026#34; : \u0026#34;Coco AI\u0026#34;, \u0026#34;api_key\u0026#34; : \u0026#34;******\u0026#34;, \u0026#34;api_type\u0026#34; : \u0026#34;openai\u0026#34;, \u0026#34;icon\u0026#34; : \u0026#34;/assets/icons/coco.png\u0026#34;, \u0026#34;models\u0026#34; : [ { \u0026#34;name\u0026#34; : \u0026#34;tongyi-intent-detect-v3\u0026#34;, \u0026#34;settings\u0026#34; : { \u0026#34;temperature\u0026#34; : 0.8, \u0026#34;top_p\u0026#34; : 0.5, \u0026#34;presence_penalty\u0026#34; : 0, \u0026#34;frequency_penalty\u0026#34; : 0, \u0026#34;max_tokens\u0026#34; : 1024 } }, { \u0026#34;name\u0026#34; : \u0026#34;deepseek-r1\u0026#34;, \u0026#34;settings\u0026#34; : { \u0026#34;temperature\u0026#34; : 0.8, \u0026#34;top_p\u0026#34; : 0.5, \u0026#34;presence_penalty\u0026#34; : 0, \u0026#34;frequency_penalty\u0026#34; : 0, \u0026#34;max_tokens\u0026#34; : 1024 } }, { \u0026#34;name\u0026#34; : \u0026#34;deepseek-r1-distill-qwen-32b\u0026#34;, \u0026#34;settings\u0026#34; : { \u0026#34;temperature\u0026#34; : 0.8, \u0026#34;top_p\u0026#34; : 0.5, \u0026#34;presence_penalty\u0026#34; : 0, \u0026#34;frequency_penalty\u0026#34; : 0, \u0026#34;max_tokens\u0026#34; : 1024 } } ], \u0026#34;base_url\u0026#34; : \u0026#34;https://dashscope.aliyuncs.com/compatible-mode/v1\u0026#34;, \u0026#34;enabled\u0026#34; : true, \u0026#34;description\u0026#34; : \u0026#34;Coco AI default model provider\u0026#34; }\u0026#39; //response { \u0026quot;_id\u0026quot;: \u0026quot;cvj9s15ath21fvf9st00\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;updated\u0026quot; } Search Model Providers #\n curl -XGET http://localhost:9000/model_provider/_search Model Providers UI Management #  Model Providers #  Log in to the Coco-Server admin dashboard, click Model Providers in the left menu to view all Model Provider lists, as shown below:\n we can also choose an Model Provider from the card and quickly disable or enable it by toggling the switch. choose an Model Provider from the card and click the button API-Key to configure the api key.  Enter keywords coco in the search box above the list and click the Refresh button to search for matching MCP Server, as shown below:\nAdd Model Provider #  Click Add in the top-right corner of the list to create a new Model Provider, as shown below:\nDelete Model Provider #  Select the target Model Provider in the list, click Delete on the bottom right of the card, and confirm in the pop-up dialog to complete the deletion. As shown below:\nEdit Model Provider #  Select the targetModel Provider in the card list, click Edit on the bottom right of the card to enter the editing page. Modify the configuration and click save to update.\n","subcategory":null,"summary":"","tags":null,"title":"Model Provider","url":"/coco-server/main/docs/references/model_provider/"},{"category":null,"content":"MCP Server #  Work with MCP Server #  TThe MCP Server provides commonly used MCP configurations for large model calls.\nMCP Server API #  Below is the field description for the MCP Server.\n   Field Type Description     name string The MCP Server\u0026rsquo;s name.   type string The type to access the API of the MCP Server, possible values: stdio, streamable http.   icon string The icon representing the MCP Server in the UI.   category string The category of the MCP Server.   icon string The icon representing the model provider in the UI.   config object The specify config for the type, e.g., {\u0026ldquo;args\u0026rdquo;:[\u0026quot;@playwright/mcp@latest\u0026quot;, \u0026ldquo;\u0026ndash;headless\u0026rdquo;], \u0026ldquo;command\u0026rdquo;: \u0026ldquo;npx\u0026rdquo;, \u0026ldquo;env\u0026rdquo;: {\u0026ldquo;key1\u0026rdquo;:\u0026ldquo;v1\u0026rdquo;}}.   enabled boolean Enables or disables MCP Server.    Create a model provider #  //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST http://localhost:9000/mcp_server/ -d \u0026#39;{ \u0026#34;name\u0026#34; : \u0026#34;playwright\u0026#34;, \u0026#34;icon\u0026#34; : \u0026#34;font_robot\u0026#34;, \u0026#34;type\u0026#34; : \u0026#34;stdio\u0026#34;, \u0026#34;category\u0026#34; : \u0026#34;Network Tools\u0026#34;, \u0026#34;config\u0026#34; : { \u0026#34;args\u0026#34; : [ \u0026#34;@playwright/mcp@latest\u0026#34;, \u0026#34;--headless\u0026#34; ], \u0026#34;command\u0026#34; : \u0026#34;npx\u0026#34;, \u0026#34;env\u0026#34; : { } }, \u0026#34;enabled\u0026#34; : true }\u0026#39; //response { \u0026quot;_id\u0026quot;: \u0026quot;d07jnoac7k8ff566lar0\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;created\u0026quot; } View a MCP Server #\n curl -XGET http://localhost:9000/mcp_server/d07jnoac7k8ff566lar0 Delete the MCP Server #  //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XDELETE http://localhost:9000/mcp_server/d07jnoac7k8ff566lar0 //response { \u0026quot;_id\u0026quot;: \u0026quot;d07jnoac7k8ff566lar0\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;deleted\u0026quot; }' Update a Model Provider #\n curl -XPUT http://localhost:9000/mcp_server/d07jnoac7k8ff566lar0 -d \u0026#39;{ \u0026#34;name\u0026#34; : \u0026#34;playwright\u0026#34;, \u0026#34;icon\u0026#34; : \u0026#34;font_robot\u0026#34;, \u0026#34;type\u0026#34; : \u0026#34;stdio\u0026#34;, \u0026#34;category\u0026#34; : \u0026#34;Network Tools\u0026#34;, \u0026#34;config\u0026#34; : { \u0026#34;args\u0026#34; : [ \u0026#34;@playwright/mcp@latest\u0026#34;, \u0026#34;--headless\u0026#34; ], \u0026#34;command\u0026#34; : \u0026#34;npx\u0026#34;, \u0026#34;env\u0026#34; : { } }, \u0026#34;enabled\u0026#34; : true }\u0026#39; //response { \u0026quot;_id\u0026quot;: \u0026quot;d07jnoac7k8ff566lar0\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;updated\u0026quot; } Search MCP Servers #\n curl -XGET http://localhost:9000/mcp_server/_search MCP Server UI Management #  Search MCP Server #  Log in to the Coco-Server admin dashboard, click MCP Server in the left menu to view all MCP Server lists, as shown below:\n Here, we can also choose an MCP Server from the list and quickly disable or enable it by toggling the switch.\n Enter keywords in the search box above the list and click the Refresh button to search for matching MCP Server, as shown below:\nAdd MCP Server #  Click Add in the top-right corner of the list to create a new MCP Server, as shown below:\n Here, we select the type stdio, and the args and env should be configured with one item per line.\n  Here, we select the type Streamable HTTP, and we just need to configure a URL for the MCP Server.\n Delete MCP Server #  Select the target MCP Server in the list, click Delete on the right side of the entry, and confirm in the pop-up dialog to complete the deletion. As shown below:\nEdit MCP Server #  Select the target MCP Server in the list, click Edit on the right side to enter the editing page. Modify the configuration and click save to update. As shown below:\n","subcategory":null,"summary":"","tags":null,"title":"MCP Server","url":"/coco-server/main/docs/references/mcp_server/"},{"category":null,"content":"Integration #  Work with Integration #  The integration generates a piece of code based on certain configuration parameters, which can be embedded into other websites. This code allows you to quickly use Coco AI\u0026rsquo;s search and chat capabilities.\nIntegration API #  Below is the field description for the integration.\n   Field Type Description     name string The integration\u0026rsquo;s name.   type string The integration type. Possible values: embedded, floating, all, fullscreen.   datasource array[string] List of datasource ID associated with the integration. e.g., [\u0026quot;cvei87tath20t2e51cag\u0026quot;].   enabled_module.search object Configuration for the search module, e.g., {\u0026quot;enabled\u0026quot;: true,\u0026quot;placeholder\u0026quot;: \u0026quot;Search whatever you want...\u0026quot;}.   enabled_module.ai_chat object Configuration for the AI chat module, e.g., {\u0026quot;enabled\u0026quot;: true,\u0026quot;placeholder\u0026quot;: \u0026quot;Ask whatever you want...\u0026quot;}   enabled_module.features array[string] List of enabled features, e.g., [\u0026quot;think_active\u0026quot;,\u0026quot;search_active\u0026quot;,\u0026quot;chat_history\u0026quot;].   payload.ai_overview object Configuration for the ai overview module of fullscreen, e.g., {\u0026quot;enabled\u0026quot;: true,\u0026quot;title\u0026quot;: \u0026quot;AI Overview\u0026quot;,\u0026quot;assistant\u0026quot;: \u0026quot;ai_overview\u0026quot;,\u0026quot;height\u0026quot;: 200,\u0026quot;output\u0026quot;: \u0026quot;markdown\u0026quot;,logo: {\u0026quot;light\u0026quot;: \u0026quot;...\u0026quot;}}.   payload.ai_widgets object Configuration for the ai overview module of fullscreen, e.g., {\u0026quot;enabled\u0026quot;: true,\u0026quot;widgets\u0026quot;: [{\u0026quot;title\u0026quot;: \u0026quot;AI Overview\u0026quot;,\u0026quot;assistant\u0026quot;: \u0026quot;ai_overview\u0026quot;,\u0026quot;height\u0026quot;: 200,\u0026quot;output\u0026quot;: \u0026quot;markdown\u0026quot;,logo: {\u0026quot;light\u0026quot;: \u0026quot;...\u0026quot;}}].   payload.logo object Configuration for logo of fullscreen, e.g., {\u0026quot;light\u0026quot;: \u0026quot;...\u0026quot;,\u0026quot;light_mobile\u0026quot;: \u0026quot;...\u0026quot;}.   payload.welcome string Configuration for greeting message of fullscreen   access_control.authentication boolean Enables or disables authentication.   access_control.chat_history boolean Enables or disables chat history.   appearance.theme string The display theme. Options: auto, light, dark. e.g., auto.   cors.enabled boolean Enables or disables CORS requests.   cors.allowed_origins array[string] List of allowed origins for CORS requests.   description string A brief description of the integration.   enabled boolean Enables or disables the integration.    Create a Integration #  //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST http://localhost:9000/integration/ -d\u0026#39; { \u0026#34;type\u0026#34;: \u0026#34;embedded\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;test_local\u0026#34;, \u0026#34;datasource\u0026#34;: [ \u0026#34;d895f22ed2ff25ad8c6080af1cc23a21\u0026#34; ], \u0026#34;enabled_module\u0026#34;: { \u0026#34;search\u0026#34;: { \u0026#34;enabled\u0026#34;: true, \u0026#34;placeholder\u0026#34;: \u0026#34;Search whatever you want...\u0026#34; }, \u0026#34;ai_chat\u0026#34;: { \u0026#34;enabled\u0026#34;: true, \u0026#34;placeholder\u0026#34;: \u0026#34;Ask whatever you want...\u0026#34; }, \u0026#34;features\u0026#34;: [ \u0026#34;think_active\u0026#34;, \u0026#34;search_active\u0026#34;, \u0026#34;chat_history\u0026#34; ] }, \u0026#34;access_control\u0026#34;: { \u0026#34;authentication\u0026#34;: true, \u0026#34;chat_history\u0026#34;: false }, \u0026#34;appearance\u0026#34;: { \u0026#34;theme\u0026#34;: \u0026#34;auto\u0026#34; }, \u0026#34;cors\u0026#34;: { \u0026#34;enabled\u0026#34;: true, \u0026#34;allowed_origins\u0026#34;: [ \u0026#34;http://localhost:8080\u0026#34; ] }, \u0026#34;description\u0026#34;: \u0026#34;test website\u0026#34;, \u0026#34;enabled\u0026#34;: true }\u0026#39; //response { \u0026quot;_id\u0026quot;: \u0026quot;cvj9s15ath21fvf9st00\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;created\u0026quot; } View a Integration #\n curl -XGET http://localhost:9000/integration/cvj9s15ath21fvf9st00 Delete the Integration #  //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XDELETE http://localhost:9000/integration/cvj9s15ath21fvf9st00 //response { \u0026quot;_id\u0026quot;: \u0026quot;cvj9s15ath21fvf9st00\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;deleted\u0026quot; }' Update a Integration #\n curl -XPUT http://localhost:9000/integration/cvj9s15ath21fvf9st00 -d \u0026#39;{ \u0026#34;type\u0026#34;: \u0026#34;floating\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;test_local\u0026#34;, \u0026#34;enabled_module\u0026#34;: { \u0026#34;search\u0026#34;: { \u0026#34;enabled\u0026#34;: true, \u0026#34;placeholder\u0026#34;: \u0026#34;Search whatever you want...\u0026#34;, \u0026#34;datasource\u0026#34;: [ \u0026#34;d895f22ed2ff25ad8c6080af1cc23a21\u0026#34; ], }, \u0026#34;ai_chat\u0026#34;: { \u0026#34;enabled\u0026#34;: true, \u0026#34;placeholder\u0026#34;: \u0026#34;Ask whatever you want...\u0026#34; }, \u0026#34;features\u0026#34;: [ \u0026#34;chat_history\u0026#34; ] }, \u0026#34;access_control\u0026#34;: { \u0026#34;authentication\u0026#34;: true, }, \u0026#34;appearance\u0026#34;: { \u0026#34;theme\u0026#34;: \u0026#34;auto\u0026#34; }, \u0026#34;cors\u0026#34;: { \u0026#34;enabled\u0026#34;: true, \u0026#34;allowed_origins\u0026#34;: [ \u0026#34;http://localhost:8080\u0026#34; ] }, \u0026#34;description\u0026#34;: \u0026#34;test website\u0026#34;, \u0026#34;enabled\u0026#34;: true }\u0026#39; //response { \u0026quot;_id\u0026quot;: \u0026quot;cvj9s15ath21fvf9st00\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;updated\u0026quot; } Search Integrations #\n curl -XGET http://localhost:9000/integration/_search Integration UI Management #  Search Integration #  Log in to the Coco-Server admin dashboard, click Integration in the left menu to view all Integration lists, as shown below:\nEnter keywords in the search box above the list and click the Refresh button to search for matching Integrations, as shown below:\nAdd Integration #  Click Add in the top-right corner of the list to create a new Integration, as shown below:\nThe system provides default values for the Integration configuration. Modify these values as needed, then click the save button to complete the creation.\nDelete Integration #  Select the target Integration in the list, click Delete on the right side of the entry, and confirm in the pop-up dialog to complete the deletion. As shown below:\nEdit Integration #  Select the target Integration in the list, click Edit on the right side to enter the editing page. Modify the configuration and click save to update. As shown below:\nPreview Integration #  Click the Preview button on the right side of the Integration editing page to see the current Integration\u0026rsquo;s effect, as shown below:\n SearchBox   Fullscreen  The preview feature allows testing search and chat functionalities.\nRenew Token #  Select the target Integration in the list, click Renew Token on the right side of the entry.\n","subcategory":null,"summary":"","tags":null,"title":"Integration","url":"/coco-server/main/docs/references/integration/"},{"category":null,"content":"Datasource #  Work with Datasource #  Datasource defines where the data comes from, usually we can use a specify connector to fetch data from a specify datasource.\nCreate a Datasource #  We can use the connector to connect specify datasource.\n//request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST http://localhost:9000/datasource/ -d\u0026#39; { \u0026#34;name\u0026#34;:\u0026#34;My Hugo Site\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;connector\u0026#34;, \u0026#34;connector\u0026#34;:{ \u0026#34;id\u0026#34;:\u0026#34;hugo_site\u0026#34;, \u0026#34;config\u0026#34;:{ \u0026#34;urls\u0026#34;: [ \u0026#34;https://pizza.rs/index.json\u0026#34; ] } } }\u0026#39; //response { \u0026quot;_id\u0026quot;: \u0026quot;cu1rf03q50k43nn2pi6g\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;created\u0026quot; } \nconfig specifies the necessary configurations for this connector. For detailed information, refer to the connector reference documentation.\n View a Datasource #  curl -XGET http://localhost:9000/datasource/cu1rf03q50k43nn2pi6g Delete the Datasource #  //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XDELETE http://localhost:9000/datasource/cu1rf03q50k43nn2pi6g -d\u0026#39; { \u0026#34;_id\u0026#34;: \u0026#34;cu1rf03q50k43nn2pi6g\u0026#34;, \u0026#34;result\u0026#34;: \u0026#34;deleted\u0026#34; }\u0026#39; Update a Datasource #  curl -XPUT http://localhost:9000/datasource/cu1rf03q50k43nn2pi6g?replace=true -d \u0026#39;{ \u0026#34;name\u0026#34;:\u0026#34;My Hugo Site\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;connector\u0026#34;, \u0026#34;connector\u0026#34;:{ \u0026#34;id\u0026#34;:\u0026#34;hugo_site\u0026#34;, \u0026#34;config\u0026#34;:{ \u0026#34;urls\u0026#34;: [ \u0026#34;https://pizza.rs/index.json\u0026#34; ] } } }\u0026#39; //response { \u0026quot;_id\u0026quot;: \u0026quot;cxx9vr3q50k38nobvmcg\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;updated\u0026quot; } \n?replace=true can safely ignore errors for non-existent items.\n Search Datasources #  curl -XGET http://localhost:9000/datasource/_search Insert Document to this Datasource #  curl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST http://localhost:9000/datasource/cu1rf03q50k43nn2pi6g/_doc -d\u0026#39; { \u0026#34;title\u0026#34;: \u0026#34;Your title\u0026#34;, ...OMITTED... }\u0026#39; Insert Document to this Datasource With Identity #  curl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST http://localhost:9000/datasource/cu1rf03q50k43nn2pi6g/_doc/myuuid123 -d\u0026#39; { \u0026#34;title\u0026#34;: \u0026#34;Your title\u0026#34;, ...OMITTED... }\u0026#39;  Note: The ID must be unique across all datasources.\n ","subcategory":null,"summary":"","tags":null,"title":"Datasource","url":"/coco-server/main/docs/references/datasource/"},{"category":null,"content":"Logout #  Logout API #  The Logout API securely logs the user out from the COCO server.\nExample request:\ncurl -XPOST http://localhost:9000/account/logout ","subcategory":null,"summary":"","tags":null,"title":"Logout","url":"/coco-server/main/docs/references/account/logout/"},{"category":null,"content":"Search API #  Search API Reference #  Get Query Suggestions #  //request curl -XGET http://localhost:9000/query/_suggest\\?query\\=buss //response { \u0026quot;query\u0026quot;: \u0026quot;buss\u0026quot;, \u0026quot;suggestions\u0026quot;: [ { \u0026quot;suggestion\u0026quot;: \u0026quot;Q3 Business Report\u0026quot;, \u0026quot;score\u0026quot;: 0.99, \u0026quot;source\u0026quot;: { \u0026quot;type\u0026quot;:\u0026quot;connector\u0026quot;, \u0026quot;name\u0026quot;:\u0026quot;google_drive\u0026quot;, \u0026quot;id\u0026quot;:\u0026quot;e806831dacc3\u0026quot;, } } ] } Get Search Results #\n //request curl -XGET http://localhost:9000/query/_search\\?query\\=Business //response {\u0026quot;took\u0026quot;:15,\u0026quot;timed_out\u0026quot;:false,\u0026quot;_shards\u0026quot;:{\u0026quot;total\u0026quot;:1,\u0026quot;successful\u0026quot;:1,\u0026quot;skipped\u0026quot;:0,\u0026quot;failed\u0026quot;:0},\u0026quot;hits\u0026quot;:{\u0026quot;total\u0026quot;:{\u0026quot;value\u0026quot;:1,\u0026quot;relation\u0026quot;:\u0026quot;eq\u0026quot;},\u0026quot;max_score\u0026quot;:3.0187376,\u0026quot;hits\u0026quot;:[{\u0026quot;_index\u0026quot;:\u0026quot;coco_document\u0026quot;,\u0026quot;_type\u0026quot;:\u0026quot;_doc\u0026quot;,\u0026quot;_id\u0026quot;:\u0026quot;csstf6rq50k5sqipjaa0\u0026quot;,\u0026quot;_score\u0026quot;:3.0187376,\u0026quot;_source\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;csstf6rq50k5sqipjaa0\u0026quot;, \u0026hellip;OMITTED\u0026hellip;}}}]}} Parameters #\n    Parameter Type Default Description     query string \u0026quot;\u0026quot; The search query string.   from int 0 The starting offset of the search results (used for pagination).   size int 10 The number of search results to return.    ","subcategory":null,"summary":"","tags":null,"title":"Search","url":"/coco-server/main/docs/references/search/"},{"category":null,"content":"Profile API #  Profile API Reference #  Profile #  Below is the field description for the profile object.\n   Field Type Description     id string Unique identifier for the user profile.   username string User\u0026rsquo;s display name or username.   email string User\u0026rsquo;s email address.   avatar string (URL) URL to the user\u0026rsquo;s avatar image.   created string (datetime) Timestamp when the profile was created.   updated string (datetime) Timestamp when the profile was last updated.   roles array[string] List of roles assigned to the user, e.g., [\u0026quot;admin\u0026quot;, \u0026quot;editor\u0026quot;].   preferences object User-specific preferences or settings.   preferences.theme string Preferred theme, e.g., dark or light.   preferences.language string Preferred language, e.g., en, fr.     Get Profile #  Request #  curl -XGET http://localhost:9000/account/profile Response #  { \u0026#34;id\u0026#34;: \u0026#34;user123\u0026#34;, \u0026#34;username\u0026#34;: \u0026#34;jdoe\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;jdoe@example.com\u0026#34;, \u0026#34;avatar\u0026#34;: \u0026#34;https://example.com/images/avatar.jpg\u0026#34;, \u0026#34;created\u0026#34;: \u0026#34;2024-01-01T10:00:00Z\u0026#34;, \u0026#34;updated\u0026#34;: \u0026#34;2025-01-01T10:00:00Z\u0026#34;, \u0026#34;roles\u0026#34;: [\u0026#34;admin\u0026#34;, \u0026#34;editor\u0026#34;], \u0026#34;preferences\u0026#34;: { \u0026#34;theme\u0026#34;: \u0026#34;dark\u0026#34;, \u0026#34;language\u0026#34;: \u0026#34;en\u0026#34; } } ","subcategory":null,"summary":"","tags":null,"title":"Profile","url":"/coco-server/main/docs/references/account/profile/"},{"category":null,"content":"Modify Password #  Modify the current user\u0026rsquo;s password.\ncurl -XPUT http://localhost:9000/account/password -d'{ \u0026quot;old_password\u0026quot;:\u0026quot;xxxx\u0026quot;, \u0026quot;new_password\u0026quot;:\u0026quot;xxxx\u0026quot; }' ","subcategory":null,"summary":"","tags":null,"title":"Modify Password","url":"/coco-server/main/docs/references/account/password/"},{"category":null,"content":"Document API #  Document API Reference #  Documents #  Below is the field description for the document.\n   Field Type Description     source object The source of the document.   category string Primary category of the document, e.g., report.   subcategory string Secondary category of the document, e.g., 2024.   categories array[string] List of categories the document belongs to, e.g., [\u0026quot;business\u0026quot;, \u0026quot;quarterly_reports\u0026quot;].   cover string (URL) URL to the cover image of the document.   title string Title of the document, e.g., Q3 Business Report.   summary string A brief summary of the document content.   type string Type of the document, e.g., PDF.   lang string Language of the document, e.g., en.   content string The main content or body of the document.   icon string (URL) URL to the document\u0026rsquo;s icon.   thumbnail string (URL) URL to the document\u0026rsquo;s thumbnail image.   tags array[string] Tags associated with the document, e.g., [\u0026quot;finance\u0026quot;, \u0026quot;quarterly\u0026quot;, \u0026quot;business\u0026quot;, \u0026quot;report\u0026quot;].   url string (URL) URL link to the document, e.g., a Google Drive link.   size integer Size of the document in bytes, e.g., 1048576 for 1 MB.   owner object Information about the document\u0026rsquo;s owner.   owner.avatar string (URL) URL to the owner\u0026rsquo;s avatar image.   owner.username string Username of the owner, e.g., jdoe.   owner.userid string User ID of the owner, e.g., user123.   metadata object Additional accessible metadata (e.g., file version, permissions).   payload object Additional store-only metadata (e.g., file binary data).   last_updated_by object Information about the last user who updated the document.   last_updated_by.user object Details about the user who last updated the document.   last_updated_by.user.avatar string (URL) URL to the avatar of the last editor.   last_updated_by.user.username string Username of the last editor, e.g., editor123.   last_updated_by.user.userid string User ID of the last editor, e.g., editor123@example.com.   last_updated_by.timestamp string (datetime) Timestamp of the last update, e.g., 2024-11-01T15:30:00Z.    Index a Document #  //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST http://localhost:9000/document/ -d \u0026#39;{ \u0026#34;source\u0026#34;: { \u0026#34;type\u0026#34;:\u0026#34;connector\u0026#34;, \u0026#34;name\u0026#34;:\u0026#34;My Hugo Site\u0026#34;, \u0026#34;id\u0026#34;:\u0026#34;e806831dacc3\u0026#34;, }, \u0026#34;category\u0026#34;: \u0026#34;report\u0026#34;, \u0026#34;categories\u0026#34;: [\u0026#34;business\u0026#34;, \u0026#34;quarterly_reports\u0026#34;], \u0026#34;cover\u0026#34;: \u0026#34;https://example.com/images/report_cover.jpg\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Q3 Business Report\u0026#34;, \u0026#34;summary\u0026#34;: \u0026#34;An overview of the company financial performance for Q3.\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;PDF\u0026#34;, \u0026#34;lang\u0026#34;: \u0026#34;en\u0026#34;, \u0026#34;content\u0026#34;: \u0026#34;This quarters revenue increased by 15%, driven by strong sales in the APAC region...\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;https://example.com/images/icon.png\u0026#34;, \u0026#34;thumbnail\u0026#34;: \u0026#34;https://example.com/images/report_thumbnail.jpg\u0026#34;, \u0026#34;tags\u0026#34;: [\u0026#34;finance\u0026#34;, \u0026#34;quarterly\u0026#34;, \u0026#34;business\u0026#34;, \u0026#34;report\u0026#34;], \u0026#34;url\u0026#34;: \u0026#34;https://drive.google.com/file/d/abc123/view\u0026#34;, \u0026#34;size\u0026#34;: 1048576, \u0026#34;owner\u0026#34;: { \u0026#34;avatar\u0026#34;: \u0026#34;https://example.com/images/user_avatar.jpg\u0026#34;, \u0026#34;username\u0026#34;: \u0026#34;jdoe\u0026#34;, \u0026#34;userid\u0026#34;: \u0026#34;user123\u0026#34; }, \u0026#34;metadata\u0026#34;: { \u0026#34;version\u0026#34;: \u0026#34;1.2\u0026#34;, \u0026#34;department\u0026#34;: \u0026#34;Finance\u0026#34;, \u0026#34;last_reviewed\u0026#34;: \u0026#34;2024-10-20\u0026#34;, \u0026#34;file_extension\u0026#34;: \u0026#34;pdf\u0026#34;, \u0026#34;icon_link\u0026#34;: \u0026#34;https://example.com/images/file_icon.png\u0026#34;, \u0026#34;has_thumbnail\u0026#34;: true, \u0026#34;kind\u0026#34;: \u0026#34;drive#file\u0026#34;, \u0026#34;parents\u0026#34;: [\u0026#34;folder123\u0026#34;], \u0026#34;properties\u0026#34;: { \u0026#34;shared\u0026#34;: \u0026#34;true\u0026#34; }, \u0026#34;spaces\u0026#34;: [\u0026#34;drive\u0026#34;], \u0026#34;starred\u0026#34;: false, \u0026#34;driveId\u0026#34;: \u0026#34;drive123\u0026#34;, \u0026#34;thumbnail_link\u0026#34;: \u0026#34;https://example.com/images/file_thumbnail.jpg\u0026#34;, \u0026#34;video_media_metadata\u0026#34;: { \u0026#34;durationMillis\u0026#34;: \u0026#34;60000\u0026#34;, \u0026#34;width\u0026#34;: 1920, \u0026#34;height\u0026#34;: 1080 }, \u0026#34;image_media_metadata\u0026#34;: { \u0026#34;width\u0026#34;: 1024, \u0026#34;height\u0026#34;: 768 } }, \u0026#34;last_updated_by\u0026#34;: { \u0026#34;user\u0026#34;: { \u0026#34;avatar\u0026#34;: \u0026#34;https://example.com/images/editor_avatar.jpg\u0026#34;, \u0026#34;username\u0026#34;: \u0026#34;editor123\u0026#34;, \u0026#34;userid\u0026#34;: \u0026#34;editor123@example.com\u0026#34; }, \u0026#34;timestamp\u0026#34;: \u0026#34;2024-11-01T15:30:00Z\u0026#34; } }\u0026#39; //response { \u0026quot;_id\u0026quot;: \u0026quot;cso9vr3q50k38nobvmcg\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;created\u0026quot; } Get a Document #\n //request curl -XGET http://localhost:9000/document/cso9vr3q50k38nobvmcg //response { \u0026quot;_id\u0026quot;: \u0026quot;cso9vr3q50k38nobvmcg\u0026quot;, \u0026quot;_source\u0026quot;: { \u0026quot;id\u0026quot;: \u0026quot;cso9vr3q50k38nobvmcg\u0026quot;, \u0026quot;created\u0026quot;: \u0026quot;2024-11-10T19:58:36.009086+08:00\u0026quot;, \u0026quot;updated\u0026quot;: \u0026quot;2024-11-10T19:58:36.009092+08:00\u0026quot;, \u0026quot;source\u0026quot;: { \u0026quot;type\u0026quot;:\u0026quot;connector\u0026quot;, \u0026quot;name\u0026quot;:\u0026quot;My Hugo Site\u0026quot;, \u0026quot;id\u0026quot;:\u0026quot;e806831dacc3\u0026quot;, } \u0026hellip;OMITTED\u0026hellip; , \u0026quot;found\u0026quot;: true } Update a Document #\n //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XPUT http://localhost:9000/document/cso9vr3q50k38nobvmcg -d\u0026#39;{ \u0026#34;source\u0026#34;: \u0026#34;google_drive\u0026#34;, ...OMITTED... , \u0026#34;timestamp\u0026#34;: \u0026#34;2024-11-01T15:30:00Z\u0026#34; } }\u0026#39; //response { \u0026quot;_id\u0026quot;: \u0026quot;cso9vr3q50k38nobvmcg\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;updated\u0026quot; } Delete a Document #\n //request curl -XDELETE http://localhost:9000/document/cso9vr3q50k38nobvmcg //response { \u0026quot;_id\u0026quot;: \u0026quot;cso9vr3q50k38nobvmcg\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;deleted\u0026quot; } \n","subcategory":null,"summary":"","tags":null,"title":"Document","url":"/coco-server/main/docs/references/document/"},{"category":null,"content":"Assistant #  Assistant API Reference #  Create an AI assistant #  //request curl -XPOST http://localhost:9000/assistant/ -d\u0026#39;{ \u0026#34;name\u0026#34; : \u0026#34;deault\u0026#34;, \u0026#34;description\u0026#34; : \u0026#34;default AI chat assistant\u0026#34;, \u0026#34;icon\u0026#34; : \u0026#34;font_Google-video\u0026#34;, \u0026#34;type\u0026#34; : \u0026#34;deep_think\u0026#34;, \u0026#34;config\u0026#34; : { \u0026#34;intent_analysis_model\u0026#34; : { \u0026#34;name\u0026#34; : \u0026#34;tongyi-intent-detect-v3\u0026#34;, \u0026#34;provider_id\u0026#34; : \u0026#34;cvuai3dath2dlgqqpc2g\u0026#34;, \u0026#34;settings\u0026#34;: { \u0026#34;temperature\u0026#34; : 0.8, \u0026#34;top_p\u0026#34; : 0.5, \u0026#34;presence_penalty\u0026#34; : 0, \u0026#34;frequency_penalty\u0026#34; : 0, \u0026#34;max_tokens\u0026#34; : 1024 } }, \u0026#34;picking_doc_model\u0026#34; : { \u0026#34;name\u0026#34; : \u0026#34;deepseek-r1-distill-qwen-32b\u0026#34;, \u0026#34;provider_id\u0026#34; : \u0026#34;cvuai3dath2dlgqqpc2g\u0026#34;, \u0026#34;settings\u0026#34;: { \u0026#34;temperature\u0026#34; : 0.8, \u0026#34;top_p\u0026#34; : 0.5, \u0026#34;presence_penalty\u0026#34; : 0, \u0026#34;frequency_penalty\u0026#34; : 0, \u0026#34;max_tokens\u0026#34; : 1024 } } }, \u0026#34;answering_model\u0026#34; : { \u0026#34;provider_id\u0026#34; : \u0026#34;cvuai3dath2dlgqqpc2g\u0026#34;, \u0026#34;name\u0026#34; : \u0026#34;deepseek-r1\u0026#34;, \u0026#34;settings\u0026#34; : { \u0026#34;temperature\u0026#34; : 0.8, \u0026#34;top_p\u0026#34; : 0.5, \u0026#34;presence_penalty\u0026#34; : 0, \u0026#34;frequency_penalty\u0026#34; : 0, \u0026#34;max_tokens\u0026#34; : 1024 } }, \u0026#34;datasource\u0026#34; : { \u0026#34;enabled\u0026#34; : true, \u0026#34;ids\u0026#34; : [ \u0026#34;d895f22ed2ff25ad8c6080af1cc23a21\u0026#34; ], \u0026#34;visible\u0026#34; : true, \u0026#34;filter\u0026#34;: {\u0026#34;term\u0026#34;:{\u0026#34;name\u0026#34;: \u0026#34;test\u0026#34;}} }, \u0026#34;mcp_servers\u0026#34; : { \u0026#34;enabled\u0026#34; : true, \u0026#34;ids\u0026#34; : [ \u0026#34;*\u0026#34; ], \u0026#34;visible\u0026#34; : true, \u0026#34;max_iterations\u0026#34;: 3, \u0026#34;model\u0026#34;: { \u0026#34;temperature\u0026#34; : 0.8, \u0026#34;top_p\u0026#34; : 0.5, \u0026#34;presence_penalty\u0026#34; : 0, \u0026#34;frequency_penalty\u0026#34; : 0, \u0026#34;max_tokens\u0026#34; : 1024 } }, \u0026#34;tools\u0026#34;: { \u0026#34;builtin\u0026#34;: { \u0026#34;calculator\u0026#34;: true, \u0026#34;wikipedia: false, \u0026#34;duckduckgo\u0026#34;: false, \u0026#34;scraper\u0026#34;: false }, \u0026#34;enabled\u0026#34;: true }, \u0026#34;keepalive\u0026#34; : \u0026#34;30m\u0026#34;, \u0026#34;enabled\u0026#34; : true, \u0026#34;chat_settings\u0026#34; : { \u0026#34;greeting_message\u0026#34; : \u0026#34;Hi! I’m Coco, nice to meet you. I can help answer your questions by tapping into the internet and your data sources. How can I assist you today?\u0026#34;, \u0026#34;suggested\u0026#34; : { \u0026#34;enabled\u0026#34; : false, \u0026#34;questions\u0026#34; : [ ] }, \u0026#34;input_preprocess_tpl\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;history_message\u0026#34; : { \u0026#34;number\u0026#34; : 5, \u0026#34;compression_threshold\u0026#34; : 1000, \u0026#34;summary\u0026#34; : true } }, \u0026#34;builtin\u0026#34; : false, \u0026#34;role_prompt\u0026#34; : \u0026#34;\u0026#34; }\u0026#39; //response { \u0026#34;_id\u0026#34;: \u0026#34;cvuak1lath2dlgqqpcjg\u0026#34;, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34; } Update an AI assistant #  //request curl -XPUT http://localhost:9000/assistant/cvuak1lath2dlgqqpcjg -d\u0026#39;{ \u0026#34;name\u0026#34; : \u0026#34;deault\u0026#34;, \u0026#34;description\u0026#34; : \u0026#34;default AI chat assistant\u0026#34;, \u0026#34;icon\u0026#34; : \u0026#34;font_Google-video\u0026#34;, \u0026#34;type\u0026#34; : \u0026#34;deep_think\u0026#34;, \u0026#34;config\u0026#34; : { \u0026#34;intent_analysis_model\u0026#34; : { \u0026#34;name\u0026#34; : \u0026#34;tongyi-intent-detect-v3\u0026#34;, \u0026#34;provider_id\u0026#34; : \u0026#34;cvuai3dath2dlgqqpc2g\u0026#34;, \u0026#34;settings\u0026#34;: { \u0026#34;temperature\u0026#34; : 0.8, \u0026#34;top_p\u0026#34; : 0.5, \u0026#34;presence_penalty\u0026#34; : 0, \u0026#34;frequency_penalty\u0026#34; : 0, \u0026#34;max_tokens\u0026#34; : 1024 } }, \u0026#34;picking_doc_model\u0026#34; : { \u0026#34;name\u0026#34; : \u0026#34;deepseek-r1-distill-qwen-32b\u0026#34;, \u0026#34;provider_id\u0026#34; : \u0026#34;cvuai3dath2dlgqqpc2g\u0026#34;, \u0026#34;settings\u0026#34;: { \u0026#34;temperature\u0026#34; : 0.8, \u0026#34;top_p\u0026#34; : 0.5, \u0026#34;presence_penalty\u0026#34; : 0, \u0026#34;frequency_penalty\u0026#34; : 0, \u0026#34;max_tokens\u0026#34; : 1024 } } }, \u0026#34;answering_model\u0026#34; : { \u0026#34;provider_id\u0026#34; : \u0026#34;cvuai3dath2dlgqqpc2g\u0026#34;, \u0026#34;name\u0026#34; : \u0026#34;deepseek-r1\u0026#34;, \u0026#34;settings\u0026#34; : { \u0026#34;temperature\u0026#34; : 0.8, \u0026#34;top_p\u0026#34; : 0.5, \u0026#34;presence_penalty\u0026#34; : 0, \u0026#34;frequency_penalty\u0026#34; : 0, \u0026#34;max_tokens\u0026#34; : 1024 } }, \u0026#34;datasource\u0026#34; : { \u0026#34;enabled\u0026#34; : true, \u0026#34;ids\u0026#34; : [ \u0026#34;d895f22ed2ff25ad8c6080af1cc23a21\u0026#34; ], \u0026#34;visible\u0026#34; : true, \u0026#34;filter\u0026#34;: {\u0026#34;term\u0026#34;:{\u0026#34;name\u0026#34;: \u0026#34;test\u0026#34;}} }, \u0026#34;mcp_servers\u0026#34; : { \u0026#34;enabled\u0026#34; : true, \u0026#34;ids\u0026#34; : [ \u0026#34;*\u0026#34; ], \u0026#34;visible\u0026#34; : true, \u0026#34;max_iterations\u0026#34;: 3, \u0026#34;model\u0026#34;: { \u0026#34;temperature\u0026#34; : 0.8, \u0026#34;top_p\u0026#34; : 0.5, \u0026#34;presence_penalty\u0026#34; : 0, \u0026#34;frequency_penalty\u0026#34; : 0, \u0026#34;max_tokens\u0026#34; : 1024 } }, \u0026#34;tools\u0026#34;: { \u0026#34;builtin\u0026#34;: { \u0026#34;calculator\u0026#34;: true, \u0026#34;wikipedia: false, \u0026#34;duckduckgo\u0026#34;: false, \u0026#34;scraper\u0026#34;: false }, \u0026#34;enabled\u0026#34;: true }, \u0026#34;keepalive\u0026#34; : \u0026#34;30m\u0026#34;, \u0026#34;enabled\u0026#34; : true, \u0026#34;chat_settings\u0026#34; : { \u0026#34;greeting_message\u0026#34; : \u0026#34;Hi! I’m Coco, nice to meet you. I can help answer your questions by tapping into the internet and your data sources. How can I assist you today?\u0026#34;, \u0026#34;suggested\u0026#34; : { \u0026#34;enabled\u0026#34; : false, \u0026#34;questions\u0026#34; : [ ] }, \u0026#34;input_preprocess_tpl\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;history_message\u0026#34; : { \u0026#34;number\u0026#34; : 5, \u0026#34;compression_threshold\u0026#34; : 1000, \u0026#34;summary\u0026#34; : true } }, \u0026#34;builtin\u0026#34; : false, \u0026#34;role_prompt\u0026#34; : \u0026#34;\u0026#34; }\u0026#39; //response { \u0026#34;_id\u0026#34;: \u0026#34;cvuak1lath2dlgqqpcjg\u0026#34;, \u0026#34;result\u0026#34;: \u0026#34;updated\u0026#34; } View an AI assistant #  curl -XGET http://localhost:9000/assistant/cvuak1lath2dlgqqpcjg Delete the AI assistant #  //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XDELETE http://localhost:9000/assistant/cvuak1lath2dlgqqpcjg //response { \u0026quot;_id\u0026quot;: \u0026quot;cvuak1lath2dlgqqpcjg\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;deleted\u0026quot; }' Search AI assistant #\n curl -X POST \u0026#34;http://localhost:9000/assistant/_search\u0026#34; -d\u0026#39; { \u0026#34;from\u0026#34;: 0, \u0026#34;size\u0026#34;: 10 }\u0026#39; Clone an AI assistant #  //request curl -XPOST http://localhost:9000/assistant/cvuak1lath2dlgqqpcjg/_clone //response { \u0026#34;_id\u0026#34;: \u0026#34;d04r1gic7k812t6qg3n0\u0026#34;, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34; }\u0026#39; Retrieve Chat History (sessions) #  //request curl -XGET http://localhost:9000/chat/_history?query={filter_keyword} //response {\u0026quot;took\u0026quot;:997,\u0026quot;timed_out\u0026quot;:false,\u0026quot;_shards\u0026quot;:{\u0026quot;total\u0026quot;:1,\u0026quot;successful\u0026quot;:1,\u0026quot;skipped\u0026quot;:0,\u0026quot;failed\u0026quot;:0},\u0026quot;hits\u0026quot;:{\u0026quot;total\u0026quot;:{\u0026quot;value\u0026quot;:1,\u0026quot;relation\u0026quot;:\u0026quot;eq\u0026quot;},\u0026quot;max_score\u0026quot;:1.0,\u0026quot;hits\u0026quot;:[{\u0026quot;_index\u0026quot;:\u0026quot;.infini_session\u0026quot;,\u0026quot;_type\u0026quot;:\u0026quot;_doc\u0026quot;,\u0026quot;_id\u0026quot;:\u0026quot;csk30fjq50k7l4akku9g\u0026quot;,\u0026quot;_score\u0026quot;:1.0,\u0026quot;_source\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;csk30fjq50k7l4akku9g\u0026quot;,\u0026quot;created\u0026quot;:\u0026quot;2024-11-04T10:23:58.980669+08:00\u0026quot;,\u0026quot;updated\u0026quot;:\u0026quot;2024-11-04T10:23:58.980678+08:00\u0026quot;,\u0026quot;status\u0026quot;:\u0026quot;active\u0026quot;}}]}} Open a Existing Chat Session #\n //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST http://localhost:9000/chat/csk30fjq50k7l4akku9g/_open //response { \u0026quot;_id\u0026quot;: \u0026quot;csk30fjq50k7l4akku9g\u0026quot;, \u0026quot;_source\u0026quot;: { \u0026quot;id\u0026quot;: \u0026quot;csk30fjq50k7l4akku9g\u0026quot;, \u0026quot;created\u0026quot;: \u0026quot;2024-11-04T10:23:58.980669+08:00\u0026quot;, \u0026quot;updated\u0026quot;: \u0026quot;2024-11-04T10:25:20.541856+08:00\u0026quot;, \u0026quot;status\u0026quot;: \u0026quot;active\u0026quot; }, \u0026quot;found\u0026quot;: true } Create a Chat Session #\n //request curl -N -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST http://localhost:9000/chat/_create -d\u0026#39;{ \u0026#34;message\u0026#34;:\u0026#34;how are you doing?\u0026#34; }\u0026#39; This API is HTTP Streaming based API, the first line will be session creation result, as follows:\n//response { \u0026quot;_id\u0026quot;: \u0026quot;csk30fjq50k7l4akku9g\u0026quot;, \u0026quot;_source\u0026quot;: { \u0026quot;id\u0026quot;: \u0026quot;csk30fjq50k7l4akku9g\u0026quot;, \u0026quot;created\u0026quot;: \u0026quot;2024-11-04T10:23:58.980669+08:00\u0026quot;, \u0026quot;updated\u0026quot;: \u0026quot;2024-11-04T10:23:58.980678+08:00\u0026quot;, \u0026quot;status\u0026quot;: \u0026quot;active\u0026quot; }, \u0026quot;result\u0026quot;: \u0026quot;created\u0026quot; \u0026quot;payload\u0026quot;: { //first chat message } } The payload field is the result of the first request message.\nAnd start with the second line will be chunk based chat response, please refer to section [### Send a Message](### Send a Message)\nHere is the full request and response:\n➜ curl -H\u0026#39;X-API-TOKEN: d1iah2v3edbmq3jakcqg035du63myi8es0j4vqibelhvjnwy6gaeqd0ewitu4c6h1ad73c56pqknjbui4qfw\u0026#39; -N -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST http://localhost:9000/chat/_create -d\u0026#39;{ \u0026#34;message\u0026#34;:\u0026#34;how are you doing?\u0026#34; }\u0026#39; {\u0026#34;_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;_source\u0026#34;:{\u0026#34;id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;created\u0026#34;:\u0026#34;2025-07-02T11:33:49.167656+08:00\u0026#34;,\u0026#34;updated\u0026#34;:\u0026#34;2025-07-02T11:33:49.167664+08:00\u0026#34;,\u0026#34;status\u0026#34;:\u0026#34;active\u0026#34;,\u0026#34;title\u0026#34;:\u0026#34;how are you doing?\u0026#34;,\u0026#34;visible\u0026#34;:true},\u0026#34;payload\u0026#34;:{\u0026#34;id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;created\u0026#34;:\u0026#34;2025-07-02T11:33:49.191362+08:00\u0026#34;,\u0026#34;updated\u0026#34;:\u0026#34;2025-07-02T11:33:49.191371+08:00\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;user\u0026#34;,\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;from\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;message\u0026#34;:\u0026#34;how are you doing?\u0026#34;,\u0026#34;details\u0026#34;:null,\u0026#34;up_vote\u0026#34;:0,\u0026#34;down_vote\u0026#34;:0,\u0026#34;assistant_id\u0026#34;:\u0026#34;default\u0026#34;},\u0026#34;result\u0026#34;:\u0026#34;created\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:0,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34;\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:1,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34;\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:2,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34;I\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:3,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34;\u0026#39;m\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:4,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34; an\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:5,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34; artificial intelligence, so\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:6,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34; I don\u0026#39;t have\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:7,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34; feelings or physical states\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:8,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34;, but I\u0026#39;m\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:9,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34; here and ready to\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:10,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34; help you with any\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:11,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34; questions or tasks you\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:12,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34; might have! How\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:13,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34; can I assist you\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:14,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34; today?\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:15,\u0026#34;chunk_type\u0026#34;:\u0026#34;response\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34;\u0026#34;} {\u0026#34;session_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcs0\u0026#34;,\u0026#34;message_id\u0026#34;:\u0026#34;d1iah7f3edbmq3jakct0\u0026#34;,\u0026#34;message_type\u0026#34;:\u0026#34;system\u0026#34;,\u0026#34;reply_to_message\u0026#34;:\u0026#34;d1iah7f3edbmq3jakcsg\u0026#34;,\u0026#34;chunk_sequence\u0026#34;:0,\u0026#34;chunk_type\u0026#34;:\u0026#34;reply_end\u0026#34;,\u0026#34;message_chunk\u0026#34;:\u0026#34;Processing completed\u0026#34;} Get Chat Session Info #  //request curl -XGET http://localhost:9000/chat/csk30fjq50k7l4akku9g //response { \u0026quot;_id\u0026quot;: \u0026quot;csk30fjq50k7l4akku9g\u0026quot;, \u0026quot;_source\u0026quot;: { \u0026quot;id\u0026quot;: \u0026quot;csk30fjq50k7l4akku9g\u0026quot;, \u0026quot;created\u0026quot;: \u0026quot;2025-04-01T10:48:38.389295+08:00\u0026quot;, \u0026quot;updated\u0026quot;: \u0026quot;2025-04-01T10:48:40.572748+08:00\u0026quot;, \u0026quot;status\u0026quot;: \u0026quot;active\u0026quot;, \u0026quot;title\u0026quot;: \u0026quot;xx\u0026quot; }, \u0026quot;found\u0026quot;: true } Update Chat Session Info #\n //request curl -XPUT http://localhost:9000/chat/csk30fjq50k7l4akku9g -d\u0026#39; { \u0026#34;title\u0026#34;:\u0026#34;my title\u0026#34;, \u0026#34;context\u0026#34;:{ \u0026#34;attachments\u0026#34;:[] } }\u0026#39; //response { \u0026quot;_id\u0026quot;: \u0026quot;csk30fjq50k7l4akku9g\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;updated\u0026quot; } Delete Chat Session #\n //request curl -DELETE http://localhost:9000/chat/csk30fjq50k7l4akku9g //response { \u0026quot;_id\u0026quot;: \u0026quot;csk30fjq50k7l4akku9g\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;deleted\u0026quot; } Retrieve a Chat History #\n //request curl -XGET http://localhost:9000/chat/csk30fjq50k7l4akku9g/_history //response {\u0026quot;took\u0026quot;:4,\u0026quot;timed_out\u0026quot;:false,\u0026quot;_shards\u0026quot;:{\u0026quot;total\u0026quot;:1,\u0026quot;successful\u0026quot;:1,\u0026quot;skipped\u0026quot;:0,\u0026quot;failed\u0026quot;:0},\u0026quot;hits\u0026quot;:{\u0026quot;total\u0026quot;:{\u0026quot;value\u0026quot;:0,\u0026quot;relation\u0026quot;:\u0026quot;eq\u0026quot;},\u0026quot;max_score\u0026quot;:null,\u0026quot;hits\u0026quot;:[]}} Send a Message #\n //request curl -N -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST http://localhost:9000/chat/csk30fjq50k7l4akku9g/_chat -d \u0026#39;{\u0026#34;message\u0026#34;:\u0026#34;Hello\u0026#34;}\u0026#39; This API is HTTP Streaming based API, the first line will be request message result, as follows:\n//response { \u0026#34;_id\u0026#34;: \u0026#34;csk325rq50k85fc5u0j0\u0026#34;, \u0026#34;_source\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;csk325rq50k85fc5u0j0\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;created\u0026#34;: \u0026#34;2024-11-04T10:27:35.211502+08:00\u0026#34;, \u0026#34;updated\u0026#34;: \u0026#34;2024-11-04T10:27:35.211508+08:00\u0026#34;, \u0026#34;session_id\u0026#34;: \u0026#34;csk30fjq50k7l4akku9g\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;Hello\u0026#34; }, \u0026#34;result\u0026#34;: \u0026#34;created\u0026#34; } Starting from the second line, the response will use a chunk-based format. Each chunk will include a chunk_type indicating the stage of the reply.\nHere is the full request and response:\n➜ curl -H\u0026#39;X-API-TOKEN: d1iah2v3edbmq3jakcqg035du63myi8es0j4vqibelhvjnwy6gaeqd0ewitu4c6h1ad73c56pqknjbui4qfw\u0026#39; -N -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST http://localhost:9000/chat/d1iah7f3edbmq3jakcs0/_chat -d \u0026#39;{\u0026#34;message\u0026#34;:\u0026#34;Hello\u0026#34;}\u0026#39; [{\u0026quot;_id\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd30\u0026quot;,\u0026quot;_source\u0026quot;:{\u0026quot;id\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd30\u0026quot;,\u0026quot;created\u0026quot;:\u0026quot;2025-07-02T11:35:09.015438+08:00\u0026quot;,\u0026quot;updated\u0026quot;:\u0026quot;2025-07-02T11:35:09.015446+08:00\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;user\u0026quot;,\u0026quot;session_id\u0026quot;:\u0026quot;d1iah7f3edbmq3jakcs0\u0026quot;,\u0026quot;from\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;message\u0026quot;:\u0026quot;Hello\u0026quot;,\u0026quot;details\u0026quot;:null,\u0026quot;up_vote\u0026quot;:0,\u0026quot;down_vote\u0026quot;:0,\u0026quot;assistant_id\u0026quot;:\u0026quot;default\u0026quot;},\u0026quot;result\u0026quot;:\u0026quot;created\u0026quot;}] {\u0026quot;session_id\u0026quot;:\u0026quot;d1iah7f3edbmq3jakcs0\u0026quot;,\u0026quot;message_id\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd3g\u0026quot;,\u0026quot;message_type\u0026quot;:\u0026quot;assistant\u0026quot;,\u0026quot;reply_to_message\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd30\u0026quot;,\u0026quot;chunk_sequence\u0026quot;:0,\u0026quot;chunk_type\u0026quot;:\u0026quot;response\u0026quot;,\u0026quot;message_chunk\u0026quot;:\u0026quot;\u0026quot;} {\u0026quot;session_id\u0026quot;:\u0026quot;d1iah7f3edbmq3jakcs0\u0026quot;,\u0026quot;message_id\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd3g\u0026quot;,\u0026quot;message_type\u0026quot;:\u0026quot;assistant\u0026quot;,\u0026quot;reply_to_message\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd30\u0026quot;,\u0026quot;chunk_sequence\u0026quot;:1,\u0026quot;chunk_type\u0026quot;:\u0026quot;response\u0026quot;,\u0026quot;message_chunk\u0026quot;:\u0026quot;\u0026quot;} {\u0026quot;session_id\u0026quot;:\u0026quot;d1iah7f3edbmq3jakcs0\u0026quot;,\u0026quot;message_id\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd3g\u0026quot;,\u0026quot;message_type\u0026quot;:\u0026quot;assistant\u0026quot;,\u0026quot;reply_to_message\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd30\u0026quot;,\u0026quot;chunk_sequence\u0026quot;:2,\u0026quot;chunk_type\u0026quot;:\u0026quot;response\u0026quot;,\u0026quot;message_chunk\u0026quot;:\u0026quot;Hello\u0026quot;} {\u0026quot;session_id\u0026quot;:\u0026quot;d1iah7f3edbmq3jakcs0\u0026quot;,\u0026quot;message_id\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd3g\u0026quot;,\u0026quot;message_type\u0026quot;:\u0026quot;assistant\u0026quot;,\u0026quot;reply_to_message\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd30\u0026quot;,\u0026quot;chunk_sequence\u0026quot;:3,\u0026quot;chunk_type\u0026quot;:\u0026quot;response\u0026quot;,\u0026quot;message_chunk\u0026quot;:\u0026quot;!\u0026quot;} {\u0026quot;session_id\u0026quot;:\u0026quot;d1iah7f3edbmq3jakcs0\u0026quot;,\u0026quot;message_id\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd3g\u0026quot;,\u0026quot;message_type\u0026quot;:\u0026quot;assistant\u0026quot;,\u0026quot;reply_to_message\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd30\u0026quot;,\u0026quot;chunk_sequence\u0026quot;:4,\u0026quot;chunk_type\u0026quot;:\u0026quot;response\u0026quot;,\u0026quot;message_chunk\u0026quot;:\u0026quot; How\u0026quot;} {\u0026quot;session_id\u0026quot;:\u0026quot;d1iah7f3edbmq3jakcs0\u0026quot;,\u0026quot;message_id\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd3g\u0026quot;,\u0026quot;message_type\u0026quot;:\u0026quot;assistant\u0026quot;,\u0026quot;reply_to_message\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd30\u0026quot;,\u0026quot;chunk_sequence\u0026quot;:5,\u0026quot;chunk_type\u0026quot;:\u0026quot;response\u0026quot;,\u0026quot;message_chunk\u0026quot;:\u0026quot; can I assist you\u0026quot;} {\u0026quot;session_id\u0026quot;:\u0026quot;d1iah7f3edbmq3jakcs0\u0026quot;,\u0026quot;message_id\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd3g\u0026quot;,\u0026quot;message_type\u0026quot;:\u0026quot;assistant\u0026quot;,\u0026quot;reply_to_message\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd30\u0026quot;,\u0026quot;chunk_sequence\u0026quot;:6,\u0026quot;chunk_type\u0026quot;:\u0026quot;response\u0026quot;,\u0026quot;message_chunk\u0026quot;:\u0026quot; today?\u0026quot;} {\u0026quot;session_id\u0026quot;:\u0026quot;d1iah7f3edbmq3jakcs0\u0026quot;,\u0026quot;message_id\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd3g\u0026quot;,\u0026quot;message_type\u0026quot;:\u0026quot;assistant\u0026quot;,\u0026quot;reply_to_message\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd30\u0026quot;,\u0026quot;chunk_sequence\u0026quot;:7,\u0026quot;chunk_type\u0026quot;:\u0026quot;response\u0026quot;,\u0026quot;message_chunk\u0026quot;:\u0026quot;\u0026quot;} {\u0026quot;session_id\u0026quot;:\u0026quot;d1iah7f3edbmq3jakcs0\u0026quot;,\u0026quot;message_id\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd3g\u0026quot;,\u0026quot;message_type\u0026quot;:\u0026quot;system\u0026quot;,\u0026quot;reply_to_message\u0026quot;:\u0026quot;d1iahrf3edbmq3jakd30\u0026quot;,\u0026quot;chunk_sequence\u0026quot;:0,\u0026quot;chunk_type\u0026quot;:\u0026quot;reply_end\u0026quot;,\u0026quot;message_chunk\u0026quot;:\u0026quot;Processing completed\u0026quot;} Close a Chat Session #\n //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST http://localhost:9000/chat/csk30fjq50k7l4akku9g/_close //response { \u0026quot;_id\u0026quot;: \u0026quot;csk30fjq50k7l4akku9g\u0026quot;, \u0026quot;_source\u0026quot;: { \u0026quot;id\u0026quot;: \u0026quot;csk30fjq50k7l4akku9g\u0026quot;, \u0026quot;created\u0026quot;: \u0026quot;2024-11-04T10:23:58.980669+08:00\u0026quot;, \u0026quot;updated\u0026quot;: \u0026quot;2024-11-04T10:28:47.461033+08:00\u0026quot;, \u0026quot;status\u0026quot;: \u0026quot;closed\u0026quot; }, \u0026quot;found\u0026quot;: true } Cancel a Message #\n //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST http://localhost:9000/chat/csk30fjq50k7l4akku9g/_cancel //response { \u0026quot;acknowledged\u0026quot;: true } Assistant UI Management #\n Search Assistant #  Log in to the Coco-Server admin dashboard, click AI Assistant in the left menu to view all assistant lists, as shown below:\nEnter keywords in the search box above the list and click the Refresh button to search for matching assistant, as shown below:\nAdd Assistant #  Click Add in the top-right corner of the list to create a new assistant, as shown below:\nThe system provides default values for the assistant configuration. Modify these values as needed, then click the save button to complete the creation.\nDelete Assistant #  Select the target assistant in the list, click Delete on the right side of the entry, and confirm in the pop-up dialog to complete the deletion. As shown below:\n The built-in assistant cannot be deleted, but it can be modified.\n Edit Assistant #  Select the target assistant in the list, click Edit on the right side to enter the editing page. Modify the configuration and click save to update. As shown below:\nClone Assistant #  Select the target assistant in the list, click Clone on the right side to clone a assistant and then you will enter the editing page. Just like the operation of Edit Assistant, Modify the configuration and click save to update.\n","subcategory":null,"summary":"","tags":null,"title":"Assistant","url":"/coco-server/main/docs/references/assistant/"},{"category":null,"content":"Yuque Connector #  Register Yuque Connector #  curl -XPUT \u0026#34;http://localhost:9000/connector/yuque?replace=true\u0026#34; -d \u0026#39;{ \u0026#34;name\u0026#34;: \u0026#34;Yuque Docs Connector\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Fetch the docs metadata for yuque.\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;/assets/connector/yuque/icon.png\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;website\u0026#34;, \u0026#34;tags\u0026#34;: [ \u0026#34;static_site\u0026#34;, \u0026#34;hugo\u0026#34;, \u0026#34;web\u0026#34; ], \u0026#34;url\u0026#34;: \u0026#34;http://coco.rs/connectors/hugo_site\u0026#34;, \u0026#34;assets\u0026#34;: { \u0026#34;icons\u0026#34;: { \u0026#34;default\u0026#34;: \u0026#34;/assets/connector/yuque/icon.png\u0026#34;, \u0026#34;book\u0026#34;: \u0026#34;/assets/connector/yuque/book.png\u0026#34;, \u0026#34;board\u0026#34;: \u0026#34;/assets/connector/yuque/board.png\u0026#34;, \u0026#34;sheet\u0026#34;: \u0026#34;/assets/connector/yuque/sheet.png\u0026#34;, \u0026#34;table\u0026#34;: \u0026#34;/assets/connector/yuque/table.png\u0026#34;, \u0026#34;doc\u0026#34;: \u0026#34;/assets/connector/yuque/doc.png\u0026#34; } } }\u0026#39;  Use yuque as a unique identifier, as it is a builtin connector.\n Update coco-server\u0026rsquo;s config #  Below is an example configuration for enabling the Yuque Connector in coco-server:\nconnector: yuque: enabled: true queue: name: indexing_documents interval: 10s Explanation of Config Parameters #     Field Type Description     enabled boolean Enables or disables the Hugo Site connector. Set to true to activate it.   interval string Specifies the time interval (e.g., 60s) at which the connector will check for updates.   queue.name string Defines the name of the queue where indexing tasks will be added.    Use the Yuque Connector #  The Yuque Connector allows you to index data from your Yuque account into your system. Follow these steps to set it up:\nObtain Yuque API Token #  Before using this connector, you need to obtain your Yuque API token. Refer to the official Yuque API documentation for instructions.\nExample Request #  Here is an example request to configure the Yuque Connector:\ncurl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST \u0026#34;http://localhost:9000/datasource/\u0026#34; -d \u0026#39; { \u0026#34;name\u0026#34;: \u0026#34;My Yuque\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;connector\u0026#34;, \u0026#34;connector\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;yuque\u0026#34;, \u0026#34;config\u0026#34;: { \u0026#34;token\u0026#34;: \u0026#34;your_yuque_api_token\u0026#34;, \u0026#34;include_private_book\u0026#34;: false, \u0026#34;include_private_doc\u0026#34;: false, \u0026#34;indexing_books\u0026#34;: true, \u0026#34;indexing_docs\u0026#34;: true, \u0026#34;indexing_users\u0026#34;: true, \u0026#34;indexing_groups\u0026#34;: true } } }\u0026#39; Supported Config Parameters for Yuque Connector #  Below are the configuration parameters supported by the Yuque Connector:\n   Field Type Description     token string Your Yuque API token. This is required to access Yuque\u0026rsquo;s API.   include_private_book bool Whether to include private books in indexing. Defaults to false.   include_private_doc bool Whether to include private documents in indexing. Defaults to false.   indexing_books bool Whether to index books in Yuque. Defaults to false.   indexing_docs bool Whether to index documents in Yuque. Defaults to false.   indexing_users bool Whether to index user data from Yuque. Defaults to false.   indexing_groups bool Whether to index group data from Yuque. Defaults to false.    Notes #   Set token to your valid Yuque API token to enable the connector. Boolean parameters like include_private_book, indexing_books, etc., allow you to customize the scope of indexing.  ","subcategory":null,"summary":"","tags":null,"title":"Yuque","url":"/coco-server/main/docs/references/connectors/yuque/"},{"category":null,"content":"Notion Connector #  Register Notion Connector #  curl -XPUT \u0026#34;http://localhost:9000/connector/notion?replace=true\u0026#34; -d \u0026#39;{ \u0026#34;name\u0026#34;: \u0026#34;Notion Docs Connector\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Fetch the docs metadata for notion.\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;/assets/connector/notion/icon.png\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;website\u0026#34;, \u0026#34;tags\u0026#34;: [ \u0026#34;docs\u0026#34;, \u0026#34;notion\u0026#34;, \u0026#34;web\u0026#34; ], \u0026#34;url\u0026#34;: \u0026#34;http://coco.rs/connectors/notion\u0026#34;, \u0026#34;assets\u0026#34;: { \u0026#34;icons\u0026#34;: { \u0026#34;default\u0026#34;: \u0026#34;/assets/connector/notion/icon.png\u0026#34;, \u0026#34;web_page\u0026#34;: \u0026#34;/assets/connector/notion/icon.png\u0026#34;, \u0026#34;database\u0026#34;: \u0026#34;/assets/connector/notion/database.png\u0026#34;, \u0026#34;page\u0026#34;: \u0026#34;/assets/connector/notion/page.png\u0026#34; } } }\u0026#39;  Use notion as a unique identifier, as it is a builtin connector.\n Update coco-server\u0026rsquo;s config #  Below is an example configuration for enabling the Notion Connector in coco-server:\nconnector: notion: enabled: true queue: name: indexing_documents interval: 10s Explanation of Config Parameters #     Field Type Description     enabled boolean Enables or disables the Hugo Site connector. Set to true to activate it.   interval string Specifies the time interval (e.g., 60s) at which the connector will check for updates.   queue.name string Defines the name of the queue where indexing tasks will be added.    Use the Notion Connector #  The Notion Connector allows you to index data from your notion account into your system. Follow these steps to set it up:\nObtain Notion API Token #  Before using this connector, you need to obtain your Notion API token. Refer to the official Notion integrations documentation for instructions.\nYou should also integrate your Notion workspace with the app by establishing the necessary connections. This way, the API token will have access to your Notion content.\nExample Request #  Here is an example request to configure the Notion Connector:\ncurl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST \u0026#34;http://localhost:9000/datasource/\u0026#34; -d \u0026#39; { \u0026#34;name\u0026#34;: \u0026#34;My Notion\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;connector\u0026#34;, \u0026#34;connector\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;notion\u0026#34;, \u0026#34;config\u0026#34;: { \u0026#34;token\u0026#34;: \u0026#34;your_notion_api_token\u0026#34; } } }\u0026#39; Supported Config Parameters for Notion Connector #  Below are the configuration parameters supported by the Notion Connector:\n   Field Type Description     token string Your Notion API token. This is required to access Notion\u0026rsquo;s API.    Notes #   Set token to your valid Notion API token to enable the connector.  ","subcategory":null,"summary":"","tags":null,"title":"Notion","url":"/coco-server/main/docs/references/connectors/notion/"},{"category":null,"content":"Local FS Connector #  Register Local FS Connector #  curl -XPUT \u0026#34;http://localhost:9000/connector/local_fs?replace=true\u0026#34; -d \u0026#39;{ \u0026#34;name\u0026#34; : \u0026#34;Local Filesystem Connector\u0026#34;, \u0026#34;description\u0026#34; : \u0026#34;Scan and fetch metadata from local files.\u0026#34;, \u0026#34;category\u0026#34; : \u0026#34;local_storage\u0026#34;, \u0026#34;icon\u0026#34; : \u0026#34;/assets/icons/connector/local_fs/icon.png\u0026#34;, \u0026#34;tags\u0026#34; : [ \u0026#34;storage\u0026#34;, \u0026#34;filesystem\u0026#34; ], \u0026#34;url\u0026#34; : \u0026#34;http://coco.rs/connectors/local_fs\u0026#34;, \u0026#34;assets\u0026#34; : { \u0026#34;icons\u0026#34; : { \u0026#34;default\u0026#34; : \u0026#34;/assets/icons/connector/local_fs/icon.png\u0026#34; } } }\u0026#39;  Use local_fs as a unique identifier, as it is a builtin connector.\n Update coco-server\u0026rsquo;s config #  Below is an example configuration for enabling the Local FS Connector in coco-server:\nconnector: local_fs: enabled: true queue: name: indexing_documents interval: 10s Explanation of Config Parameters #     Field Type Description     enabled boolean Enables or disables the Local FS connector. Set to true to activate it.   interval string Specifies the time interval (e.g., 60s) at which the connector will check for updates.   queue.name string Defines the name of the queue where indexing tasks will be added.    Use the Local FS Connector #  The Local FS Connector allows you to index data from your local filesystem into your system. Follow these steps to set it up:\nConfigure file folders \u0026amp; extensions #  You need to configure the folder path, and the connector will scan the metadata of all files under the folder, including subfolders. You can add file extension configuration, and the connector will only scan files with the specified extension you specify.\nExample Request #  Here is an example request to configure the Notion Connector:\ncurl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST \u0026#34;http://localhost:9000/datasource/\u0026#34; -d \u0026#39; { \u0026#34;name\u0026#34;:\u0026#34;My Local Documents\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;connector\u0026#34;, \u0026#34;connector\u0026#34;:{ \u0026#34;id\u0026#34;:\u0026#34;local_fs\u0026#34;, \u0026#34;config\u0026#34;:{ \u0026#34;paths\u0026#34;: [ \u0026#34;/path/to/my/documents\u0026#34;, \u0026#34;/path/to/another/folder\u0026#34; ], \u0026#34;extensions\u0026#34;: [ \u0026#34;pdf\u0026#34;, \u0026#34;docx\u0026#34;, \u0026#34;txt\u0026#34; ] } } }\u0026#39;\u0026#39; Supported Config Parameters for Local FS Connector #  Below are the configuration parameters supported by the Local FS Connector:\n   Field Type Description     paths []string An array of absolute paths to the folders you want to scan.   extensions []string Optional. An array of file extensions to include (e.g., pdf, docx). If omitted or empty, all files will be indexed.    ","subcategory":null,"summary":"","tags":null,"title":"Local FS","url":"/coco-server/main/docs/references/connectors/local_fs/"},{"category":null,"content":"How to integrate Coco AI with your own datasource #  This guide will walk you through the process of creating a custom datasource and building a simple connector to integrate it with the system.\nObtain API Token #  Make sure you have a valid API token before continue.\nCreate a simple connector #  curl -H'X-API-TOKEN: cv9bb63q50k5eikkq43gp07lmg60gn2nor7uf650xpxazd6a6nns8uttymz52uvnplhmtaf829x71lph51li' -XPOST http://localhost:9000/connector/ -d'{ \u0026quot;name\u0026quot;: \u0026quot;My Connector\u0026quot; }' Response\n{ \u0026quot;_id\u0026quot;: \u0026quot;cv9bc23q50k5eikkq4c0\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;created\u0026quot; } Create a datasource for this connector #  curl -H'X-API-TOKEN: cv9bb63q50k5eikkq43gp07lmg60gn2nor7uf650xpxazd6a6nns8uttymz52uvnplhmtaf829x71lph51li' -H 'Content-Type: application/json' -XPOST http://localhost:9000/datasource/ -d' { \u0026quot;name\u0026quot;:\u0026quot;My Datasource\u0026quot;, \u0026quot;type\u0026quot;:\u0026quot;connector\u0026quot;, \u0026quot;connector\u0026quot;:{ \u0026quot;id\u0026quot;:\u0026quot;cv9bc23q50k5eikkq4c0\u0026quot; } }' Response\n{ \u0026quot;_id\u0026quot;: \u0026quot;cv9bcjrq50k5eikkq4h0\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;created\u0026quot; } Insert document to this datasource #  curl -H'X-API-TOKEN: cv9bb63q50k5eikkq43gp07lmg60gn2nor7uf650xpxazd6a6nns8uttymz52uvnplhmtaf829x71lph51li' -H 'Content-Type: application/json' -XPOST http://localhost:9000/datasource/cv9bcjrq50k5eikkq4h0/_doc -d' { \u0026quot;title\u0026quot;: \u0026quot;I am just a Coco doc that you can search\u0026quot;, \u0026quot;summary\u0026quot;: \u0026quot;Nothing but great start\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;Coco is a unified private search engien that you can trust.\u0026quot; }' Response\n{ \u0026quot;_id\u0026quot;: \u0026quot;cv9be7jq50k5eikkq4vg\u0026quot;, \u0026quot;result\u0026quot;: \u0026quot;created\u0026quot; } Search via App #  Now you are ready to consume your document through Coco AI app.\nSearch via API #  You may search via API.\ncurl -H'X-API-TOKEN: cv9bb63q50k5eikkq43gp07lmg60gn2nor7uf650xpxazd6a6nns8uttymz52uvnplhmtaf829x71lph51li' -XGET http://localhost:9000/query/_search\\?query\\=coco\u0026amp;datasource=cv9bcjrq50k5eikkq4h0 Response\n{\u0026quot;took\u0026quot;:4,\u0026quot;timed_out\u0026quot;:false,\u0026quot;_shards\u0026quot;:{\u0026quot;total\u0026quot;:1,\u0026quot;successful\u0026quot;:1,\u0026quot;skipped\u0026quot;:0,\u0026quot;failed\u0026quot;:0},\u0026quot;hits\u0026quot;:{\u0026quot;total\u0026quot;:{\u0026quot;value\u0026quot;:1,\u0026quot;relation\u0026quot;:\u0026quot;eq\u0026quot;},\u0026quot;max_score\u0026quot;:33.31594,\u0026quot;hits\u0026quot;:[{\u0026quot;_index\u0026quot;:\u0026quot;coco_document\u0026quot;,\u0026quot;_type\u0026quot;:\u0026quot;_doc\u0026quot;,\u0026quot;_id\u0026quot;:\u0026quot;cv9be7jq50k5eikkq4vg\u0026quot;,\u0026quot;_score\u0026quot;:33.31594,\u0026quot;_source\u0026quot;:{\u0026quot;summary\u0026quot;:\u0026quot;Nothing but great start\u0026quot;,\u0026quot;created\u0026quot;:\u0026quot;2025-03-13T18:44:46.600896+08:00\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;cv9be7jq50k5eikkq4vg\u0026quot;,\u0026quot;source\u0026quot;:{\u0026quot;name\u0026quot;:\u0026quot;My Datasource\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;cv9bcjrq50k5eikkq4h0\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;connector\u0026quot;},\u0026quot;title\u0026quot;:\u0026quot;I am just a Coco doc that you can search\u0026quot;,\u0026quot;updated\u0026quot;:\u0026quot;2025-03-13T18:44:46.600908+08:00\u0026quot;}}]}} ","subcategory":null,"summary":"","tags":null,"title":"How to integrate Coco AI with your own datasource","url":"/coco-server/main/docs/tutorials/howto_create_your_own_datasource/"},{"category":null,"content":"Setup Wizard #  Open your browser and enter http://localhost:9000/#/guide to access the initialization wizard, as shown below:\nEnter your username, email, and password, then click Next, as shown:\n Select the LLM type: DeepSeek, Ollama, or OpenAI Configure the LLM endpoint Set the default model Enable keepalive and set an appropriate interval Provide the token Click Next to complete the initialization.  Login #  After initialization, you’ll be redirected to the login page, as shown:\nEnter your password and click Login. Upon successful login, you’ll be directed to the homepage:\nSettings #  Click Settings in the left-side menu, as shown:\n Configure LLM parameters Configure Collector parameters  Datasource #  Click Datasource in the left-side menu:\nTo add a new datasource, click Add button, as shown:\nClick on a datasource name in the list to view its details:\nEnjoy~\n","subcategory":null,"summary":"","tags":null,"title":"Setup Wizard","url":"/coco-server/main/docs/getting-started/setup/"},{"category":null,"content":"Rss Connector #  Register RSS Connector #  curl -XPUT \u0026#34;http://localhost:9000/connector/rss?replace=true\u0026#34; -d \u0026#39;{ \u0026#34;name\u0026#34; : \u0026#34;RSS Connector\u0026#34;, \u0026#34;description\u0026#34; : \u0026#34;Fetch items from a specified RSS feed.\u0026#34;, \u0026#34;category\u0026#34; : \u0026#34;website\u0026#34;, \u0026#34;icon\u0026#34; : \u0026#34;/assets/icons/connector/rss/icon.png\u0026#34;, \u0026#34;tags\u0026#34; : [ \u0026#34;rss\u0026#34;, \u0026#34;feed\u0026#34;, \u0026#34;web\u0026#34; ], \u0026#34;url\u0026#34; : \u0026#34;http://coco.rs/connectors/rss\u0026#34;, \u0026#34;assets\u0026#34; : { \u0026#34;icons\u0026#34; : { \u0026#34;default\u0026#34; : \u0026#34;/assets/icons/connector/rss/icon.png\u0026#34; } } }\u0026#39;  Use rss as a unique identifier, as it is a builtin connector.\n Update coco-server\u0026rsquo;s config #  Below is an example configuration for enabling the RSS Connector in coco-server:\nconnector: rss: enabled: true interval: 30s queue: name: indexing_documents Explanation of Config Parameters #     Field Type Description     enabled boolean Enables or disables the RSS connector. Set to true to activate it.   interval string Specifies the time interval (e.g., 60s) at which the connector will check for updates.   queue.name string Defines the name of the queue where indexing tasks will be added.    Use the RSS Connector #  //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST \u0026#34;http://localhost:9000/datasource/\u0026#34; -d\u0026#39; { \u0026#34;name\u0026#34;:\u0026#34;My RSS feed\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;connector\u0026#34;, \u0026#34;connector\u0026#34;:{ \u0026#34;id\u0026#34;:\u0026#34;rss\u0026#34;, \u0026#34;config\u0026#34;:{ \u0026#34;urls\u0026#34;: [ \u0026#34;The RSS link\u0026#34; ] } } }\u0026#39; Below is the config parameters supported by this connector.\n   Field Type Description     urls []string The array list of the rss feet, support more than one url.    ","subcategory":null,"summary":"","tags":null,"title":"RSS","url":"/coco-server/main/docs/references/connectors/rss/"},{"category":null,"content":"Hugo Site Connector #  Register Hugo Site Connector #  curl -XPUT \u0026#34;http://localhost:9000/connector/hugo_site?replace=true\u0026#34; -d \u0026#39;{ \u0026#34;name\u0026#34;: \u0026#34;Hugo Site Connector\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Fetch the index.json file from a specified Hugo site.\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;/assets/connector/hugo_site/icon.png\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;website\u0026#34;, \u0026#34;tags\u0026#34;: [ \u0026#34;static_site\u0026#34;, \u0026#34;hugo\u0026#34;, \u0026#34;web\u0026#34; ], \u0026#34;url\u0026#34;: \u0026#34;http://coco.rs/connectors/hugo_site\u0026#34;, \u0026#34;assets\u0026#34;: { \u0026#34;icons\u0026#34;: { \u0026#34;default\u0026#34;: \u0026#34;/assets/connector/hugo_site/web.png\u0026#34;, \u0026#34;blog\u0026#34;: \u0026#34;/assets/connector/hugo_site/blog.png\u0026#34;, \u0026#34;web\u0026#34;: \u0026#34;/assets/connector/hugo_site/web.png\u0026#34;, \u0026#34;web_page\u0026#34;: \u0026#34;/assets/connector/hugo_site/web_page.png\u0026#34;, \u0026#34;news\u0026#34;: \u0026#34;/assets/connector/hugo_site/news.png\u0026#34; } } }\u0026#39;  Use hugo_site as a unique identifier, as it is a builtin connector.\n Make sure hugo generated the json format with this:\n[ { \u0026quot;category\u0026quot;: \u0026quot;Product\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;INFINI Console v1.28 Released We’re excited to announce INFINI Console v1.28, the latest update from INFINI Labs! This release brings the powerful TopN feature to help you identify key metrics efficiently, alongside other performance improvements and bug fixes. Read on for all the details and enhancements in this release.\\nWhat is INFINI Console? Great question! INFINI Console is a lightweight, cross-version, unified management platform designed specifically for search infrastructures. It empowers enterprises to:\\nManage multiple search clusters across different versions seamlessly. Gain centralized control for efficient cluster monitoring and maintenance. INFINI Console – The Choice of Elasticsearch Professionals. Be an Elasticsearch Pro Today!\\nWith INFINI Console, you can streamline the management of your search ecosystem like never before! 🚀\\nLearn more here: \u0026quot;, \u0026quot;created\u0026quot;: \u0026quot;2025-01-11T17:00:00+08:00\u0026quot;, \u0026quot;lang\u0026quot;: \u0026quot;en\u0026quot;, \u0026quot;subcategory\u0026quot;: \u0026quot;Released\u0026quot;, \u0026quot;summary\u0026quot;: \u0026quot;Discover the new TopN feature and other enhancements in INFINI Console v1.28.\u0026quot;, \u0026quot;tags\u0026quot;: [ \u0026quot;Console\u0026quot;, \u0026quot;TopN\u0026quot;, \u0026quot;Release\u0026quot; ], \u0026quot;title\u0026quot;: \u0026quot;INFINI Console v1.28 Released\u0026quot;, \u0026quot;updated\u0026quot;: null, \u0026quot;url\u0026quot;: \u0026quot;/posts/2025/01-11-produc-released-console-topn/\u0026quot; } ] Update coco-server\u0026rsquo;s config #  Below is an example configuration for enabling the Hugo Site Drive Connector in coco-server:\nconnector: hugo_site: enabled: true interval: 60s queue: name: indexing_documents Explanation of Config Parameters #     Field Type Description     enabled boolean Enables or disables the Hugo Site connector. Set to true to activate it.   interval string Specifies the time interval (e.g., 60s) at which the connector will check for updates.   queue.name string Defines the name of the queue where indexing tasks will be added.    Use the Hugo Site Connector #  //request curl -H \u0026#39;Content-Type: application/json\u0026#39; -XPOST \u0026#34;http://localhost:9000/datasource/\u0026#34; -d\u0026#39; { \u0026#34;name\u0026#34;:\u0026#34;My Hugo Site\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;connector\u0026#34;, \u0026#34;connector\u0026#34;:{ \u0026#34;id\u0026#34;:\u0026#34;hugo_site\u0026#34;, \u0026#34;config\u0026#34;:{ \u0026#34;urls\u0026#34;: [ \u0026#34;https://pizza.rs/index.json\u0026#34; ] } } }\u0026#39; Below is the config parameters supported by this connector.\n   Field Type Description     urls []string The array list of the hugo\u0026rsquo;s site, support more than one url.    ","subcategory":null,"summary":"","tags":null,"title":"Hugo Site","url":"/coco-server/main/docs/references/connectors/hugo_site/"},{"category":null,"content":"API Token #  Request Access Token #  An API Token can be used in your own application to access Coco Server.\nExample request:\ncurl -H \u0026quot;Authorization: Bearer \u0026lt;access_token\u0026gt;\u0026quot; -XPOST http://localhost:9000/auth/request_access_token ","subcategory":null,"summary":"","tags":null,"title":"API Token","url":"/coco-server/main/docs/references/account/access_token/"},{"category":null,"content":"Coco Server User Guide #   Run Coco Server with Docker Manual install Coco Server  1. Quick Start (Recommended for Most Users) #  This method is the simplest way to get Coco Server running. It uses Docker-managed volumes, which handles data persistence automatically without requiring manual directory setup on your host machine.\nCommand:\ndocker run -d \\  --name cocoserver \\  -p 9000:9000 \\  -v data:/app/easysearch/data \\  -v config:/app/easysearch/config \\  -v logs:/app/easysearch/logs \\  -e EASYSEARCH_INITIAL_ADMIN_PASSWORD=\u0026#34;coco-server\u0026#34; \\  infinilabs/coco:0.6.0  🔒 SECURITY WARNING\nFor initial setup convenience, the password is set to \u0026quot;coco-server\u0026quot;. It is highly recommended to replace this with a strong, unique password before running the command for the first time.\n After running the command:\n Coco Server will be running in the background. Access the Web UI at http://localhost:9000. Your data, configuration, and logs are safely stored in Docker volumes named data, config, and logs.   2. Advanced Start (Using Host Directories) #  This method provides direct access to the data, configuration, and log files on your host machine. It\u0026rsquo;s suitable for users who want to easily edit configuration files or manage data directly.\nStep 1: Prepare Host Directories and Environment File\nFirst, create the necessary directories and a .env file for your password.\n# Create the parent directory for all Coco Server files. # We recommend using a standard location like /data/cocoserver. sudo mkdir -p /data/cocoserver/{data,logs,config} # Create an environment file to store your password securely. # Replace \u0026quot;your-strong-password\u0026quot; with a strong, secret password. echo \u0026quot;EASYSEARCH_INITIAL_ADMIN_PASSWORD=your-strong-password\u0026quot; | sudo tee /data/cocoserver/.env \u0026gt; /dev/null Step 2: Initialize Configuration from the Image (One-time Setup)\nThis clever command runs a temporary container to copy the default configuration files from the image into your newly created local config directory.\ndocker run --rm \\  -v /data/cocoserver/config:/tmp/config \\  infinilabs/coco:0.6.0 \\  cp -a /app/easysearch/config/. /tmp/config/  --rm: Automatically removes the container after it exits. -v /data/cocoserver/config:/tmp/config: Mounts your local config directory into a temporary path inside the container. cp -a ...: The command executed inside the container. It copies all contents from the image\u0026rsquo;s config directory to the mounted host directory.  Step 3: Set Directory Permissions\nThe container runs with a specific user (UID 602). You must grant this user write permissions to the host directories.\n Note: This step might be unnecessary on some Docker environments like Docker Desktop for Mac. Test without it first if you are unsure.\n sudo chown -R 602:602 /data/cocoserver Step 4: Run the Coco Server Container\nNow, start the main container, mounting your prepared host directories and using the .env file for the password.\ndocker run -d \\  --name cocoserver \\  --hostname coco-server \\  --restart unless-stopped \\  --env-file /data/cocoserver/.env \\  -m 4g --cpus=\u0026#34;2\u0026#34; \\  -p 9000:9000 \\  -v /data/cocoserver/data:/app/easysearch/data \\  -v /data/cocoserver/config:/app/easysearch/config \\  -v /data/cocoserver/logs:/app/easysearch/logs \\  -e ES_JAVA_OPTS=\u0026#34;-Xms2g -Xmx2g\u0026#34; \\  infinilabs/coco:0.6.0  --env-file: Securely loads environment variables (like your password) from the .env file.   3. Upgrading Coco Server #  Follow these steps to upgrade to a new version while preserving all your data. The procedure is the same whether you used the Quick Start or Advanced Start method.\nStep 1: Pull the New Image\n# Replace \u0026#39;0.7.0\u0026#39; with the new version tag. docker pull infinilabs/coco:0.7.0 Step 2: Stop and Remove the Old Container\ndocker stop cocoserver \u0026amp;\u0026amp; docker rm cocoserver Step 3: Start a New Container with the Same Volumes/Mounts\nRe-run your original docker run command, but update the image tag to the new version. It is crucial to use the exact same -v volume or bind mount paths as before.\n If you used Quick Start, re-run the Quick Start command with the new image tag. If you used Advanced Start, re-run the Advanced Start command with the new image tag.   4. Full Cleanup and Removal #  These commands will completely remove the Coco Server container and its data.\n 🛑 DANGER ZONE 🛑\nThe following commands will permanently delete all your Coco Server data. This action cannot be undone. Proceed with caution.\n Step 1: Stop and Remove the Container\ndocker stop cocoserver \u0026amp;\u0026amp; docker rm cocoserver Step 2: Remove Data, Config, and Logs\n If you used Quick Start (Docker Volumes): docker volume rm data config logs  If you used Advanced Start (Host Directories): sudo rm -rf /data/cocoserver   Step 3: Remove the Docker Image\ndocker rmi infinilabs/coco:0.6.0 Manual Installation #  Follow these steps for a manual setup:\nEasysearch #  Install Easysearch\ndocker run -itd --name easysearch -p 9200:9200 infinilabs/easysearch:1.8.3-265 Get the bootstrap password of the Easysearch:\ndocker logs easysearch | grep \u0026#34;admin:\u0026#34; Coco AI #  Modify coco.yml with correct env settings, or start the coco server with the correct environments like this:\n$ OLLAMA_MODEL=deepseek-r1:1.5b ES_PASSWORD=45ff432a5428ade77c7b ./bin/coco ___ ___ ___ ___ _ _____ / __\\/___\\/ __\\/___\\  /_\\  \\_ \\  / / // // / // // //_\\\\ / /\\/ / /__/ \\_// /__/ \\_// / _ \\/\\/ /_ \\____|___/\\____|___/ \\_/ \\_/\\____/ [COCO] Coco AI - search, connect, collaborate – all in one place. [COCO] 1.0.0_SNAPSHOT#001, 2024-10-23 08:37:05, 2025-12-31 10:10:10, 9b54198e04e905406db90d145f4c01fca0139861 [10-23 17:17:36] [INF] [env.go:179] configuration auto reload enabled [10-23 17:17:36] [INF] [env.go:185] watching config: /Users/medcl/go/src/infini.sh/coco/config [10-23 17:17:36] [INF] [app.go:285] initializing coco, pid: 13764 [10-23 17:17:36] [INF] [app.go:286] using config: /Users/medcl/go/src/infini.sh/coco/coco.yml [10-23 17:17:36] [INF] [api.go:196] local ips: 192.168.3.10 [10-23 17:17:36] [INF] [api.go:360] api listen at: http://0.0.0.0:2900 [10-23 17:17:36] [INF] [module.go:136] started module: api [10-23 17:17:36] [INF] [module.go:155] started plugin: statsd [10-23 17:17:36] [INF] [module.go:161] all modules are started [10-23 17:17:36] [INF] [instance.go:78] workspace: /Users/medcl/go/src/infini.sh/coco/data/coco/nodes/csai3njq50k2c4tcb4vg [10-23 17:17:36] [INF] [app.go:511] coco is up and running now. Once the Coco Server is running, you are ready to setup it up through UI based management console.\n","subcategory":null,"summary":"","tags":null,"title":"Installation","url":"/coco-server/main/docs/getting-started/install/"},{"category":null,"content":"Google Drive Connector #  Obtain Google Drive credentials #  To use the Google Drive Connector, follow these steps to obtain your token: Google Drive API Quickstart.\n Create your own Google OAuth App, set the Data Access as shown in the following screenshot:  Set the Authorized Redirect URIs as shown in the following screenshot:   The Google Drive connector uses /connector/google_drive/oauth_redirect as the callback URL to receive authorization responses.\n  Once the token is successfully obtained, download the credentials.json file.\n  Important Notes: #   If you deploy the coco-server in your production environment, ensure you:  Update the domain name accordingly. Adjust the callback URL or configure a custom prefix if you have an Nginx instance in front of the server.    Update coco-server\u0026rsquo;s config #  Below is an example configuration for enabling the Google Drive Connector in coco-server:\nconnector: google_drive: enabled: true queue: name: indexing_documents interval: 10s skip_invalid_token: true Below is the config parameters supported by this connector.\n   Field Type Description     enabled bool Set to true to enable the Google Drive Connector.   queue.name string Specifies the queue name for indexing documents.   interval duration Interval for polling the Google Drive API.   skip_invalid_token bool Skip errors caused by invalid tokens if set to true.     Notes:\n Ensure redirect_uris and javascript_origins are properly configured for your deployment.   Register Google Drive Connector #  Starting from version 0.4.0, Coco Server includes the Google Drive Connector as a built-in feature.\nStep 1: Access Connector Settings #  After installation and initialization, navigate to the Coco Server admin panel:\nAs shown below:\nStep 2: Configure Google Drive OAuth #  Click the edit button to enter the configuration page.\nConfigure the following fields based on your Google OAuth credentials:\n Client ID Client Secret Redirect URI Auth URI Token URI  Then click the Save button to store the configuration.\n ⚠️ Upgrade Note for Older Versions:\nIf you\u0026rsquo;re upgrading from an earlier version, make sure to delete the existing data directory first:\nrm -rf data Then restart Coco Server and reinitialize the system.\n Connect to Your Google Drive #  To add a Google Drive data source, go to the Coco Server admin panel and click the left-side menu Data Source, as shown below:\nClick the Add button to open the connector type selection page, as shown below:\nThen, hover over the Google Drive connector card and click the Add button that appears:\nClick the Connect button, and the page will redirect to Google for OAuth authorization.\nOnce authorized successfully, the new Google Drive data source will appear in your data source list.\n","subcategory":null,"summary":"","tags":null,"title":"Google Drive","url":"/coco-server/main/docs/references/connectors/google_drive/"},{"category":null,"content":"Authentication #  Authentication Methods #  The API supports two methods of authentication:\n1. Login API #  Use the X-API-TOKEN header with your token value.\nExample request:\ncurl -XPOST http://localhost:9000/account/login -d'{ \u0026quot;password\u0026quot;:\u0026quot;mypassword\u0026quot; }' The response should be looks like this:\n{ \u0026quot;access_token\u0026quot;: \u0026quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NDA4Mjg5OTksInByb3ZpZGVyIjoic2ltcGxlIiwibG9naW4iOiJjb2NvLWRlZmF1bHQtdXNlciIsInVzZXJfaWQiOiJjb2NvLWRlZmF1bHQtdXNlciIsInJvbGVzIjpbXX0.iqn2uuyX7jE3H4earkW-0hbM2lK6q9Oy5lPUv0pVtLI\u0026quot;, \u0026quot;expire_in\u0026quot;: 86400, \u0026quot;id\u0026quot;: \u0026quot;coco-default-user\u0026quot;, \u0026quot;status\u0026quot;: \u0026quot;ok\u0026quot;, \u0026quot;username\u0026quot;: \u0026quot;coco-default-user\u0026quot; } The access_token can be used in Bearer Authorization.\n2. Bearer Authentication #  Use Basic Authentication by passing a Authorization header with the access_token returned by login API.\nExample request:\ncurl -XGET http://localhost:9000/\u0026lt;api_need_authentication\u0026gt; \\  -H \u0026#34;Authorization: Bearer \u0026lt;access_token\u0026gt;\u0026#34; The actual example should be looks like this:\ncurl -H \u0026quot;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NDA4Mjg5OTksInByb3ZpZGVyIjoic2ltcGxlIiwibG9naW4iOiJjb2NvLWRlZmF1bHQtdXNlciIsInVzZXJfaWQiOiJjb2NvLWRlZmF1bHQtdXNlciIsInJvbGVzIjpbXX0.iqn2uuyX7jE3H4earkW-0hbM2lK6q9Oy5lPUv0pVtLI\u0026quot; http://localhost:9000/account/profile 3. API Token Authentication #  Use the X-API-TOKEN header with your token value, how to get the X-API-TOKEN can be found in this doc: Request API Token\nExample request:\ncurl -XGET http://localhost:9000/account/profile \\ -H \u0026quot;X-API-TOKEN: xxxxx\u0026quot; ","subcategory":null,"summary":"","tags":null,"title":"Authentication","url":"/coco-server/main/docs/references/account/authentication/"}]