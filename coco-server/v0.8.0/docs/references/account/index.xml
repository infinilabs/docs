<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Account on Coco Server</title><link>/coco-server/v0.8.0/docs/references/account/</link><description>Recent content in Account on Coco Server</description><generator>Hugo -- gohugo.io</generator><atom:link href="/coco-server/v0.8.0/docs/references/account/index.xml" rel="self" type="application/rss+xml"/><item><title>Authentication</title><link>/coco-server/v0.8.0/docs/references/account/authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/v0.8.0/docs/references/account/authentication/</guid><description>Authentication # Authentication Methods # The API supports two methods of authentication:
1. Login API # Use the X-API-TOKEN header with your token value.
Example request:
curl -XPOST http://localhost:9000/account/login -d'{ &amp;quot;password&amp;quot;:&amp;quot;mypassword&amp;quot; }' The response should be looks like this:
{ &amp;quot;access_token&amp;quot;: &amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NDA4Mjg5OTksInByb3ZpZGVyIjoic2ltcGxlIiwibG9naW4iOiJjb2NvLWRlZmF1bHQtdXNlciIsInVzZXJfaWQiOiJjb2NvLWRlZmF1bHQtdXNlciIsInJvbGVzIjpbXX0.iqn2uuyX7jE3H4earkW-0hbM2lK6q9Oy5lPUv0pVtLI&amp;quot;, &amp;quot;expire_in&amp;quot;: 86400, &amp;quot;id&amp;quot;: &amp;quot;coco-default-user&amp;quot;, &amp;quot;status&amp;quot;: &amp;quot;ok&amp;quot;, &amp;quot;username&amp;quot;: &amp;quot;coco-default-user&amp;quot; } The access_token can be used in Bearer Authorization.
2. Bearer Authentication # Use Basic Authentication by passing a Authorization header with the access_token returned by login API.</description></item><item><title>API Token</title><link>/coco-server/v0.8.0/docs/references/account/access_token/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/v0.8.0/docs/references/account/access_token/</guid><description>API Token # Request Access Token # An API Token can be used in your own application to access Coco Server.
Example request:
curl -H &amp;quot;Authorization: Bearer &amp;lt;access_token&amp;gt;&amp;quot; -XPOST http://localhost:9000/auth/access_token</description></item><item><title>Modify Password</title><link>/coco-server/v0.8.0/docs/references/account/password/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/v0.8.0/docs/references/account/password/</guid><description>Modify Password # Modify the current user&amp;rsquo;s password.
curl -XPUT http://localhost:9000/account/password -d'{ &amp;quot;old_password&amp;quot;:&amp;quot;xxxx&amp;quot;, &amp;quot;new_password&amp;quot;:&amp;quot;xxxx&amp;quot; }'</description></item><item><title>Profile</title><link>/coco-server/v0.8.0/docs/references/account/profile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/v0.8.0/docs/references/account/profile/</guid><description>Profile API # Profile API Reference # Profile # Below is the field description for the profile object.
Field Type Description id string Unique identifier for the user profile. username string User&amp;rsquo;s display name or username. email string User&amp;rsquo;s email address. avatar string (URL) URL to the user&amp;rsquo;s avatar image. created string (datetime) Timestamp when the profile was created.</description></item><item><title>Logout</title><link>/coco-server/v0.8.0/docs/references/account/logout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/coco-server/v0.8.0/docs/references/account/logout/</guid><description>Logout # Logout API # The Logout API securely logs the user out from the COCO server.
Example request:
curl -XPOST http://localhost:9000/account/logout</description></item></channel></rss>